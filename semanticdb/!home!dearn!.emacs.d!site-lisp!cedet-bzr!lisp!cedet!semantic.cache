;; Object cedet/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "cedet/"
  :tables
  (list
    (semanticdb-table "mode-local.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl" include nil nil [1786 1799])
            ("mode-local-map-file-buffers" function (:arguments ("function" "predicate" "buffers")) nil [1824 2498])
            ("get-mode-local-parent" function (:arguments ("mode")) nil [2500 2699])
            ("mode-local-equivalent-mode-p" function (:arguments ("mode")) nil [2835 3079])
            ("mode-local-map-mode-buffers" function (:arguments ("function" "modes")) nil [3081 3551])
            ("mode-local-init-hook" variable nil nil [3576 3711])
            ("mode-local-changed-mode-buffers" variable nil nil [3713 3818])
            ("mode-local--init-mode" variable nil nil [3820 3854])
            ("mode-local-initialized-p" function nil nil [3856 4116])
            ("mode-local-post-major-mode-change" function nil nil [4118 4724])
            ("mode-local-on-major-mode-change" function nil nil [4726 4956])
            ("set-mode-local-parent" function (:arguments ("mode" "parent")) nil [4979 5474])
            ("define-child-mode" function (:arguments ("mode" "parent" "docstring")) nil [5476 5760])
            ("mode-local-use-bindings-p" function (:arguments ("this-mode" "desired-mode")) nil [5762 6054])
            ("mode-local-symbol-table" variable nil nil [6083 6290])
            ("make-variable-buffer-local" code nil nil [6291 6344])
            ("mode-local-active-mode" variable nil nil [6346 6426])
            ("new-mode-local-bindings" function nil nil [6428 6537])
            ("mode-local-bind" function (:arguments ("bindings" "plist" "mode")) nil [6539 9652])
            ("mode-local-symbol" function (:arguments ("symbol" "mode")) nil [9654 10538])
            ("mode-local-symbol-value" function (:arguments ("symbol" "mode" "property")) nil [10540 11114])
            ("activate-mode-local-bindings" function (:arguments ("mode")) nil [11145 12889])
            ("deactivate-mode-local-bindings" function (:arguments ("mode")) nil [12891 13567])
            ("with-mode-local-symbol" function (:arguments ("mode" "body")) nil [13569 14965])
            ("put" code nil nil [14966 15019])
            ("with-mode-local" function (:arguments ("mode" "body")) nil [15021 15404])
            ("put" code nil nil [15405 15451])
            ("mode-local-value" function (:arguments ("mode" "sym")) nil [15454 15650])
            ("setq-mode-local" function (:arguments ("mode" "args")) nil [15652 16817])
            ("defvar-mode-local" function (:arguments ("mode" "sym" "val" "docstring")) nil [16819 17106])
            ("put" code nil nil [17107 17160])
            ("defconst-mode-local" function (:arguments ("mode" "sym" "val" "docstring")) nil [17162 17549])
            ("put" code nil nil [17550 17605])
            ("make-obsolete-overload" function (:arguments ("old" "new" "when")) nil [17636 17959])
            ("overload-obsoleted-by" function (:arguments ("overload")) nil [17961 18139])
            ("overload-that-obsolete" function (:arguments ("overload")) nil [18141 18341])
            ("fetch-overload" function (:arguments ("overload")) nil [18343 18832])
            ("mode-local--override" function (:arguments ("name" "args" "body")) nil [18834 19512])
            ("mode-local--expand-overrides" function (:arguments ("name" "args" "body")) nil [19514 20413])
            ("mode-local--overload-body" function (:arguments ("name" "args" "body")) nil [20415 20808])
            ("put" code nil nil [20825 20878])
            ("define-overloadable-function" function (:arguments ("name" "args" "docstring" "body")) nil [20880 22190])
            ("put" code nil nil [22191 22240])
            ("defalias" code nil nil [22242 22299])
            ("function-overload-p" function (:arguments ("symbol")) nil [22301 22474])
            ("define-mode-local-override" function (:arguments ("name" "mode" "args" "docstring" "body")) nil [22476 23432])
            ("mode-local-read-function" function (:arguments ("prompt" "initial" "hist" "default")) nil [23458 23744])
            ("overload-docstring-extension" function (:arguments ("overload")) nil [23767 24416])
            ("mode-local-augment-function-help" function (:arguments ("symbol")) nil [24418 24949])
            ("mode-local-print-binding" function (:arguments ("symbol")) nil [24984 25379])
            ("mode-local-print-bindings" function (:arguments ("table")) nil [25381 26610])
            ("mode-local-describe-bindings-2" function (:arguments ("buffer-or-mode")) nil [26612 27532])
            ("mode-local-describe-bindings-1" function (:arguments ("buffer-or-mode" "interactive-p")) nil [27534 28451])
            ("describe-mode-local-bindings" function
               (:user-visible-flag t
                :arguments ("buffer"))
                nil [28453 28685])
            ("describe-mode-local-bindings-in-mode" function
               (:user-visible-flag t
                :arguments ("mode"))
                nil [28687 29074])
            ("mode-local-setup-edebug-specs" function nil nil [29699 30306])
            ("add-hook" code nil nil [30308 30368])
            ("add-hook" code nil nil [30370 30431])
            ("add-hook" code nil nil [30432 30499])
            ("mode-local" package nil nil [30501 30522]))          
      :file "mode-local.el"
      :pointmax 30552
      :fsize 30551
      :lastmodtime '(21162 51904 690551 0)
      :unmatched-syntax '((close-paren 1799 . 1800) (symbol 1768 . 1785) (open-paren 1767 . 1768)))
    (semanticdb-table "semantic.el"
      :file "semantic.el"
      :fsize 50486
      :lastmodtime '(21215 60858 659039 0))
    (semanticdb-table "fame.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("fame-valid-levels" variable
               (:constant-flag t
                :default-value (quote (:error :warning :info :debug)))
                nil [2596 2684])
            ("fame-valid-level-values" variable
               (:constant-flag t
                :default-value (quote (t nolog temp temp-nolog log none)))
                nil [2686 2790])
            ("fame-default-level-values" variable
               (:constant-flag t
                :default-value (quote (:debug log :info temp :warning t :error t)))
                nil [2792 2920])
            ("define-widget" code nil nil [2922 3298])
            ("define-widget" code nil nil [3300 3397])
            ("define-widget" code nil nil [3399 3887])
            ("fame" customgroup (:user-visible-flag t) nil [3889 3982])
            ("fame-temp-message-delay" variable
               (:user-visible-flag t
                :default-value 1)
                nil [3984 4102])
            ("if" code nil nil [6365 7595])
            ("condition-case" code nil nil [6250 6309])
            ("fame-log-message" function (:arguments ("args")) nil [5509 6188])
            ("if" code nil nil [4926 5401])
            ("if" code nil nil [4377 4866])
            ("defalias" code nil nil [4216 4316])
            ("fame-temp-message" function (:arguments ("args")) nil [7601 7878])
            ("fame-temp-message-nolog" function (:arguments ("args")) nil [7880 8182])
            ("fame-check-level" function (:arguments ("level")) nil [8219 8470])
            ("fame-check-level-value" function (:arguments ("value")) nil [8472 8747])
            ("fame-check-channel" function (:arguments ("channel")) nil [8749 8999])
            ("fame-check-channel-levels" function (:arguments ("levels")) nil [9001 9465])
            ("fame-channel-symbol" function (:arguments ("channel")) nil [9467 9628])
            ("fame-channel-levels" function (:arguments ("channel")) nil [9630 9944])
            ("fame-level-display" function (:arguments ("channel" "level")) nil [9946 10155])
            ("fame-send-functions-alist" variable
               (:constant-flag t
                :default-value (quote ((none) (log . fame-log-message) (temp . fame-temp-message) (temp-nolog . fame-temp-message-nolog) (nolog . fame-message-nolog) (t . message))))
                nil [10194 10440])
            ("fame-send" function (:arguments ("channel" "level" "args")) nil [10442 10819])
            ("fame-send-debug" function (:arguments ("channel" "args")) nil [10821 11029])
            ("fame-send-info" function (:arguments ("channel" "args")) nil [11031 11246])
            ("fame-send-warning" function (:arguments ("channel" "args")) nil [11248 11462])
            ("fame-send-error" function (:arguments ("channel" "args")) nil [11464 11673])
            ("define-fame-channel" function (:arguments ("channel" "default" "docstring")) nil [11719 14554])
            ("fame" package nil nil [14556 14571]))          
      :file "fame.el"
      :pointmax 14595
      :fsize 14594
      :lastmodtime '(21162 51904 690551 0)
      :unmatched-syntax '((close-paren 7598 . 7599) (punctuation 5508 . 5509) (symbol 4136 . 4152) (open-paren 4135 . 4136))))
  :file "!home!dearn!.emacs.d!site-lisp!cedet-bzr!lisp!cedet!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
