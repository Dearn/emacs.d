;; Object lisp/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "lisp/"
  :tables
  (list
    (semanticdb-table "simple.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("declare-function" code nil nil [1016 1078])
            ("declare-function" code nil nil [1079 1119])
            ("compilation-current-error" variable nil nil [1141 1175])
            ("compilation-context-lines" variable nil nil [1176 1210])
            ("idle-update-delay" variable (:default-value 0.5) nil [1212 1509])
            ("killing" customgroup (:user-visible-flag t) nil [1511 1585])
            ("paren-matching" customgroup (:user-visible-flag t) nil [1587 1689])
            ("next-error" customgroup (:user-visible-flag t) nil [1726 1827])
            ("next-error" variable
               (:default-value (quote ((t (:inherit region))))
                :type "face")
                nil [1829 1960])
            ("next-error-highlight" variable (:default-value 0.5) nil [1962 2717])
            ("next-error-highlight-no-select" variable (:default-value 0.5) nil [2719 3412])
            ("next-error-recenter" variable nil nil [3414 3776])
            ("next-error-hook" variable nil nil [3778 3919])
            ("next-error-highlight-timer" variable nil nil [3921 3960])
            ("next-error-overlay-arrow-position" variable nil nil [3962 4008])
            ("put" code nil nil [4009 4087])
            ("add-to-list" code nil nil [4088 4165])
            ("next-error-last-buffer" variable nil nil [4167 4394])
            ("next-error-function" variable nil nil [4396 4854])
            ("make-variable-buffer-local" code nil nil [4855 4904])
            ("next-error-move-function" variable nil nil [4906 5219])
            ("make-variable-buffer-local" code nil nil [5220 5274])
            ("next-error-buffer-p" function (:arguments ("buffer" "avoid-current" "extra-test-inclusive" "extra-test-exclusive")) nil [5276 6319])
            ("next-error-find-buffer" function (:arguments ("avoid-current" "extra-test-inclusive" "extra-test-exclusive")) nil [6321 8603])
            ("next-error" function
               (:user-visible-flag t
                :arguments ("arg" "reset"))
                nil [8605 10374])
            ("next-error-internal" function nil nil [10376 10797])
            ("defalias" code nil nil [10799 10838])
            ("defalias" code nil nil [10839 10873])
            ("previous-error" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [10875 11192])
            ("first-error" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [11194 11462])
            ("next-error-no-select" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [11464 11916])
            ("previous-error-no-select" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [11918 12296])
            ("next-error-follow-last-line" variable nil nil [12367 12407])
            ("define-minor-mode" code nil nil [12409 13117])
            ("next-error-follow-mode-post-command-hook" function nil nil [13233 13566])
            ("fundamental-mode" function (:user-visible-flag t) nil [13575 13784])
            ("special-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (suppress-keymap map) (define-key map "q" (quote quit-window)) (define-key map " " (quote scroll-up-command)) (define-key map [33554464] (quote scroll-down-command)) (define-key map "" (quote scroll-down-command)) (define-key map "?" (quote describe-mode)) (define-key map "h" (quote describe-mode)) (define-key map ">" (quote end-of-buffer)) (define-key map "<" (quote beginning-of-buffer)) (define-key map "g" (quote revert-buffer)) map)) nil [13862 14346])
            ("put" code nil nil [14348 14388])
            ("define-derived-mode" code nil nil [14389 14534])
            ("hard-newline" variable (:default-value (propertize "
" (quote hard) t (quote rear-nonsticky) (quote (hard)))) nil [14567 14700])
            ("newline" function
               (:user-visible-flag t
                :arguments ("arg" "interactive"))
                nil [14702 17521])
            ("set-hard-newline-properties" function (:arguments ("from" "to")) nil [17523 17871])
            ("open-line" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [17873 18585])
            ("split-line" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [18587 19388])
            ("delete-indentation" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [19390 20103])
            ("defalias" code nil nil [20105 20147])
            ("delete-blank-lines" function (:user-visible-flag t) nil [20166 21593])
            ("delete-trailing-lines" variable (:default-value t) nil [21595 21881])
            ("delete-trailing-whitespace" function
               (:user-visible-flag t
                :arguments ("start" "end"))
                nil [21883 23689])
            ("newline-and-indent" function (:user-visible-flag t) nil [23691 24122])
            ("reindent-then-newline-and-indent" function (:user-visible-flag t) nil [24124 25350])
            ("read-quoted-char-radix" variable
               (:user-visible-flag t
                :default-value 8)
                nil [25352 25573])
            ("read-quoted-char" function (:arguments ("prompt")) nil [25575 27934])
            ("quoted-insert" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [27936 29849])
            ("forward-to-indentation" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [29851 30044])
            ("backward-to-indentation" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [30046 30245])
            ("back-to-indentation" function (:user-visible-flag t) nil [30247 30537])
            ("fixup-whitespace" function (:user-visible-flag t) nil [30539 30878])
            ("delete-horizontal-space" function
               (:user-visible-flag t
                :arguments ("backward-only"))
                nil [30880 31318])
            ("just-one-space" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [31320 31569])
            ("cycle-spacing--context" variable nil nil [31571 31808])
            ("cycle-spacing" function
               (:user-visible-flag t
                :arguments ("n" "preserve-nl-back" "single-shot"))
                nil [31810 33965])
            ("beginning-of-buffer" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [33968 34869])
            ("put" code nil nil [34870 34960])
            ("end-of-buffer" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [34962 36187])
            ("put" code nil nil [36188 36267])
            ("delete-active-region" variable (:default-value t) nil [36269 36806])
            ("region-extract-function" variable (:default-value (lambda (delete) (when (region-beginning) (if (eq delete (quote delete-only)) (delete-region (region-beginning) (region-end)) (filter-buffer-substring (region-beginning) (region-end) delete))))) nil [36808 37351])
            ("delete-backward-char" function
               (:user-visible-flag t
                :arguments ("n" "killflag"))
                nil [37353 38772])
            ("put" code nil nil [38773 38831])
            ("delete-forward-char" function
               (:user-visible-flag t
                :arguments ("n" "killflag"))
                nil [38833 39758])
            ("mark-whole-buffer" function (:user-visible-flag t) nil [39760 40164])
            ("goto-line" function
               (:user-visible-flag t
                :arguments ("line" "buffer"))
                nil [40208 42441])
            ("put" code nil nil [42442 42490])
            ("count-words-region" function
               (:user-visible-flag t
                :arguments ("start" "end" "arg"))
                nil [42492 43174])
            ("count-words" function
               (:user-visible-flag t
                :arguments ("start" "end"))
                nil [43176 43960])
            ("count-words--buffer-message" function nil nil [43962 44115])
            ("count-words--message" function (:arguments ("str" "start" "end")) nil [44117 44442])
            ("define-obsolete-function-alias" code nil nil [44444 44523])
            ("what-line" function (:user-visible-flag t) nil [44525 44876])
            ("count-lines" function (:arguments ("start" "end")) nil [44878 45715])
            ("line-number-at-pos" function (:arguments ("pos")) nil [45717 46177])
            ("what-cursor-position" function
               (:user-visible-flag t
                :arguments ("detail"))
                nil [46179 50516])
            ("read-expression-map" variable (:default-value (let ((m (make-sparse-keymap))) (define-key m "\211" (quote completion-at-point)) (define-key m "	" (quote completion-at-point)) (set-keymap-parent m minibuffer-local-map) m)) nil [50581 50896])
            ("read-minibuffer" function (:arguments ("prompt" "initial-contents")) nil [50898 51421])
            ("eval-minibuffer" function (:arguments ("prompt" "initial-contents")) nil [51423 51880])
            ("minibuffer-completing-symbol" variable nil nil [51882 51985])
            ("make-obsolete-variable" code nil nil [51986 52056])
            ("minibuffer-default" variable nil nil [52058 52251])
            ("eval-expression-print-level" variable (:default-value 4) nil [52253 52483])
            ("eval-expression-print-length" variable (:default-value 12) nil [52485 52718])
            ("eval-expression-debug-on-error" variable (:default-value t) nil [52720 52929])
            ("eval-expression-print-format" function (:arguments ("value")) nil [52931 53575])
            ("eval-expression-minibuffer-setup-hook" variable nil nil [53577 53691])
            ("read--expression" function (:arguments ("prompt" "initial-contents")) nil [53693 54171])
            ("eval-expression" function
               (:user-visible-flag t
                :arguments ("exp" "insert-value"))
                nil [54301 56575])
            ("edit-and-eval-command" function (:arguments ("prompt" "command")) nil [56577 57504])
            ("repeat-complex-command" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [57506 59553])
            ("repeat-complex-command--called-interactively-skip" function (:arguments ("i" "_frame1" "frame2")) nil [59555 59772])
            ("extended-command-history" variable nil nil [59774 59811])
            ("read-extended-command" function nil nil [59813 61337])
            ("suggest-key-bindings" variable (:default-value t) nil [61339 61705])
            ("execute-extended-command" function
               (:user-visible-flag t
                :arguments ("prefixarg" "command-name"))
                nil [61707 64175])
            ("command-execute" function (:arguments ("cmd" "record-flag" "keys" "special")) nil [64177 66464])
            ("minibuffer-history" variable nil nil [66467 66720])
            ("minibuffer-history-sexp-flag" variable nil nil [66721 67036])
            ("setq" code nil nil [67037 67091])
            ("setq" code nil nil [67092 67130])
            ("minibuffer-history-search-history" variable nil nil [67156 67202])
            ("minibuffer-text-before-history" variable nil nil [67204 67404])
            ("add-hook" code nil nil [67406 67470])
            ("minibuffer-history-initialize" function nil nil [67472 67556])
            ("minibuffer-avoid-prompt" function (:arguments ("_new" "_old")) nil [67558 67720])
            ("minibuffer-history-case-insensitive-variables" variable nil nil [67722 68112])
            ("previous-matching-history-element" function
               (:user-visible-flag t
                :arguments ("regexp" "n"))
                nil [68114 70958])
            ("next-matching-history-element" function
               (:user-visible-flag t
                :arguments ("regexp" "n"))
                nil [70960 72014])
            ("minibuffer-temporary-goal-position" variable nil nil [72016 72063])
            ("minibuffer-default-add-function" variable (:default-value (quote minibuffer-default-add-completions)) nil [72065 72705])
            ("minibuffer-default-add-done" variable nil nil [72707 73030])
            ("make-variable-buffer-local" code nil nil [73032 73089])
            ("minibuffer-default-add-completions" function nil nil [73091 73545])
            ("goto-history-element" function
               (:user-visible-flag t
                :arguments ("nabs"))
                nil [73547 75739])
            ("next-history-element" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [75741 75992])
            ("previous-history-element" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [75994 76252])
            ("next-complete-history-element" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [76254 76910])
            ("previous-complete-history-element" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [76912 77197])
            ("minibuffer-prompt-width" function nil nil [77256 77545])
            ("add-hook" code nil nil [77578 77645])
            ("minibuffer-history-isearch-message-overlay" variable nil nil [77647 77698])
            ("make-variable-buffer-local" code nil nil [77699 77771])
            ("minibuffer-history-isearch-setup" function nil nil [77773 78413])
            ("minibuffer-history-isearch-end" function nil nil [78415 78645])
            ("minibuffer-history-isearch-search" function nil nil [78647 80552])
            ("minibuffer-history-isearch-message" function (:arguments ("c-q-hack" "ellipsis")) nil [80554 81951])
            ("minibuffer-history-isearch-wrap" function nil nil [81953 82570])
            ("minibuffer-history-isearch-push-state" function nil nil [82572 82903])
            ("minibuffer-history-isearch-pop-state" function (:arguments ("_cmd" "hist-pos")) nil [82905 83117])
            ("define-obsolete-function-alias" code nil nil [83195 83257])
            ("undo-equiv-table" variable
               (:constant-flag t
                :default-value (make-hash-table :test (quote eq) :weakness t))
                nil [83259 83502])
            ("undo-in-region" variable nil nil [83504 83608])
            ("undo-no-redo" variable nil nil [83610 83685])
            ("pending-undo-list" variable nil nil [83687 83838])
            ("undo" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [83840 88248])
            ("buffer-disable-undo" function
               (:user-visible-flag t
                :arguments ("buffer"))
                nil [88250 88531])
            ("undo-only" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [88533 88795])
            ("undo-in-progress" variable nil nil [88797 88928])
            ("undo-more" function (:arguments ("n")) nil [88930 89625])
            ("primitive-undo" function (:arguments ("n" "list")) nil [89627 95032])
            ("undo-copy-list" function (:arguments ("list")) nil [95057 95155])
            ("undo-copy-list-1" function (:arguments ("elt")) nil [95157 95266])
            ("undo-start" function (:arguments ("beg" "end")) nil [95268 95856])
            ("undo-adjusted-markers" variable nil nil [95858 95888])
            ("undo-make-selective-list" function (:arguments ("start" "end")) nil [95890 98606])
            ("undo-elt-in-region" function (:arguments ("undo-elt" "start" "end")) nil [98608 99781])
            ("undo-elt-crosses-region" function (:arguments ("undo-elt" "start" "end")) nil [99783 100291])
            ("undo-delta" function (:arguments ("undo-elt")) nil [100462 100795])
            ("undo-ask-before-discard" variable nil nil [100797 101563])
            ("undo-extra-outer-limit" variable nil nil [101565 101841])
            ("make-variable-buffer-local" code nil nil [101842 101894])
            ("setq" code nil nil [102179 102238])
            ("undo-outer-limit-truncate" function (:arguments ("size")) nil [102239 103928])
            ("password-word-equivalents" variable (:default-value (quote ("password" "passphrase" "pass phrase" "암호" "パスワード" "ପ୍ରବେଶ ସଙ୍କେତ" "ពាក្យសម្ងាត់" "adgangskode" "contraseña" "contrasenya" "geslo" "hasło" "heslo" "iphasiwedi" "jelszó" "lösenord" "lozinka" "mật khẩu" "mot de passe" "parola" "pasahitza" "passord" "passwort" "pasvorto" "salasana" "senha" "slaptažodis" "wachtwoord" "كلمة السر" "ססמה" "лозинка" "пароль" "गुप्तशब्द" "शब्दकूट" "પાસવર્ડ" "సంకేతపదము" "ਪਾਸਵਰਡ" "ಗುಪ್ತಪದ" "கடவுச்சொல்" "അടയാളവാക്ക്" "গুপ্তশব্দ" "পাসওয়ার্ড" "රහස්පදය" "密码" "密碼"))) nil [103931 105309])
            ("shell-command-history" variable nil nil [105311 105501])
            ("shell-command-switch" variable (:default-value (purecopy "-c")) nil [105503 105617])
            ("shell-command-default-error-buffer" variable nil nil [105619 105934])
            ("declare-function" code nil nil [105936 106002])
            ("declare-function" code nil nil [106003 106089])
            ("minibuffer-default-add-shell-commands" function (:user-visible-flag t) nil [106091 106795])
            ("declare-function" code nil nil [106797 106848])
            ("minibuffer-local-shell-command-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map minibuffer-local-map) (define-key map "	" (quote completion-at-point)) map)) nil [106850 107095])
            ("read-shell-command" function (:arguments ("prompt" "initial-contents" "hist" "args")) nil [107097 107726])
            ("async-shell-command-buffer" variable (:default-value (quote confirm-new-buffer)) nil [107728 108981])
            ("async-shell-command" function
               (:user-visible-flag t
                :arguments ("command" "output-buffer" "error-buffer"))
                nil [108983 110288])
            ("shell-command" function
               (:user-visible-flag t
                :arguments ("command" "output-buffer" "error-buffer"))
                nil [110290 118252])
            ("display-message-or-buffer" function (:arguments ("message" "buffer-name" "not-this-window" "frame")) nil [118254 120677])
            ("shell-command-sentinel" function (:arguments ("process" "signal")) nil [120773 120984])
            ("shell-command-on-region" function
               (:user-visible-flag t
                :arguments ("start" "end" "command" "output-buffer" "replace" "error-buffer" "display-error-buffer"))
                nil [120986 128242])
            ("shell-command-to-string" function (:arguments ("command")) nil [128244 128504])
            ("process-file" function (:arguments ("program" "infile" "buffer" "display" "args")) nil [128506 129958])
            ("process-file-side-effects" variable (:default-value t) nil [129960 130386])
            ("start-file-process" function (:arguments ("name" "buffer" "program" "program-args")) nil [130388 131273])
            ("tabulated-list-format" variable nil nil [131295 131325])
            ("tabulated-list-entries" variable nil nil [131326 131357])
            ("tabulated-list-sort-key" variable nil nil [131358 131390])
            ("declare-function" code nil nil [131391 131457])
            ("declare-function" code nil nil [131458 131557])
            ("process-menu-query-only" variable nil nil [131559 131595])
            ("define-derived-mode" code nil nil [131597 132093])
            ("list-processes--refresh" function nil nil [132095 133723])
            ("process-menu-visit-buffer" function (:arguments ("button")) nil [133725 133822])
            ("list-processes" function
               (:user-visible-flag t
                :arguments ("query-only" "buffer"))
                nil [133824 134787])
            ("universal-argument-map" variable (:default-value (let ((map (make-sparse-keymap)) (universal-argument-minus (\` (menu-item "" negative-argument :filter (\, (lambda (cmd) (if (integerp prefix-arg) nil cmd))))))) (define-key map [switch-frame] (lambda (e) (interactive "e") (handle-switch-frame e) (universal-argument--mode))) (define-key map [21] (quote universal-argument-more)) (define-key map [45] universal-argument-minus) (define-key map [48] (quote digit-argument)) (define-key map [49] (quote digit-argument)) (define-key map [50] (quote digit-argument)) (define-key map [51] (quote digit-argument)) (define-key map [52] (quote digit-argument)) (define-key map [53] (quote digit-argument)) (define-key map [54] (quote digit-argument)) (define-key map [55] (quote digit-argument)) (define-key map [56] (quote digit-argument)) (define-key map [57] (quote digit-argument)) (define-key map [kp-0] (quote digit-argument)) (define-key map [kp-1] (quote digit-argument)) (define-key map [kp-2] (quote digit-argument)) (define-key map [kp-3] (quote digit-argument)) (define-key map [kp-4] (quote digit-argument)) (define-key map [kp-5] (quote digit-argument)) (define-key map [kp-6] (quote digit-argument)) (define-key map [kp-7] (quote digit-argument)) (define-key map [kp-8] (quote digit-argument)) (define-key map [kp-9] (quote digit-argument)) (define-key map [kp-subtract] universal-argument-minus) map)) nil [134790 136406])
            ("universal-argument--mode" function nil nil [136408 136488])
            ("universal-argument" function (:user-visible-flag t) nil [136490 137199])
            ("universal-argument-more" function (:arguments ("arg")) nil [137201 137639])
            ("negative-argument" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [137641 137981])
            ("digit-argument" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [137983 138717])
            ("filter-buffer-substring-functions" variable nil nil [138721 138837])
            ("make-obsolete-variable" code nil nil [138838 138962])
            ("filter-buffer-substring-function" variable (:default-value (function buffer-substring--filter)) nil [138964 139337])
            ("buffer-substring-filters" variable nil nil [139339 139819])
            ("make-obsolete-variable" code nil nil [139820 139935])
            ("filter-buffer-substring" function (:arguments ("beg" "end" "delete")) nil [139937 140663])
            ("buffer-substring--filter" function (:arguments ("beg" "end" "delete")) nil [140707 141227])
            ("interprogram-cut-function" variable nil nil [141271 141808])
            ("interprogram-paste-function" variable nil nil [141810 143231])
            ("kill-ring" variable nil nil [143272 143727])
            ("kill-ring-max" variable (:default-value 60) nil [143729 143864])
            ("kill-ring-yank-pointer" variable nil nil [143866 143967])
            ("save-interprogram-paste-before-kill" variable nil nil [143969 144471])
            ("kill-do-not-save-duplicates" variable nil nil [144473 144702])
            ("kill-new" function (:arguments ("string" "replace")) nil [144704 146730])
            ("kill-append" function (:arguments ("string" "before-p")) nil [146732 147146])
            ("yank-pop-change-selection" variable nil nil [147148 147496])
            ("current-kill" function (:arguments ("n" "do-not-move")) nil [147498 149156])
            ("kill-read-only-ok" variable nil nil [149207 149343])
            ("kill-region" function
               (:user-visible-flag t
                :arguments ("beg" "end" "region"))
                nil [149345 152068])
            ("copy-region-as-kill" function
               (:user-visible-flag t
                :arguments ("beg" "end" "region"))
                nil [152262 153162])
            ("kill-ring-save" function
               (:user-visible-flag t
                :arguments ("beg" "end" "region"))
                nil [153164 154220])
            ("indicate-copied-region" function (:arguments ("message-len")) nil [154222 155798])
            ("append-next-kill" function
               (:user-visible-flag t
                :arguments ("interactive"))
                nil [155800 156620])
            ("yank-handled-properties" variable (:default-value (quote ((font-lock-face . yank-handle-font-lock-face-property) (category . yank-handle-category-property)))) nil [156636 157461])
            ("yank-excluded-properties" variable (:default-value (quote (category field follow-link fontified font-lock-face help-echo intangible invisible keymap local-map mouse-face read-only yank-handler))) nil [157534 157997])
            ("yank-window-start" variable nil nil [157999 158029])
            ("yank-undo-function" variable nil nil [158030 158361])
            ("yank-pop" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [158363 160093])
            ("yank" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [160095 161542])
            ("rotate-yank-pointer" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [161544 161734])
            ("kill-forward-chars" function (:arguments ("arg")) nil [161799 161944])
            ("kill-backward-chars" function (:arguments ("arg")) nil [161993 162139])
            ("backward-delete-char-untabify-method" variable (:default-value (quote untabify)) nil [162141 162616])
            ("backward-delete-char-untabify" function
               (:user-visible-flag t
                :arguments ("arg" "killp"))
                nil [162618 163970])
            ("zap-to-char" function
               (:user-visible-flag t
                :arguments ("arg" "char"))
                nil [163972 164589])
            ("kill-whole-line" variable nil nil [164626 164771])
            ("kill-line" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [164773 166989])
            ("kill-whole-line" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [166991 168621])
            ("forward-visible-line" function (:arguments ("arg")) nil [168623 171113])
            ("end-of-visible-line" function nil nil [171115 171881])
            ("insert-buffer" function
               (:user-visible-flag t
                :arguments ("buffer"))
                nil [171884 172509])
            ("put" code nil nil [172510 172573])
            ("append-to-buffer" function
               (:user-visible-flag t
                :arguments ("buffer" "start" "end"))
                nil [172575 173475])
            ("prepend-to-buffer" function
               (:user-visible-flag t
                :arguments ("buffer" "start" "end"))
                nil [173477 174019])
            ("copy-to-buffer" function
               (:user-visible-flag t
                :arguments ("buffer" "start" "end"))
                nil [174021 174590])
            ("define-error" code nil nil [174593 174662])
            ("activate-mark-hook" variable nil nil [174664 174853])
            ("deactivate-mark-hook" variable nil nil [174855 174933])
            ("mark" function (:arguments ("force")) nil [174935 175559])
            ("declare-function" code nil nil [175593 175692])
            ("declare-function" code nil nil [175693 175793])
            ("deactivate-mark" function (:arguments ("force")) nil [175795 177832])
            ("activate-mark" function (:arguments ("no-tmm")) nil [177834 178231])
            ("set-mark" function (:arguments ("pos")) nil [178233 179257])
            ("use-empty-active-region" variable nil nil [179259 179755])
            ("use-region-p" function nil nil [179757 180363])
            ("region-active-p" function nil nil [180365 180733])
            ("redisplay-unhighlight-region-function" variable (:default-value (lambda (rol) (when (overlayp rol) (delete-overlay rol)))) nil [180736 180842])
            ("redisplay-highlight-region-function" variable (:default-value (lambda (start end window rol) (if (not (overlayp rol)) (let ((nrol (make-overlay start end))) (funcall redisplay-unhighlight-region-function rol) (overlay-put nrol (quote window) window) (overlay-put nrol (quote face) (quote region)) nrol) (unless (and (eq (overlay-buffer rol) (current-buffer)) (eq (overlay-start rol) start) (eq (overlay-end rol) end)) (move-overlay rol start end (current-buffer))) rol))) nil [180844 181388])
            ("redisplay--update-region-highlight" function (:arguments ("window")) nil [181390 182070])
            ("redisplay--update-region-highlights" function (:arguments ("windows")) nil [182072 182807])
            ("add-function" code nil nil [182809 182906])
            ("defvar-local" code nil nil [182909 183008])
            ("put" code nil nil [183009 183044])
            ("mark-ring-max" variable (:default-value 16) nil [183046 183191])
            ("global-mark-ring" variable nil nil [183193 183277])
            ("global-mark-ring-max" variable (:default-value 16) nil [183279 183440])
            ("pop-to-mark-command" function (:user-visible-flag t) nil [183442 183751])
            ("push-mark-command" function
               (:user-visible-flag t
                :arguments ("arg" "nomsg"))
                nil [183753 184164])
            ("set-mark-command-repeat-pop" variable nil nil [184166 184625])
            ("set-mark-command" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [184627 186975])
            ("push-mark" function (:arguments ("location" "nomsg" "activate")) nil [186977 188531])
            ("pop-mark" function nil nil [188533 188952])
            ("define-obsolete-function-alias" code nil nil [188954 189043])
            ("exchange-point-and-mark" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [189044 189928])
            ("shift-select-mode" variable (:default-value t) nil [189930 190502])
            ("handle-shift-selection" function nil nil [190504 191673])
            ("define-minor-mode" code nil nil [191675 192995])
            ("widen-automatically" variable (:default-value t) nil [192997 193331])
            ("non-essential" variable nil nil [193333 193731])
            ("pop-global-mark" function (:user-visible-flag t) nil [193733 194548])
            ("next-line-add-newlines" variable nil nil [194551 194725])
            ("next-line" function
               (:user-visible-flag t
                :arguments ("arg" "try-vscroll"))
                nil [194727 196983])
            ("put" code nil nil [196984 197032])
            ("previous-line" function
               (:user-visible-flag t
                :arguments ("arg" "try-vscroll"))
                nil [197034 198768])
            ("put" code nil nil [198769 198865])
            ("track-eol" variable nil nil [198867 199205])
            ("goal-column" variable nil nil [199207 199474])
            ("make-variable-buffer-local" code nil nil [199475 199516])
            ("temporary-goal-column" variable nil nil [199518 200035])
            ("line-move-ignore-invisible" variable (:default-value t) nil [200037 200221])
            ("line-move-visual" variable (:default-value t) nil [200223 200799])
            ("declare-function" code nil nil [200836 200896])
            ("default-font-height" function nil nil [200898 201415])
            ("default-line-height" function nil nil [201417 201852])
            ("window-screen-lines" function nil nil [201854 202434])
            ("line-move-partial" function (:arguments ("arg" "noerror" "to-end")) nil [202481 206254])
            ("line-move" function (:arguments ("arg" "noerror" "to-end" "try-vscroll")) nil [206578 208294])
            ("line-move-visual" function (:arguments ("arg" "noerror")) nil [208442 210509])
            ("line-move-1" function (:arguments ("arg" "noerror" "_to-end")) nil [210663 215336])
            ("line-move-finish" function (:arguments ("column" "opoint" "forward")) nil [215338 218475])
            ("line-move-to-column" function (:arguments ("col")) nil [218477 219856])
            ("move-end-of-line" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [219858 221213])
            ("move-beginning-of-line" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [221215 222747])
            ("put" code nil nil [222877 222911])
            ("set-goal-column" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [222913 223914])
            ("end-of-visual-line" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [223982 224546])
            ("beginning-of-visual-line" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [224548 225139])
            ("kill-visual-line" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [225141 226556])
            ("next-logical-line" function
               (:user-visible-flag t
                :arguments ("arg" "try-vscroll"))
                nil [226558 226927])
            ("previous-logical-line" function
               (:user-visible-flag t
                :arguments ("arg" "try-vscroll"))
                nil [226929 227308])
            ("visual-line" customgroup (:user-visible-flag t) nil [227310 227411])
            ("visual-line-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map [remap kill-line] (quote kill-visual-line)) (define-key map [remap move-beginning-of-line] (quote beginning-of-visual-line)) (define-key map [remap move-end-of-line] (quote end-of-visual-line)) map)) nil [227413 227901])
            ("visual-line-fringe-indicators" variable (:default-value (quote (nil nil))) nil [227903 229090])
            ("visual-line--saved-state" variable nil nil [229092 229129])
            ("define-minor-mode" code nil nil [229131 230772])
            ("turn-on-visual-line-mode" function nil nil [230774 230832])
            ("define-globalized-minor-mode" code nil nil [230834 230932])
            ("transpose-chars" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [230936 231370])
            ("transpose-words" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [231372 231816])
            ("transpose-sexps" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [231818 233289])
            ("transpose-lines" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [233291 233898])
            ("transpose-subr" function (:arguments ("mover" "arg" "special")) nil [234049 235247])
            ("transpose-subr-1" function (:arguments ("pos1" "pos2")) nil [235249 236253])
            ("backward-word" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [236256 236508])
            ("mark-word" function
               (:user-visible-flag t
                :arguments ("arg" "allow-extend"))
                nil [236510 237262])
            ("kill-word" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [237264 237476])
            ("backward-kill-word" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [237478 237669])
            ("current-word" function (:arguments ("strict" "really-word")) nil [237671 239151])
            ("fill-prefix" variable nil nil [239154 239320])
            ("make-variable-buffer-local" code nil nil [239321 239362])
            ("put" code nil nil [239363 239420])
            ("auto-fill-inhibit-regexp" variable nil nil [239422 239588])
            ("do-auto-fill" function nil nil [239590 242890])
            ("comment-line-break-function" variable (:default-value (quote comment-indent-new-line)) nil [242892 243218])
            ("default-indent-new-line" function
               (:user-visible-flag t
                :arguments ("soft"))
                nil [243220 244327])
            ("normal-auto-fill-function" variable (:default-value (quote do-auto-fill)) nil [244329 244485])
            ("put" code nil nil [244487 244549])
            ("put" code nil nil [244723 244775])
            ("define-minor-mode" code nil nil [244777 245522])
            ("auto-fill-function" function nil nil [245589 245696])
            ("turn-on-auto-fill" function nil nil [245698 245791])
            ("turn-off-auto-fill" function nil nil [245793 245889])
            ("custom-add-option" code nil nil [245891 245945])
            ("set-fill-column" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [245947 246785])
            ("set-selective-display" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [246788 247578])
            ("defvaralias" code nil nil [247580 247638])
            ("toggle-truncate-lines" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [247640 248420])
            ("toggle-word-wrap" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [248422 248966])
            ("overwrite-mode-textual" variable (:default-value (purecopy " Ovwrt")) nil [248968 249085])
            ("overwrite-mode-binary" variable (:default-value (purecopy " Bin Ovwrt")) nil [249086 249213])
            ("define-minor-mode" code nil nil [249215 249948])
            ("define-minor-mode" code nil nil [249950 250878])
            ("define-minor-mode" code nil nil [250880 251356])
            ("define-minor-mode" code nil nil [251358 251662])
            ("define-minor-mode" code nil nil [251664 251972])
            ("define-minor-mode" code nil nil [251974 252970])
            ("paren-blinking" customgroup (:user-visible-flag t) nil [252973 253104])
            ("blink-matching-paren" variable (:default-value t) nil [253106 253255])
            ("blink-matching-paren-on-screen" variable (:default-value t) nil [253257 253656])
            ("blink-matching-paren-distance" variable (:default-value (* 100 1024)) nil [253658 253983])
            ("blink-matching-delay" variable (:default-value 1) nil [253985 254121])
            ("blink-matching-paren-dont-ignore-comments" variable nil nil [254123 254391])
            ("blink-matching-check-mismatch" function (:arguments ("start" "end")) nil [254393 255378])
            ("blink-matching-check-function" variable (:default-value (function blink-matching-check-mismatch)) nil [255380 255746])
            ("blink-matching--overlay" variable (:default-value (let ((ol (make-overlay (point) (point) nil t))) (overlay-put ol (quote face) (quote show-paren-match)) (delete-overlay ol) ol)) nil [255748 255958])
            ("blink-matching-open" function (:user-visible-flag t) nil [255960 260190])
            ("blink-paren-function" variable (:default-value (quote blink-matching-open)) nil [260192 260381])
            ("blink-paren-post-self-insert-function" function nil nil [260383 260910])
            ("put" code nil nil [260912 260970])
            ("add-hook" code nil nil [260972 261351])
            ("keyboard-quit" function (:user-visible-flag t) nil [261529 262022])
            ("buffer-quit-function" variable nil nil [262024 262274])
            ("keyboard-escape-quit" function (:user-visible-flag t) nil [262276 263102])
            ("play-sound-file" function
               (:user-visible-flag t
                :arguments ("file" "volume" "device"))
                nil [263104 263499])
            ("read-mail-command" variable (:default-value (quote rmail)) nil [263503 264020])
            ("mail-user-agent" variable (:default-value (quote message-user-agent)) nil [264022 265566])
            ("compose-mail-user-agent-warnings" variable (:default-value t) nil [265568 265893])
            ("rfc822-goto-eoh" function nil nil [265895 266299])
            ("mail-encode-mml" variable nil nil [266341 266480])
            ("compose-mail" function
               (:user-visible-flag t
                :arguments ("to" "subject" "other-headers" "continue" "switch-function" "yank-action" "send-actions" "return-action"))
                nil [266482 269168])
            ("compose-mail-other-window" function
               (:user-visible-flag t
                :arguments ("to" "subject" "other-headers" "continue" "yank-action" "send-actions" "return-action"))
                nil [269170 269561])
            ("compose-mail-other-frame" function
               (:user-visible-flag t
                :arguments ("to" "subject" "other-headers" "continue" "yank-action" "send-actions" "return-action"))
                nil [269563 269951])
            ("set-variable-value-history" variable nil nil [269955 270140])
            ("set-variable" function
               (:user-visible-flag t
                :arguments ("variable" "value" "make-local"))
                nil [270142 272981])
            ("completion-list-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map [mouse-2] (quote mouse-choose-completion)) (define-key map [follow-link] (quote mouse-face)) (define-key map [down-mouse-2] nil) (define-key map "" (quote choose-completion)) (define-key map "" (quote delete-completion-window)) (define-key map [left] (quote previous-completion)) (define-key map [right] (quote next-completion)) (define-key map "q" (quote quit-window)) (define-key map "z" (quote kill-this-buffer)) map)) nil [273036 273579])
            ("put" code nil nil [273647 273695])
            ("completion-reference-buffer" variable nil nil [273697 273926])
            ("completion-no-auto-exit" variable nil nil [273928 274109])
            ("completion-base-position" variable nil nil [274111 274481])
            ("completion-list-insert-choice-function" variable (:default-value (function completion--replace)) nil [274483 274782])
            ("completion-base-size" variable nil nil [274784 275239])
            ("make-obsolete-variable" code nil nil [275240 275319])
            ("delete-completion-window" function (:user-visible-flag t) nil [275321 275695])
            ("previous-completion" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [275697 275828])
            ("next-completion" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [275830 277080])
            ("choose-completion" function
               (:user-visible-flag t
                :arguments ("event"))
                nil [277082 278974])
            ("choose-completion-guess-base-position" function (:arguments ("string")) nil [279058 279896])
            ("choose-completion-delete-max-match" function (:arguments ("string")) nil [279898 280090])
            ("choose-completion-string-functions" variable nil nil [280092 280812])
            ("choose-completion-string" function (:arguments ("choice" "buffer" "base-position" "insert-function")) nil [280814 284224])
            ("define-derived-mode" code nil nil [284226 284651])
            ("completion-list-mode-finish" function nil nil [284653 284849])
            ("add-hook" code nil nil [284851 284913])
            ("completion-show-help" variable (:default-value t) nil [284977 285128])
            ("completion-setup-function" function nil nil [285259 287302])
            ("add-hook" code nil nil [287304 287364])
            ("define-key" code nil nil [287366 287441])
            ("define-key" code nil nil [287442 287517])
            ("switch-to-completions" function (:user-visible-flag t) nil [287519 288060])
            ("event-apply-alt-modifier" function (:arguments ("_ignore-prompt")) nil [288222 288465])
            ("event-apply-super-modifier" function (:arguments ("_ignore-prompt")) nil [288466 288719])
            ("event-apply-hyper-modifier" function (:arguments ("_ignore-prompt")) nil [288720 288973])
            ("event-apply-shift-modifier" function (:arguments ("_ignore-prompt")) nil [288974 289227])
            ("event-apply-control-modifier" function (:arguments ("_ignore-prompt")) nil [289228 289485])
            ("event-apply-meta-modifier" function (:arguments ("_ignore-prompt")) nil [289486 289734])
            ("event-apply-modifier" function (:arguments ("event" "symbol" "lshiftby" "prefix")) nil [289736 290800])
            ("define-key" code nil nil [290802 290873])
            ("define-key" code nil nil [290874 290945])
            ("define-key" code nil nil [290946 291016])
            ("define-key" code nil nil [291017 291086])
            ("define-key" code nil nil [291087 291158])
            ("define-key" code nil nil [291159 291232])
            ("mapc" code nil nil [291522 292117])
            ("clone-buffer-hook" variable nil nil [292169 292270])
            ("clone-indirect-buffer-hook" variable nil nil [292272 292391])
            ("clone-process" function (:arguments ("process" "newname")) nil [292393 293902])
            ("clone-buffer" function
               (:user-visible-flag t
                :arguments ("newname" "display-flag"))
                nil [294005 296968])
            ("clone-indirect-buffer" function
               (:user-visible-flag t
                :arguments ("newname" "display-flag" "norecord"))
                nil [296971 298563])
            ("clone-indirect-buffer-other-window" function
               (:user-visible-flag t
                :arguments ("newname" "display-flag" "norecord"))
                nil [298566 299049])
            ("normal-erase-is-backspace" variable (:default-value (quote maybe)) nil [299097 300637])
            ("normal-erase-is-backspace-setup-frame" function (:arguments ("frame")) nil [300639 301714])
            ("define-minor-mode" code nil nil [301716 305211])
            ("vis-mode-saved-buffer-invisibility-spec" variable nil nil [305214 305337])
            ("define-minor-mode" code nil nil [305339 306492])
            ("define-minor-mode" code nil nil [306494 307264])
            ("messages-buffer-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map special-mode-map) (define-key map "g" nil) map)) nil [307267 307450])
            ("define-derived-mode" code nil nil [307452 307568])
            ("messages-buffer" function nil nil [307570 307857])
            ("bad-packages-alist" variable
               (:constant-flag t
                :default-value (quote ((semantic semantic-version "\\`2\\.0pre[1-3]\\'" "The version of `semantic' loaded does not work in Emacs 22.
It can cause constant high CPU load.
Upgrade to at least Semantic 2.0pre4 (distributed with CEDET 1.0pre4).") (CUA-mode t nil "CUA-mode is now part of the standard GNU Emacs distribution,
so you can now enable CUA via the Options menu or by customizing `cua-mode'.

You have loaded an older version of CUA-mode which does not work
correctly with this version of Emacs.  You should remove the old
version and use the one distributed with Emacs."))))
                nil [308816 310244])
            ("bad-package-check" function (:arguments ("package")) nil [310246 310751])
            ("dolist" code nil nil [310753 310875])
            ("define-alternatives" function (:arguments ("command" "customizations")) nil [311528 314062])
            ("simple" package nil nil [314064 314081]))          
      :file "simple.el"
      :pointmax 314107
      :fsize 314392
      :lastmodtime '(21226 950 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "subr.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("declare-function" function (:arguments ("_fn" "_file" "_arglist" "_fileonly")) nil [1095 2615])
            ("defalias" code nil nil [2644 2665])
            ("noreturn" function (:arguments ("form")) nil [2667 2871])
            ("1value" function (:arguments ("form")) nil [2873 3111])
            ("def-edebug-spec" function (:arguments ("symbol" "spec")) nil [3113 3573])
            ("lambda" function (:arguments ("cdr")) nil [3575 4733])
            ("setq-local" function (:arguments ("var" "val")) nil [4735 4947])
            ("defvar-local" function (:arguments ("var" "val" "docstring")) nil [4949 5390])
            ("apply-partially" function (:arguments ("fun" "args")) nil [5392 5807])
            ("push" function (:arguments ("newelt" "place")) nil [5809 6403])
            ("pop" function (:arguments ("place")) nil [6405 7216])
            ("when" function (:arguments ("cond" "body")) nil [7218 7506])
            ("unless" function (:arguments ("cond" "body")) nil [7508 7794])
            ("dolist" function (:arguments ("spec" "body")) nil [7796 9075])
            ("dotimes" function (:arguments ("spec" "body")) nil [9077 10542])
            ("declare" function (:arguments ("_specs")) nil [10544 11059])
            ("ignore-errors" function (:arguments ("body")) nil [11061 11368])
            ("ignore" function
               (:user-visible-flag t
                :arguments ("_ignore"))
                nil [11399 11547])
            ("error" function (:arguments ("args")) nil [11604 11990])
            ("user-error" function (:arguments ("format" "args")) nil [11992 12518])
            ("define-error" function (:arguments ("name" "message" "parent")) nil [12520 13432])
            ("frame-configuration-p" function (:arguments ("object")) nil [13546 13801])
            ("caar" function (:arguments ("x")) nil [13826 13897])
            ("cadr" function (:arguments ("x")) nil [13899 13970])
            ("cdar" function (:arguments ("x")) nil [13972 14043])
            ("cddr" function (:arguments ("x")) nil [14045 14116])
            ("last" function (:arguments ("list" "n")) nil [14118 14535])
            ("butlast" function (:arguments ("list" "n")) nil [14537 14698])
            ("nbutlast" function (:arguments ("list" "n")) nil [14700 14928])
            ("delete-dups" function (:arguments ("list")) nil [14930 15283])
            ("delete-consecutive-dups" function (:arguments ("list" "circular")) nil [15360 15828])
            ("number-sequence" function (:arguments ("from" "to" "inc")) nil [15830 17647])
            ("copy-tree" function (:arguments ("tree" "vecp")) nil [17649 18398])
            ("assoc-default" function (:arguments ("key" "alist" "test" "default")) nil [18438 19238])
            ("assoc-ignore-case" function (:arguments ("key" "alist")) nil [19240 19562])
            ("assoc-ignore-representation" function (:arguments ("key" "alist")) nil [19564 19832])
            ("member-ignore-case" function (:arguments ("elt" "list")) nil [19834 20269])
            ("assq-delete-all" function (:arguments ("key" "alist")) nil [20271 20755])
            ("rassq-delete-all" function (:arguments ("value" "alist")) nil [20757 21250])
            ("remove" function (:arguments ("elt" "seq")) nil [21252 21605])
            ("remq" function (:arguments ("elt" "list")) nil [21607 21938])
            ("kbd" function (:arguments ("keys")) nil [21963 22273])
            ("put" code nil nil [22274 22292])
            ("undefined" function (:user-visible-flag t) nil [22294 22749])
            ("put" code nil nil [22844 22879])
            ("suppress-keymap" function (:arguments ("map" "nodigits")) nil [22881 23445])
            ("make-composed-keymap" function (:arguments ("maps" "parent")) nil [23447 24099])
            ("define-key-after" function (:arguments ("keymap" "key" "definition" "after")) nil [24101 26162])
            ("map-keymap-sorted" function (:arguments ("function" "keymap")) nil [26164 26844])
            ("keymap--menu-item-binding" function (:arguments ("val")) nil [26846 27316])
            ("keymap--menu-item-with-binding" function (:arguments ("item" "binding")) nil [27370 27970])
            ("keymap--merge-bindings" function (:arguments ("val1" "val2")) nil [27972 28438])
            ("keymap-canonicalize" function (:arguments ("map")) nil [28440 30309])
            ("put" code nil nil [30311 30368])
            ("keyboard-translate" function (:arguments ("from" "to")) nil [30370 30745])
            ("global-set-key" function
               (:user-visible-flag t
                :arguments ("key" "command"))
                nil [30776 31522])
            ("local-set-key" function
               (:user-visible-flag t
                :arguments ("key" "command"))
                nil [31524 32328])
            ("global-unset-key" function
               (:user-visible-flag t
                :arguments ("key"))
                nil [32330 32526])
            ("local-unset-key" function
               (:user-visible-flag t
                :arguments ("key"))
                nil [32528 32757])
            ("key-substitution-in-progress" variable nil nil [32813 32906])
            ("substitute-key-definition" function (:arguments ("olddef" "newdef" "keymap" "oldmap" "prefix")) nil [32908 34292])
            ("substitute-key-definition-key" function (:arguments ("defn" "olddef" "newdef" "prefix" "keymap")) nil [34294 35959])
            ("global-map" variable nil nil [36108 36282])
            ("esc-map" variable nil nil [36284 36424])
            ("ctl-x-map" variable nil nil [36426 36561])
            ("ctl-x-4-map" variable (:default-value (make-sparse-keymap)) nil [36563 36641])
            ("defalias" code nil nil [36642 36680])
            ("define-key" code nil nil [36681 36723])
            ("ctl-x-5-map" variable (:default-value (make-sparse-keymap)) nil [36725 36797])
            ("defalias" code nil nil [36798 36836])
            ("define-key" code nil nil [36837 36879])
            ("listify-key-sequence-1" variable
               (:constant-flag t
                :default-value (logior 128 134217728))
                nil [36919 36974])
            ("listify-key-sequence" function (:arguments ("key")) nil [36976 37214])
            ("eventp" function (:arguments ("obj")) nil [37216 37417])
            ("event-modifiers" function (:arguments ("event")) nil [37419 38713])
            ("event-basic-type" function (:arguments ("event")) nil [38715 39483])
            ("mouse-movement-p" function (:arguments ("object")) nil [39485 39618])
            ("mouse-event-p" function (:arguments ("object")) nil [39620 39838])
            ("event-start" function (:arguments ("event")) nil [39840 40571])
            ("event-end" function (:arguments ("event")) nil [40573 41413])
            ("event-click-count" function (:arguments ("event")) nil [41415 41625])
            ("posnp" function (:arguments ("obj")) nil [41682 41982])
            ("posn-window" function (:arguments ("position")) nil [42016 42198])
            ("posn-area" function (:arguments ("position")) nil [42200 42524])
            ("posn-point" function (:arguments ("position")) nil [42526 42992])
            ("posn-set-point" function (:arguments ("position")) nil [42994 43314])
            ("posn-x-y" function (:arguments ("position")) nil [43316 43569])
            ("declare-function" code nil nil [43571 43637])
            ("posn-col-row" function (:arguments ("position")) nil [43639 45185])
            ("posn-actual-col-row" function (:arguments ("position")) nil [45187 45621])
            ("posn-timestamp" function (:arguments ("position")) nil [45623 45811])
            ("posn-string" function (:arguments ("position")) nil [45813 46172])
            ("posn-image" function (:arguments ("position")) nil [46174 46414])
            ("posn-object" function (:arguments ("position")) nil [46416 46785])
            ("posn-object-x-y" function (:arguments ("position")) nil [46787 47074])
            ("posn-object-width-height" function (:arguments ("position")) nil [47076 47336])
            ("define-obsolete-function-alias" code nil nil [47379 47444])
            ("define-obsolete-function-alias" code nil nil [47445 47518])
            ("define-obsolete-function-alias" code nil nil [47519 47583])
            ("define-obsolete-function-alias" code nil nil [47584 47655])
            ("define-obsolete-function-alias" code nil nil [47656 47729])
            ("define-obsolete-function-alias" code nil nil [47730 47802])
            ("make-obsolete" code nil nil [47804 47870])
            ("make-obsolete" code nil nil [47871 47920])
            ("insert-string" function (:arguments ("args")) nil [47922 48240])
            ("makehash" function (:arguments ("test")) nil [48242 48362])
            ("log10" function (:arguments ("x")) nil [48364 48473])
            ("defalias" code nil nil [48521 48555])
            ("make-obsolete" code nil nil [48556 48610])
            ("defalias" code nil nil [48611 48647])
            ("make-obsolete" code nil nil [48648 48704])
            ("make-obsolete" code nil nil [48705 48812])
            ("set-advertised-calling-convention" code nil nil [48813 48914])
            ("set-advertised-calling-convention" code nil nil [48915 48983])
            ("set-advertised-calling-convention" code nil nil [48984 49069])
            ("set-advertised-calling-convention" code nil nil [49070 49139])
            ("set-advertised-calling-convention" code nil nil [49140 49209])
            ("make-obsolete-variable" code nil nil [49614 49689])
            ("make-obsolete-variable" code nil nil [49690 49769])
            ("make-obsolete-variable" code nil nil [49770 49837])
            ("make-obsolete-variable" code nil nil [49838 49903])
            ("make-obsolete-variable" code nil nil [49904 49965])
            ("make-obsolete-variable" code nil nil [49966 50037])
            ("make-obsolete-variable" code nil nil [50038 50103])
            ("make-obsolete-variable" code nil nil [50104 50165])
            ("make-obsolete-variable" code nil nil [50166 50241])
            ("make-obsolete-variable" code nil nil [50242 50319])
            ("make-obsolete-variable" code nil nil [50320 50399])
            ("make-obsolete-variable" code nil nil [50400 50477])
            ("make-obsolete-variable" code nil nil [50478 50557])
            ("make-obsolete-variable" code nil nil [50558 50647])
            ("make-obsolete-variable" code nil nil [50648 50723])
            ("make-obsolete-variable" code nil nil [50724 50805])
            ("make-obsolete-variable" code nil nil [50806 50889])
            ("make-obsolete-variable" code nil nil [50890 50985])
            ("make-obsolete-variable" code nil nil [50986 51073])
            ("make-obsolete-variable" code nil nil [51074 51155])
            ("make-obsolete-variable" code nil nil [51156 51243])
            ("make-obsolete-variable" code nil nil [51244 51335])
            ("make-obsolete-variable" code nil nil [51336 51401])
            ("make-obsolete-variable" code nil nil [51402 51467])
            ("make-obsolete-variable" code nil nil [51468 51571])
            ("make-obsolete-variable" code nil nil [51572 51665])
            ("make-obsolete-variable" code nil nil [51666 51729])
            ("make-obsolete-variable" code nil nil [51730 51870])
            ("make-obsolete-variable" code nil nil [51872 51936])
            ("make-obsolete-variable" code nil nil [51937 52020])
            ("make-obsolete-variable" code nil nil [52021 52093])
            ("make-obsolete-variable" code nil nil [52094 52170])
            ("make-obsolete" code nil nil [52171 52227])
            ("make-obsolete" code nil nil [52228 52288])
            ("make-obsolete" code nil nil [52290 52344])
            ("make-obsolete" code nil nil [52345 52401])
            ("define-obsolete-variable-alias" code nil nil [52440 52527])
            ("define-obsolete-variable-alias" code nil nil [52529 52622])
            ("define-obsolete-variable-alias" code nil nil [52623 52716])
            ("make-obsolete-variable" code nil nil [52962 53026])
            ("defvaralias" code nil nil [53028 53085])
            ("defalias" code nil nil [53158 53202])
            ("defalias" code nil nil [53203 53247])
            ("defalias" code nil nil [53248 53281])
            ("defalias" code nil nil [53282 53315])
            ("defalias" code nil nil [53316 53351])
            ("defalias" code nil nil [53352 53378])
            ("defalias" code nil nil [53379 53405])
            ("defalias" code nil nil [53406 53428])
            ("defalias" code nil nil [53454 53493])
            ("defalias" code nil nil [53494 53548])
            ("defalias" code nil nil [53549 53619])
            ("defalias" code nil nil [53620 53692])
            ("defalias" code nil nil [53693 53736])
            ("defalias" code nil nil [53737 53781])
            ("defalias" code nil nil [53782 53815])
            ("defalias" code nil nil [53816 53849])
            ("defalias" code nil nil [53881 53924])
            ("defalias" code nil nil [53925 53974])
            ("defalias" code nil nil [53976 54029])
            ("add-hook" function (:arguments ("hook" "function" "append" "local")) nil [54068 56197])
            ("remove-hook" function (:arguments ("hook" "function" "local")) nil [56199 57867])
            ("letrec" function (:arguments ("binders" "body")) nil [57869 58498])
            ("with-wrapper-hook" function (:arguments ("hook" "args" "body")) nil [58500 61551])
            ("add-to-list" function (:arguments ("list-var" "element" "append" "compare-fn")) nil [61553 64899])
            ("add-to-ordered-list" function (:arguments ("list-var" "element" "order")) nil [64902 66221])
            ("add-to-history" function (:arguments ("history-var" "newelt" "maxelt" "keep-all")) nil [66223 67435])
            ("delay-mode-hooks" variable nil nil [67457 67551])
            ("delayed-mode-hooks" variable nil nil [67552 67633])
            ("make-variable-buffer-local" code nil nil [67634 67682])
            ("put" code nil nil [67683 67725])
            ("change-major-mode-after-body-hook" variable nil nil [67727 67841])
            ("after-change-major-mode-hook" variable nil nil [67843 67945])
            ("run-mode-hooks" function (:arguments ("hooks")) nil [67947 68830])
            ("delay-mode-hooks" function (:arguments ("body")) nil [68832 69233])
            ("derived-mode-p" function (:arguments ("modes")) nil [69294 69607])
            ("minor-mode-list" variable (:default-value (quote (auto-save-mode auto-fill-mode abbrev-mode overwrite-mode view-mode hs-minor-mode))) nil [69798 69991])
            ("add-minor-mode" function (:arguments ("toggle" "name" "keymap" "after" "toggle-fun")) nil [69993 72678])
            ("autoloadp" function (:arguments ("object")) nil [72700 72802])
            ("symbol-file" function (:arguments ("symbol" "type")) nil [73286 74493])
            ("locate-library" function
               (:user-visible-flag t
                :arguments ("library" "nosuffix" "path" "interactive-call"))
                nil [74495 75901])
            ("process-lines" function (:arguments ("program" "args")) nil [75926 76531])
            ("process-live-p" function (:arguments ("process")) nil [76533 76846])
            ("make-obsolete" code nil nil [76866 76991])
            ("process-kill-without-query" function (:arguments ("process" "_flag")) nil [76992 77336])
            ("process-kill-buffer-query-function" function nil nil [77338 77757])
            ("add-hook" code nil nil [77759 77834])
            ("process-get" function (:arguments ("process" "propname")) nil [77865 78077])
            ("process-put" function (:arguments ("process" "propname" "value")) nil [78079 78318])
            ("read-key-empty-map" variable
               (:constant-flag t
                :default-value (make-sparse-keymap))
                nil [78358 78408])
            ("read-key-delay" variable (:default-value 0.01) nil [78410 78438])
            ("read-key" function (:arguments ("prompt")) nil [78487 81193])
            ("read-passwd-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map minibuffer-local-map) (define-key map "" (function delete-minibuffer-contents)) map)) nil [81195 81532])
            ("read-passwd" function (:arguments ("prompt" "confirm" "default")) nil [81534 84109])
            ("read-number" function (:arguments ("prompt" "default")) nil [84111 85181])
            ("read-char-choice" function (:arguments ("prompt" "chars" "inhibit-keyboard-quit")) nil [85183 86922])
            ("sit-for" function (:arguments ("seconds" "nodisp" "obsolete")) nil [86924 88681])
            ("declare-function" code nil nil [88721 88800])
            ("y-or-n-p" function (:arguments ("prompt")) nil [88802 92589])
            ("atomic-change-group" function (:arguments ("body")) nil [92620 93826])
            ("prepare-change-group" function (:arguments ("buffer")) nil [93828 95304])
            ("activate-change-group" function (:arguments ("handle")) nil [95306 95544])
            ("accept-change-group" function (:arguments ("handle")) nil [95546 95837])
            ("cancel-change-group" function (:arguments ("handle")) nil [95839 97010])
            ("define-obsolete-function-alias" code nil nil [97068 97150])
            ("momentary-string-display" function (:arguments ("string" "pos" "exit-char" "message")) nil [97152 98652])
            ("copy-overlay" function (:arguments ("o")) nil [98681 99255])
            ("remove-overlays" function (:arguments ("beg" "end" "name" "val")) nil [99257 100265])
            ("suspend-hook" variable nil nil [100287 100371])
            ("suspend-resume-hook" variable nil nil [100373 100471])
            ("temp-buffer-show-hook" variable nil nil [100473 100689])
            ("temp-buffer-setup-hook" variable nil nil [100691 100922])
            ("user-emacs-directory" variable
               (:constant-flag t
                :default-value (if (eq system-type (quote ms-dos)) "~/_emacs.d/" "~/.emacs.d/"))
                nil [100924 101299])
            ("buffer-narrowed-p" function nil nil [101332 101466])
            ("find-tag-default-bounds" function nil nil [101468 102471])
            ("find-tag-default" function nil nil [102473 102739])
            ("find-tag-default-as-regexp" function nil nil [102741 103176])
            ("find-tag-default-as-symbol-regexp" function nil nil [103178 103737])
            ("play-sound" function (:arguments ("sound")) nil [103739 104558])
            ("declare-function" code nil nil [104560 104616])
            ("shell-quote-argument" function (:arguments ("argument")) nil [104618 106763])
            ("string-or-null-p" function (:arguments ("object")) nil [106765 106902])
            ("booleanp" function (:arguments ("object")) nil [106904 107062])
            ("special-form-p" function (:arguments ("object")) nil [107064 107309])
            ("macrop" function (:arguments ("object")) nil [107311 107543])
            ("field-at-pos" function (:arguments ("pos")) nil [107545 107815])
            ("sha1" function (:arguments ("object" "start" "end" "binary")) nil [107817 108180])
            ("function-get" function (:arguments ("f" "prop" "autoload")) nil [108182 108992])
            ("yank-handled-properties" variable nil nil [109099 109131])
            ("yank-excluded-properties" variable nil nil [109132 109165])
            ("remove-yank-excluded-properties" function (:arguments ("start" "end")) nil [109167 109956])
            ("yank-undo-function" variable nil nil [109958 109985])
            ("insert-for-yank" function (:arguments ("string")) nil [109987 110346])
            ("insert-for-yank-1" function (:arguments ("string")) nil [110348 112698])
            ("insert-buffer-substring-no-properties" function (:arguments ("buffer" "start" "end")) nil [112700 113185])
            ("insert-buffer-substring-as-yank" function (:arguments ("buffer" "start" "end")) nil [113187 113873])
            ("yank-handle-font-lock-face-property" function (:arguments ("face" "start" "end")) nil [113875 114187])
            ("yank-handle-category-property" function (:arguments ("category" "start" "end")) nil [114326 114764])
            ("start-process-shell-command" function (:arguments ("name" "buffer" "args")) nil [114802 115715])
            ("set-advertised-calling-convention" code nil nil [115716 115845])
            ("start-file-process-shell-command" function (:arguments ("name" "buffer" "args")) nil [115847 116266])
            ("set-advertised-calling-convention" code nil nil [116267 116401])
            ("call-process-shell-command" function (:arguments ("command" "infile" "buffer" "display" "args")) nil [116403 117848])
            ("process-file-shell-command" function (:arguments ("command" "infile" "buffer" "display" "args")) nil [117850 118294])
            ("with-current-buffer" function (:arguments ("buffer-or-name" "body")) nil [118349 118737])
            ("internal--before-with-selected-window" function (:arguments ("window")) nil [118739 119259])
            ("internal--after-with-selected-window" function (:arguments ("state")) nil [119261 119821])
            ("with-selected-window" function (:arguments ("window" "body")) nil [119823 120961])
            ("with-selected-frame" function (:arguments ("frame" "body")) nil [120963 121704])
            ("save-window-excursion" function (:arguments ("body")) nil [121706 122525])
            ("internal-temp-output-buffer-show" function (:arguments ("buffer")) nil [122527 123922])
            ("with-output-to-temp-buffer" function (:arguments ("bufname" "body")) nil [123975 126175])
            ("with-temp-file" function (:arguments ("file" "body")) nil [126177 126872])
            ("with-temp-message" function (:arguments ("message" "body")) nil [126874 127801])
            ("with-temp-buffer" function (:arguments ("body")) nil [127803 128362])
            ("with-silent-modifications" function (:arguments ("body")) nil [128364 129562])
            ("with-output-to-string" function (:arguments ("body")) nil [129564 130009])
            ("with-local-quit" function (:arguments ("body")) nil [130011 130766])
            ("while-no-input" function (:arguments ("body")) nil [130768 131268])
            ("condition-case-unless-debug" function (:arguments ("var" "bodyform" "handlers")) nil [131270 131823])
            ("define-obsolete-function-alias" code nil nil [131825 131920])
            ("with-demoted-errors" function (:arguments ("format" "body")) nil [131922 132859])
            ("combine-after-change-calls" function (:arguments ("body")) nil [132861 133556])
            ("with-case-table" function (:arguments ("table" "body")) nil [133558 134079])
            ("save-match-data-internal" variable nil nil [134112 134145])
            ("save-match-data" function (:arguments ("body")) nil [134403 135083])
            ("match-string" function (:arguments ("num" "string")) nil [135085 135730])
            ("match-string-no-properties" function (:arguments ("num" "string")) nil [135732 136456])
            ("match-substitute-replacement" function (:arguments ("replacement" "fixedcase" "literal" "string" "subexp")) nil [136459 137108])
            ("looking-back" function (:arguments ("regexp" "limit" "greedy")) nil [137111 138296])
            ("looking-at-p" function (:arguments ("regexp")) nil [138298 138476])
            ("string-match-p" function (:arguments ("regexp" "string" "start")) nil [138478 138698])
            ("subregexp-context-p" function (:arguments ("regexp" "pos" "start")) nil [138700 140610])
            ("split-string-default-separators" variable
               (:constant-flag t
                :default-value "[ 	
]+")
                nil [140632 140985])
            ("split-string" function (:arguments ("string" "separators" "omit-nulls" "trim")) nil [141247 144363])
            ("combine-and-quote-strings" function (:arguments ("strings" "separator")) nil [144365 144926])
            ("split-string-and-unquote" function (:arguments ("string" "separator")) nil [144928 145564])
            ("subst-char-in-string" function (:arguments ("fromchar" "tochar" "string" "inplace")) nil [145598 146002])
            ("replace-regexp-in-string" function (:arguments ("regexp" "rep" "string" "fixedcase" "literal" "subexp" "start")) nil [146004 148583])
            ("string-prefix-p" function (:arguments ("str1" "str2" "ignore-case")) nil [148586 148885])
            ("string-suffix-p" function (:arguments ("suffix" "string" "ignore-case")) nil [148887 149296])
            ("bidi-string-mark-left-to-right" function (:arguments ("str")) nil [149298 150081])
            ("load-history-regexp" function (:arguments ("file")) nil [150121 150757])
            ("load-history-filename-element" function (:arguments ("file-regexp")) nil [150759 151195])
            ("put" code nil nil [151197 151243])
            ("eval-after-load" function (:arguments ("file" "form")) nil [151244 155125])
            ("with-eval-after-load" function (:arguments ("file" "body")) nil [155127 155407])
            ("after-load-functions" variable nil nil [155409 155582])
            ("do-after-load-evaluation" function (:arguments ("abs-file")) nil [155584 157123])
            ("eval-next-after-load" function (:arguments ("file")) nil [157125 157425])
            ("display-delayed-warnings" function nil nil [157429 157696])
            ("collapse-delayed-warnings" function nil nil [157698 158377])
            ("delayed-warnings-hook" variable (:default-value (quote (collapse-delayed-warnings display-delayed-warnings))) nil [158507 158847])
            ("delay-warning" function (:arguments ("type" "message" "level" "buffer-name")) nil [158849 159104])
            ("add-to-invisibility-spec" function (:arguments ("element")) nil [159133 159476])
            ("remove-from-invisibility-spec" function (:arguments ("element")) nil [159478 159702])
            ("with-syntax-table" function (:arguments ("table" "body")) nil [159726 160362])
            ("make-syntax-table" function (:arguments ("oldtable")) nil [160364 160684])
            ("syntax-after" function (:arguments ("pos")) nil [160686 161059])
            ("syntax-class" function (:arguments ("syntax")) nil [161061 161413])
            ("forward-whitespace" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [161460 162043])
            ("forward-symbol" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [162058 162607])
            ("forward-same-syntax" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [162628 163110])
            ("text-clone--maintaining" variable nil nil [163132 163168])
            ("text-clone--maintain" function (:arguments ("ol1" "after" "beg" "end" "_len")) nil [163170 165236])
            ("text-clone-create" function (:arguments ("start" "end" "spreadp" "syntax")) nil [165238 167486])
            ("define-mail-user-agent" function (:arguments ("symbol" "composefunc" "sendfunc" "abortfunc" "hookvar")) nil [167594 169172])
            ("called-interactively-p-functions" variable nil nil [169175 169592])
            ("internal--call-interactively" variable
               (:constant-flag t
                :default-value (symbol-function (quote call-interactively)))
                nil [169594 169671])
            ("called-interactively-p" function (:arguments ("kind")) nil [169673 173770])
            ("interactive-p" function nil nil [173772 174782])
            ("internal-push-keymap" function (:arguments ("keymap" "symbol")) nil [174784 175129])
            ("internal-pop-keymap" function (:arguments ("keymap" "symbol")) nil [175131 175439])
            ("define-obsolete-function-alias" code nil nil [175441 175528])
            ("set-transient-map" function (:arguments ("map" "keep-pred" "on-exit")) nil [175530 177833])
            ("progress-reporter-update" function (:arguments ("reporter" "value")) nil [178416 179183])
            ("make-progress-reporter" function (:arguments ("message" "min-value" "max-value" "current-value" "min-change" "min-time")) nil [179185 181030])
            ("progress-reporter-force-update" function (:arguments ("reporter" "value" "new-message")) nil [181032 181531])
            ("progress-reporter--pulse-characters" variable (:default-value ["-" "\\" "|" "/"]) nil [181533 181650])
            ("progress-reporter-do-update" function (:arguments ("reporter" "value")) nil [181652 183358])
            ("progress-reporter-done" function (:arguments ("reporter")) nil [183360 183515])
            ("dotimes-with-progress-reporter" function (:arguments ("spec" "message" "body")) nil [183517 184621])
            ("version-separator" variable
               (:constant-flag t
                :default-value ".")
                nil [184658 184817])
            ("version-regexp-alist" variable
               (:constant-flag t
                :default-value (quote (("^[-_+ ]?snapshot$" . -4) ("^[-_+]$" . -4) ("^[-_+ ]?\\(cvs\\|git\\|bzr\\|svn\\|hg\\|darcs\\)$" . -4) ("^[-_+ ]?alpha$" . -3) ("^[-_+ ]?beta$" . -2) ("^[-_+ ]?\\(pre\\|rc\\)$" . -1))))
                nil [184820 186315])
            ("version-to-list" function (:arguments ("ver")) nil [186318 188722])
            ("version-list-<" function (:arguments ("l1" "l2")) nil [188725 189556])
            ("version-list-=" function (:arguments ("l1" "l2")) nil [189559 190358])
            ("version-list-<=" function (:arguments ("l1" "l2")) nil [190361 191146])
            ("version-list-not-zero" function (:arguments ("lst")) nil [191148 191458])
            ("version<" function (:arguments ("v1" "v2")) nil [191461 191965])
            ("version<=" function (:arguments ("v1" "v2")) nil [191967 192485])
            ("version=" function (:arguments ("v1" "v2")) nil [192487 192981])
            ("menu-bar-separator" variable
               (:constant-flag t
                :default-value (quote ("--")))
                nil [192995 193057])
            ("when" code nil nil [193219 193344])
            ("unmsys--file-name" function (:arguments ("file")) nil [193477 193964]))          
      :file "subr.el"
      :pointmax 193989
      :fsize 193989
      :lastmodtime '(21217 59396 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "ibuf-macs.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl-lib" include nil nil [991 1008])
            ("ibuffer-aif" function (:arguments ("test" "true-body" "false-body")) nil [1082 1534])
            ("ibuffer-awhen" function (:arguments ("test" "body")) nil [1536 1766])
            ("ibuffer-save-marks" function (:arguments ("body")) nil [1768 2375])
            ("cl-defmacro" code nil nil [2392 4457])
            ("cl-defmacro" code nil nil [4474 5642])
            ("cl-defmacro" code nil nil [5659 9347])
            ("cl-defmacro" code nil nil [9364 10579])
            ("ibuf-macs" package nil nil [10581 10601]))          
      :file "ibuf-macs.el"
      :pointmax 10630
      :fsize 10629
      :lastmodtime '(21187 50982 0 0)
      :unmatched-syntax '((close-paren 1008 . 1009) (symbol 973 . 990) (open-paren 972 . 973)))
    (semanticdb-table "ezimage.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("condition-case" code nil nil [1309 1385])
            ("ezimage-use-images" variable (:default-value (if (featurep (quote xemacs)) (and (fboundp (quote make-image-specifier)) window-system) (and (display-images-p) (image-type-available-p (quote xpm))))) nil [1397 1689])
            ("if" code nil nil [1749 4257])
            ("ezimage-directory" variable
               (:default-value ((:type xpm :file "ezimage/dir.xpm" :ascent center))
                :type "image")
                nil [4260 4383])
            ("ezimage-directory-plus" variable
               (:default-value ((:type xpm :file "ezimage/dir-plus.xpm" :ascent center))
                :type "image")
                nil [4385 4538])
            ("ezimage-directory-minus" variable
               (:default-value ((:type xpm :file "ezimage/dir-minus.xpm" :ascent center))
                :type "image")
                nil [4540 4693])
            ("ezimage-page-plus" variable
               (:default-value ((:type xpm :file "ezimage/page-plus.xpm" :ascent center))
                :type "image")
                nil [4695 4838])
            ("ezimage-page-minus" variable
               (:default-value ((:type xpm :file "ezimage/page-minus.xpm" :ascent center))
                :type "image")
                nil [4840 4983])
            ("ezimage-page" variable
               (:default-value ((:type xpm :file "ezimage/page.xpm" :ascent center))
                :type "image")
                nil [4985 5123])
            ("ezimage-tag" variable
               (:default-value ((:type xpm :file "ezimage/tag.xpm" :ascent center))
                :type "image")
                nil [5125 5229])
            ("ezimage-tag-plus" variable
               (:default-value ((:type xpm :file "ezimage/tag-plus.xpm" :ascent center))
                :type "image")
                nil [5231 5358])
            ("ezimage-tag-minus" variable
               (:default-value ((:type xpm :file "ezimage/tag-minus.xpm" :ascent center))
                :type "image")
                nil [5360 5481])
            ("ezimage-tag-gt" variable
               (:default-value ((:type xpm :file "ezimage/tag-gt.xpm" :ascent center))
                :type "image")
                nil [5483 5619])
            ("ezimage-tag-v" variable
               (:default-value ((:type xpm :file "ezimage/tag-v.xpm" :ascent center))
                :type "image")
                nil [5621 5753])
            ("ezimage-tag-type" variable
               (:default-value ((:type xpm :file "ezimage/tag-type.xpm" :ascent center))
                :type "image")
                nil [5755 5896])
            ("ezimage-box-plus" variable
               (:default-value ((:type xpm :file "ezimage/box-plus.xpm" :ascent center))
                :type "image")
                nil [5898 6014])
            ("ezimage-box-minus" variable
               (:default-value ((:type xpm :file "ezimage/box-minus.xpm" :ascent center))
                :type "image")
                nil [6016 6133])
            ("ezimage-mail" variable
               (:default-value ((:type xpm :file "ezimage/mail.xpm" :ascent center))
                :type "image")
                nil [6135 6242])
            ("ezimage-checkout" variable
               (:default-value ((:type xpm :file "ezimage/checkmark.xpm" :ascent center))
                :type "image")
                nil [6244 6402])
            ("ezimage-object" variable
               (:default-value ((:type xpm :file "ezimage/bits.xpm" :ascent center))
                :type "image")
                nil [6404 6533])
            ("ezimage-object-out-of-date" variable
               (:default-value ((:type xpm :file "ezimage/bitsbang.xpm" :ascent center))
                :type "image")
                nil [6535 6709])
            ("ezimage-label" variable
               (:default-value ((:type xpm :file "ezimage/label.xpm" :ascent center))
                :type "image")
                nil [6711 6827])
            ("ezimage-lock" variable
               (:default-value ((:type xpm :file "ezimage/lock.xpm" :ascent center))
                :type "image")
                nil [6829 6964])
            ("ezimage-unlock" variable
               (:default-value ((:type xpm :file "ezimage/unlock.xpm" :ascent center))
                :type "image")
                nil [6966 7082])
            ("ezimage-key" variable
               (:default-value ((:type xpm :file "ezimage/key.xpm" :ascent center))
                :type "image")
                nil [7084 7183])
            ("ezimage-document-tag" variable
               (:default-value ((:type xpm :file "ezimage/doc.xpm" :ascent center))
                :type "image")
                nil [7185 7325])
            ("ezimage-document-plus" variable
               (:default-value ((:type xpm :file "ezimage/doc-plus.xpm" :ascent center))
                :type "image")
                nil [7327 7470])
            ("ezimage-document-minus" variable
               (:default-value ((:type xpm :file "ezimage/doc-minus.xpm" :ascent center))
                :type "image")
                nil [7472 7615])
            ("ezimage-info-tag" variable
               (:default-value ((:type xpm :file "ezimage/info.xpm" :ascent center))
                :type "image")
                nil [7617 7757])
            ("ezimage-expand-image-button-alist" variable (:default-value (quote (("<+>" . ezimage-directory-plus) ("<->" . ezimage-directory-minus) ("< >" . ezimage-directory) ("[+]" . ezimage-page-plus) ("[-]" . ezimage-page-minus) ("[?]" . ezimage-page) ("[ ]" . ezimage-page) ("{+}" . ezimage-box-plus) ("{-}" . ezimage-box-minus) ("*" . ezimage-checkout) ("#" . ezimage-object) ("!" . ezimage-object-out-of-date) ("%" . ezimage-lock)))) nil [7759 8351])
            ("ezimage-insert-image-button-maybe" function (:arguments ("start" "length" "string")) nil [8353 9303])
            ("ezimage-image-over-string" function (:arguments ("string" "alist")) nil [9305 9685])
            ("ezimage-insert-over-text" function (:arguments ("image" "start" "end" "string")) nil [9687 10226])
            ("ezimage-image-association-dump" function (:user-visible-flag t) nil [10228 11030])
            ("ezimage-image-dump" function (:user-visible-flag t) nil [11032 11746])
            ("ezimage-all-images" function nil nil [11748 12032])
            ("ezimage" package nil nil [12034 12052]))          
      :file "ezimage.el"
      :pointmax 12080
      :fsize 12079
      :lastmodtime '(21187 50982 0 0)
      :unmatched-syntax '((close-paren 4257 . 4258) (symbol 1731 . 1747) (open-paren 1730 . 1731)))
    (semanticdb-table "widget.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("define-widget-keywords" function (:arguments ("_keys")) nil [1380 1834])
            ("put" code nil nil [3028 3066])
            ("define-widget" function (:arguments ("name" "class" "doc" "args")) nil [3106 3662])
            ("defalias" code nil nil [3723 3768])
            ("widget" package nil nil [3784 3801]))          
      :file "widget.el"
      :pointmax 3827
      :fsize 3826
      :lastmodtime '(21187 50982 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "faces.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("term-file-prefix" variable (:default-value (purecopy "term/")) nil [858 1310])
            ("declare-function" code nil nil [1312 1384])
            ("help-xref-stack-item" variable nil nil [1386 1415])
            ("face-name-history" variable nil nil [1417 1598])
            ("font-selection" customgroup (:user-visible-flag t) nil [1769 1851])
            ("face-font-selection-order" variable (:default-value (quote (:width :height :weight :slant))) nil [1854 2636])
            ("face-font-family-alternatives" variable (:default-value (mapcar (lambda (arg) (mapcar (quote purecopy) arg)) (quote (("Monospace" "courier" "fixed") ("courier" "CMU Typewriter Text" "fixed") ("Sans Serif" "helv" "helvetica" "arial" "fixed") ("helv" "helvetica" "arial" "fixed"))))) nil [2810 3492])
            ("face-font-registry-alternatives" variable (:default-value (mapcar (lambda (arg) (mapcar (quote purecopy) arg)) (if (featurep (quote w32)) (quote (("iso8859-1" "ms-oemlatin") ("gb2312.1980" "gb2312" "gbk" "gb18030") ("jisx0208.1990" "jisx0208.1983" "jisx0208.1978") ("ksc5601.1989" "ksx1001.1992" "ksc5601.1987") ("muletibetan-2" "muletibetan-0"))) (quote (("gb2312.1980" "gb2312.80&gb8565.88" "gbk" "gb18030") ("jisx0208.1990" "jisx0208.1983" "jisx0208.1978") ("ksc5601.1989" "ksx1001.1992" "ksc5601.1987") ("muletibetan-2" "muletibetan-0")))))) nil [3538 4602])
            ("face-list" function nil nil [4777 4878])
            ("make-face" function
               (:user-visible-flag t
                :arguments ("face" "no-init-from-resources"))
                nil [4880 5742])
            ("make-empty-face" function
               (:user-visible-flag t
                :arguments ("face"))
                nil [5744 6030])
            ("copy-face" function (:arguments ("old-face" "new-face" "frame" "new-frame")) nil [6032 7283])
            ("facep" function (:arguments ("face")) nil [7463 7612])
            ("check-face" function (:arguments ("face")) nil [7615 7769])
            ("face-id" function (:arguments ("face" "_frame")) nil [7950 8292])
            ("face-equal" function (:arguments ("face1" "face2" "frame")) nil [8294 8711])
            ("face-differs-from-default-p" function (:arguments ("face" "frame")) nil [8714 9427])
            ("face-nontrivial-p" function (:arguments ("face" "frame")) nil [9430 9774])
            ("face-x-resources" variable (:default-value (mapcar (lambda (arg) (cons (car arg) (cons (purecopy (car (cdr arg))) (purecopy (cdr (cdr arg)))))) (quote ((:family (".attributeFamily" . "Face.AttributeFamily")) (:foundry (".attributeFoundry" . "Face.AttributeFoundry")) (:width (".attributeWidth" . "Face.AttributeWidth")) (:height (".attributeHeight" . "Face.AttributeHeight")) (:weight (".attributeWeight" . "Face.AttributeWeight")) (:slant (".attributeSlant" . "Face.AttributeSlant")) (:foreground (".attributeForeground" . "Face.AttributeForeground")) (:distant-foreground (".attributeDistantForeground" . "Face.AttributeDistantForeground")) (:background (".attributeBackground" . "Face.AttributeBackground")) (:overline (".attributeOverline" . "Face.AttributeOverline")) (:strike-through (".attributeStrikeThrough" . "Face.AttributeStrikeThrough")) (:box (".attributeBox" . "Face.AttributeBox")) (:underline (".attributeUnderline" . "Face.AttributeUnderline")) (:inverse-video (".attributeInverse" . "Face.AttributeInverse")) (:stipple (".attributeStipple" . "Face.AttributeStipple") (".attributeBackgroundPixmap" . "Face.AttributeBackgroundPixmap")) (:bold (".attributeBold" . "Face.AttributeBold")) (:italic (".attributeItalic" . "Face.AttributeItalic")) (:font (".attributeFont" . "Face.AttributeFont")) (:inherit (".attributeInherit" . "Face.AttributeInherit")))))) nil [9972 11864])
            ("declare-function" code nil nil [11867 11962])
            ("declare-function" code nil nil [11964 12078])
            ("set-face-attribute-from-resource" function (:arguments ("face" "attribute" "resource" "class" "frame")) nil [12080 12789])
            ("set-face-attributes-from-resources" function (:arguments ("face" "frame")) nil [12792 13155])
            ("make-face-x-resource-internal" function (:arguments ("face" "frame")) nil [13158 13483])
            ("face-name" function (:arguments ("face")) nil [13667 13759])
            ("face-all-attributes" function (:arguments ("face" "frame")) nil [13762 14228])
            ("face-attribute" function (:arguments ("face" "attribute" "frame" "inherit")) nil [14230 16044])
            ("face-attribute-merged-with" function (:arguments ("attribute" "value" "faces" "frame")) nil [16046 16635])
            ("face-attribute-specified-or" function (:arguments ("value" "body")) nil [16638 16919])
            ("face-foreground" function (:arguments ("face" "frame" "inherit")) nil [16921 17977])
            ("face-background" function (:arguments ("face" "frame" "inherit")) nil [17979 19035])
            ("face-stipple" function (:arguments ("face" "frame" "inherit")) nil [19037 20057])
            ("defalias" code nil nil [20060 20108])
            ("face-underline-p" function (:arguments ("face" "frame" "inherit")) nil [20111 20564])
            ("face-inverse-video-p" function (:arguments ("face" "frame" "inherit")) nil [20567 21001])
            ("face-bold-p" function (:arguments ("face" "frame" "inherit")) nil [21004 21523])
            ("face-italic-p" function (:arguments ("face" "frame" "inherit")) nil [21526 22030])
            ("face-documentation" function (:arguments ("face")) nil [22206 22628])
            ("set-face-documentation" function (:arguments ("face" "string")) nil [22631 22819])
            ("defalias" code nil nil [22822 22869])
            ("defalias" code nil nil [22870 22925])
            ("set-face-attribute" function (:arguments ("face" "frame" "args")) nil [23106 30440])
            ("make-face-bold" function
               (:user-visible-flag t
                :arguments ("face" "frame" "_noerror"))
                nil [30442 30893])
            ("make-face-unbold" function
               (:user-visible-flag t
                :arguments ("face" "frame" "_noerror"))
                nil [30896 31296])
            ("make-face-italic" function
               (:user-visible-flag t
                :arguments ("face" "frame" "_noerror"))
                nil [31299 31756])
            ("make-face-unitalic" function
               (:user-visible-flag t
                :arguments ("face" "frame" "_noerror"))
                nil [31759 32164])
            ("make-face-bold-italic" function
               (:user-visible-flag t
                :arguments ("face" "frame" "_noerror"))
                nil [32167 32664])
            ("set-face-font" function
               (:user-visible-flag t
                :arguments ("face" "font" "frame"))
                nil [32667 33093])
            ("set-face-background" function
               (:user-visible-flag t
                :arguments ("face" "color" "frame"))
                nil [33299 33768])
            ("set-face-foreground" function
               (:user-visible-flag t
                :arguments ("face" "color" "frame"))
                nil [33771 34240])
            ("set-face-stipple" function
               (:user-visible-flag t
                :arguments ("face" "stipple" "frame"))
                nil [34243 34848])
            ("set-face-underline" function
               (:user-visible-flag t
                :arguments ("face" "underline" "frame"))
                nil [34851 35620])
            ("define-obsolete-function-alias" code nil nil [35622 35735])
            ("set-face-inverse-video" function
               (:user-visible-flag t
                :arguments ("face" "inverse-video-p" "frame"))
                nil [35738 36311])
            ("define-obsolete-function-alias" code nil nil [36313 36434])
            ("set-face-bold" function (:arguments ("face" "bold-p" "frame")) nil [36436 36852])
            ("define-obsolete-function-alias" code nil nil [36854 36925])
            ("set-face-italic" function (:arguments ("face" "italic-p" "frame")) nil [36928 37364])
            ("define-obsolete-function-alias" code nil nil [37366 37441])
            ("defalias" code nil nil [37444 37500])
            ("invert-face" function
               (:user-visible-flag t
                :arguments ("face" "frame"))
                nil [37503 38303])
            ("crm-separator" variable nil nil [38489 38511])
            ("read-face-name" function (:arguments ("prompt" "default" "multiple")) nil [38527 41028])
            ("x-bitmap-file-path" variable nil nil [41087 41114])
            ("face-valid-attribute-values" function (:arguments ("attribute" "frame")) nil [41116 43805])
            ("face-attribute-name-alist" variable
               (:constant-flag t
                :default-value (quote ((:family . "font family") (:foundry . "font foundry") (:width . "character set width") (:height . "height in 1/10 pt") (:weight . "weight") (:slant . "slant") (:underline . "underline") (:overline . "overline") (:strike-through . "strike-through") (:box . "box") (:inverse-video . "inverse-video display") (:foreground . "foreground color") (:background . "background color") (:stipple . "background stipple") (:inherit . "inheritance"))))
                nil [43808 44578])
            ("face-descriptive-attribute-name" function (:arguments ("attribute")) nil [44581 44728])
            ("face-read-string" function (:arguments ("face" "default" "name" "completion-alist")) nil [44731 45658])
            ("face-read-integer" function (:arguments ("face" "default" "name")) nil [45661 46278])
            ("read-face-attribute" function (:arguments ("face" "attribute" "frame")) nil [46439 48780])
            ("declare-function" code nil nil [48782 48828])
            ("declare-function" code nil nil [48829 48920])
            ("read-face-font" function (:arguments ("face" "frame")) nil [48922 49264])
            ("read-all-face-attributes" function (:arguments ("face" "frame")) nil [49267 49695])
            ("modify-face" function
               (:user-visible-flag t
                :arguments ("face" "foreground" "background" "stipple" "bold-p" "italic-p" "underline" "inverse-p" "frame"))
                nil [49697 50642])
            ("read-face-and-attribute" function (:arguments ("attribute" "frame")) nil [50644 51433])
            ("list-faces-sample-text" variable
               (:constant-flag t
                :default-value "abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ")
                nil [51604 51767])
            ("help-xref-stack" variable nil nil [51896 51920])
            ("list-faces-display" function
               (:user-visible-flag t
                :arguments ("regexp"))
                nil [51921 54931])
            ("describe-face" function
               (:user-visible-flag t
                :arguments ("face" "frame"))
                nil [54934 58644])
            ("face-attr-construct" function (:arguments ("face" "_frame")) nil [58922 59512])
            ("face-spec-set-match-display" function (:arguments ("display" "frame")) nil [59515 61317])
            ("face-spec-choose" function (:arguments ("spec" "frame")) nil [61320 62234])
            ("face-spec-reset-face" function (:arguments ("face" "frame")) nil [62237 63375])
            ("face-spec-set" function (:arguments ("face" "spec" "spec-type")) nil [63377 65331])
            ("face-spec-recalc" function (:arguments ("face" "frame")) nil [65333 66504])
            ("face-spec-set-2" function (:arguments ("face" "frame" "spec")) nil [66506 66833])
            ("face-attr-match-p" function (:arguments ("face" "attrs" "frame")) nil [66835 67909])
            ("face-spec-match-p" function (:arguments ("face" "spec" "frame")) nil [67911 68106])
            ("face-default-spec" function (:arguments ("face")) nil [68108 68296])
            ("face-user-default-spec" function (:arguments ("face")) nil [68298 68581])
            ("defined-colors" function (:arguments ("frame")) nil [68839 69297])
            ("defalias" code nil nil [69298 69342])
            ("declare-function" code nil nil [69344 69414])
            ("color-defined-p" function (:arguments ("color" "frame")) nil [69416 70083])
            ("defalias" code nil nil [70084 70130])
            ("declare-function" code nil nil [70132 70199])
            ("color-values" function (:arguments ("color" "frame")) nil [70201 71120])
            ("defalias" code nil nil [71122 71162])
            ("declare-function" code nil nil [71164 71231])
            ("display-color-p" function (:arguments ("display")) nil [71233 71635])
            ("defalias" code nil nil [71636 71682])
            ("declare-function" code nil nil [71684 71754])
            ("display-grayscale-p" function (:arguments ("display")) nil [71756 72061])
            ("read-color" function
               (:user-visible-flag t
                :arguments ("prompt" "convert-to-RGB" "allow-empty-name" "msg"))
                nil [72063 74767])
            ("face-at-point" function (:arguments ("thing" "multiple")) nil [74769 76010])
            ("foreground-color-at-point" function nil nil [76012 76741])
            ("background-color-at-point" function nil nil [76767 77496])
            ("declare-function" code nil nil [77691 77736])
            ("declare-function" code nil nil [77737 77830])
            ("declare-function" code nil nil [77831 77925])
            ("declare-function" code nil nil [77926 77980])
            ("x-display-name" variable nil nil [77981 78004])
            ("x-handle-named-frame-geometry" function (:arguments ("parameters")) nil [78006 78901])
            ("x-handle-reverse-video" function (:arguments ("frame" "parameters")) nil [78904 79910])
            ("declare-function" code nil nil [79912 79962])
            ("declare-function" code nil nil [79963 80029])
            ("x-create-frame-with-faces" function (:arguments ("parameters")) nil [80031 81232])
            ("face-set-after-frame-default" function (:arguments ("frame" "parameters")) nil [81234 82887])
            ("tty-handle-reverse-video" function (:arguments ("frame" "parameters")) nil [82889 83565])
            ("tty-create-frame-with-faces" function (:arguments ("parameters")) nil [83568 84321])
            ("tty-find-type" function (:arguments ("pred" "type")) nil [84323 84888])
            ("tty-setup-hook" variable nil nil [84890 85063])
            ("tty-run-terminal-initialization" function (:arguments ("frame" "type")) nil [85065 86220])
            ("tty-set-up-initial-frame-faces" function nil nil [86326 86483])
            ("basic-faces" customgroup (:user-visible-flag t) nil [86654 86729])
            ("default" variable
               (:default-value (quote ((t nil)))
                :type "face")
                nil [86731 86863])
            ("bold" variable
               (:default-value (quote ((t :weight bold)))
                :type "face")
                nil [86865 86944])
            ("italic" variable
               (:default-value (quote ((((supports :slant italic)) :slant italic) (((supports :underline t)) :underline t) (t :slant italic)))
                :type "face")
                nil [86946 87311])
            ("bold-italic" variable
               (:default-value (quote ((t :weight bold :slant italic)))
                :type "face")
                nil [87313 87420])
            ("underline" variable
               (:default-value (quote ((((supports :underline t)) :underline t) (((supports :weight bold)) :weight bold) (t :underline t)))
                :type "face")
                nil [87422 87612])
            ("fixed-pitch" variable
               (:default-value (quote ((t :family "Monospace")))
                :type "face")
                nil [87614 87718])
            ("variable-pitch" variable
               (:default-value (quote ((t :family "Sans Serif")))
                :type "face")
                nil [87720 87831])
            ("shadow" variable
               (:default-value (quote ((((class color grayscale) (min-colors 88) (background light)) :foreground "grey50") (((class color grayscale) (min-colors 88) (background dark)) :foreground "grey70") (((class color) (min-colors 8) (background light)) :foreground "green") (((class color) (min-colors 8) (background dark)) :foreground "yellow")))
                :type "face")
                nil [87833 88271])
            ("link" variable
               (:default-value (quote ((((class color) (min-colors 88) (background light)) :foreground "RoyalBlue3" :underline t) (((class color) (background light)) :foreground "blue" :underline t) (((class color) (min-colors 88) (background dark)) :foreground "cyan1" :underline t) (((class color) (background dark)) :foreground "cyan" :underline t) (t :inherit underline)))
                :type "face")
                nil [88273 88740])
            ("link-visited" variable
               (:default-value (quote ((default :inherit link) (((class color) (background light)) :foreground "magenta4") (((class color) (background dark)) :foreground "violet")))
                :type "face")
                nil [88742 88992])
            ("highlight" variable
               (:default-value (quote ((((class color) (min-colors 88) (background light)) :background "darkseagreen2") (((class color) (min-colors 88) (background dark)) :background "darkolivegreen") (((class color) (min-colors 16) (background light)) :background "darkseagreen2") (((class color) (min-colors 16) (background dark)) :background "darkolivegreen") (((class color) (min-colors 8)) :background "green" :foreground "black") (t :inverse-video t)))
                :type "face")
                nil [88994 89536])
            ("region" variable
               (:default-value (quote ((((class color) (min-colors 88) (background dark)) :background "blue3") (((class color) (min-colors 88) (background light) (type gtk)) :distant-foreground "gtk_selection_fg_color" :background "gtk_selection_bg_color") (((class color) (min-colors 88) (background light) (type ns)) :distant-foreground "ns_selection_fg_color" :background "ns_selection_bg_color") (((class color) (min-colors 88) (background light)) :background "lightgoldenrod2") (((class color) (min-colors 16) (background dark)) :background "blue3") (((class color) (min-colors 16) (background light)) :background "lightgoldenrod2") (((class color) (min-colors 8)) :background "blue" :foreground "white") (((type tty) (class mono)) :inverse-video t) (t :background "gray")))
                :type "face")
                nil [89698 90624])
            ("secondary-selection" variable
               (:default-value (quote ((((class color) (min-colors 88) (background light)) :background "yellow1") (((class color) (min-colors 88) (background dark)) :background "SkyBlue4") (((class color) (min-colors 16) (background light)) :background "yellow") (((class color) (min-colors 16) (background dark)) :background "SkyBlue4") (((class color) (min-colors 8)) :background "cyan" :foreground "black") (t :inverse-video t)))
                :type "face")
                nil [90626 91174])
            ("trailing-whitespace" variable
               (:default-value (quote ((((class color) (background light)) :background "red1") (((class color) (background dark)) :background "red1") (t :inverse-video t)))
                :type "face")
                nil [91176 91453])
            ("escape-glyph" variable
               (:default-value (quote ((((background dark)) :foreground "cyan") (((type pc)) :foreground "magenta") (t :foreground "brown")))
                :type "face")
                nil [91455 91885])
            ("nobreak-space" variable
               (:default-value (quote ((((class color) (min-colors 88)) :inherit escape-glyph :underline t) (((class color) (min-colors 8)) :background "magenta") (t :inverse-video t)))
                :type "face")
                nil [91887 92147])
            ("mode-line-faces" customgroup (:user-visible-flag t) nil [92149 92266])
            ("mode-line" variable
               (:default-value (quote ((((class color) (min-colors 88)) :box (:line-width -1 :style released-button) :background "grey75" :foreground "black") (t :inverse-video t)))
                :type "face")
                nil [92268 92564])
            ("mode-line-inactive" variable
               (:default-value (quote ((default :inherit mode-line) (((class color) (min-colors 88) (background light)) :weight light :box (:line-width -1 :color "grey75" :style nil) :foreground "grey20" :background "grey90") (((class color) (min-colors 88) (background dark)) :weight light :box (:line-width -1 :color "grey40" :style nil) :foreground "grey80" :background "grey30")))
                :type "face")
                nil [92566 93104])
            ("define-obsolete-face-alias" code nil nil [93105 93179])
            ("mode-line-highlight" variable
               (:default-value (quote ((((class color) (min-colors 88)) :box (:line-width 2 :color "grey40" :style released-button)) (t :inherit highlight)))
                :type "face")
                nil [93181 93455])
            ("define-obsolete-face-alias" code nil nil [93456 93532])
            ("mode-line-emphasis" variable
               (:default-value (quote ((t (:weight bold))))
                :type "face")
                nil [93534 93777])
            ("mode-line-buffer-id" variable
               (:default-value (quote ((t (:weight bold))))
                :type "face")
                nil [93779 93962])
            ("define-obsolete-face-alias" code nil nil [93963 94039])
            ("header-line" variable
               (:default-value (quote ((default :inherit mode-line) (((type tty)) :inverse-video nil :underline t) (((class color grayscale) (background light)) :background "grey90" :foreground "grey20" :box nil) (((class color grayscale) (background dark)) :background "grey20" :foreground "grey90" :box nil) (((class mono) (background light)) :background "white" :foreground "black" :inverse-video nil :box nil :underline t) (((class mono) (background dark)) :background "black" :foreground "white" :inverse-video nil :box nil :underline t)))
                :type "face")
                nil [94041 95377])
            ("vertical-border" variable
               (:default-value (quote ((((type tty)) :inherit mode-line-inactive)))
                :type "face")
                nil [95379 95544])
            ("minibuffer-prompt" variable
               (:default-value (quote ((((background dark)) :foreground "cyan") (((type pc)) :foreground "magenta") (t :foreground "medium blue")))
                :type "face")
                nil [95546 96041])
            ("setq" code nil nil [96043 96154])
            ("fringe" variable
               (:default-value (quote ((((class color) (background light)) :background "grey95") (((class color) (background dark)) :background "grey10") (t :background "gray")))
                :type "face")
                nil [96156 96468])
            ("scroll-bar" variable
               (:default-value (quote ((t nil)))
                :type "face")
                nil [96470 96608])
            ("border" variable
               (:default-value (quote ((t nil)))
                :type "face")
                nil [96610 96739])
            ("cursor" variable
               (:default-value (quote ((((background light)) :background "black") (((background dark)) :background "white")))
                :type "face")
                nil [96741 97191])
            ("put" code nil nil [97193 97225])
            ("mouse" variable
               (:default-value (quote ((t nil)))
                :type "face")
                nil [97227 97353])
            ("tool-bar" variable
               (:default-value (quote ((default :box (:line-width 1 :style released-button) :foreground "black") (((type x w32 ns) (class color)) :background "grey75") (((type x) (class mono)) :background "grey")))
                :type "face")
                nil [97355 97645])
            ("menu" variable
               (:default-value (quote ((((type tty)) :inverse-video t) (((type x-toolkit))) (t :inverse-video t)))
                :type "face")
                nil [97647 97891])
            ("help-argument-name" variable
               (:default-value (quote ((t :inherit italic)))
                :type "face")
                nil [97893 98015])
            ("glyphless-char" variable
               (:default-value (quote ((((type tty)) :inherit underline) (((type pc)) :inherit escape-glyph) (t :height 0.6)))
                :type "face")
                nil [98017 98291])
            ("error" variable
               (:default-value (quote ((default :weight bold) (((class color) (min-colors 88) (background light)) :foreground "Red1") (((class color) (min-colors 88) (background dark)) :foreground "Pink") (((class color) (min-colors 16) (background light)) :foreground "Red1") (((class color) (min-colors 16) (background dark)) :foreground "Pink") (((class color) (min-colors 8)) :foreground "red") (t :inverse-video t)))
                :type "face")
                nil [98293 98823])
            ("warning" variable
               (:default-value (quote ((default :weight bold) (((class color) (min-colors 16)) :foreground "DarkOrange") (((class color)) :foreground "yellow")))
                :type "face")
                nil [98825 99059])
            ("success" variable
               (:default-value (quote ((default :weight bold) (((class color) (min-colors 16) (background light)) :foreground "ForestGreen") (((class color) (min-colors 88) (background dark)) :foreground "Green1") (((class color) (min-colors 16) (background dark)) :foreground "Green") (((class color)) :foreground "green")))
                :type "face")
                nil [99061 99480])
            ("tty-menu-enabled-face" variable
               (:default-value (quote ((t :foreground "yellow" :background "blue" :weight bold)))
                :type "face")
                nil [99506 99678])
            ("tty-menu-disabled-face" variable
               (:default-value (quote ((((class color) (min-colors 16)) :foreground "lightgray" :background "blue") (t :foreground "white" :background "blue")))
                :type "face")
                nil [99680 99926])
            ("tty-menu-selected-face" variable
               (:default-value (quote ((t :background "red")))
                :type "face")
                nil [99928 100075])
            ("paren-showing-faces" customgroup (:user-visible-flag t) nil [100077 100212])
            ("show-paren-match" variable
               (:default-value (quote ((((class color) (background light)) :background "turquoise") (((class color) (background dark)) :background "steelblue3") (((background dark)) :background "grey50") (t :background "gray")))
                :type "face")
                nil [100214 100599])
            ("show-paren-mismatch" variable
               (:default-value (quote ((((class color)) (:foreground "white" :background "purple")) (t (:inverse-video t))))
                :type "face")
                nil [100601 100792])
            ("x-font-regexp" variable nil nil [101168 101194])
            ("x-font-regexp-head" variable nil nil [101195 101226])
            ("x-font-regexp-weight" variable nil nil [101227 101260])
            ("x-font-regexp-slant" variable nil nil [101261 101293])
            ("x-font-regexp-weight-subnum" variable
               (:constant-flag t
                :default-value 1)
                nil [101295 101335])
            ("x-font-regexp-slant-subnum" variable
               (:constant-flag t
                :default-value 2)
                nil [101336 101375])
            ("x-font-regexp-swidth-subnum" variable
               (:constant-flag t
                :default-value 3)
                nil [101376 101416])
            ("x-font-regexp-adstyle-subnum" variable
               (:constant-flag t
                :default-value 4)
                nil [101417 101458])
            ("let" code nil nil [101541 102759])
            ("x-resolve-font-name" function (:arguments ("pattern" "face" "frame")) nil [102762 103933])
            ("font-list-limit" variable (:default-value 100) nil [103935 104050])
            ("make-obsolete-variable" code nil nil [104051 104103])
            ("faces" package nil nil [104105 104121]))          
      :file "faces.el"
      :pointmax 104146
      :fsize 104145
      :lastmodtime '(21187 50982 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "autoinsert.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("auto-insert" customgroup (:user-visible-flag t) nil [1866 2070])
            ("auto-insert" variable (:default-value (quote not-modified)) nil [2073 2865])
            ("auto-insert-query" variable (:default-value (quote function)) nil [2867 3201])
            ("auto-insert-prompt" variable (:default-value "Perform %s auto-insertion? ") nil [3203 3424])
            ("auto-insert-alist" variable (:default-value (quote ((("\\.\\([Hh]\\|hh\\|hpp\\)\\'" . "C / C++ header") (upcase (concat (file-name-nondirectory (file-name-sans-extension buffer-file-name)) "_" (file-name-extension buffer-file-name))) "#ifndef " str n "#define " str "

" _ "

#endif") (("\\.\\([Cc]\\|cc\\|cpp\\)\\'" . "C / C++ program") nil "#include \"" (let ((stem (file-name-sans-extension buffer-file-name))) (cond ((file-exists-p (concat stem ".h")) (file-name-nondirectory (concat stem ".h"))) ((file-exists-p (concat stem ".hh")) (file-name-nondirectory (concat stem ".hh"))))) & 34 | -10) (("[Mm]akefile\\'" . "Makefile") . "makefile.inc") (html-mode lambda nil (sgml-tag "html")) (plain-tex-mode . "tex-insert.tex") (bibtex-mode . "tex-insert.tex") (latex-mode "options, RET: " "\\documentclass[" str & 93 | -1 123 (read-string "class: ") "}
" ("package, %s: " "\\usepackage[" (read-string "options, RET: ") & 93 | -1 123 str "}
") _ "
\\begin{document}
" _ "
\\end{document}") (("/bin/.*[^/]\\'" . "Shell-Script mode magic number") lambda nil (if (eq major-mode (default-value (quote major-mode))) (sh-mode))) (ada-mode . ada-header) (("\\.[1-9]\\'" . "Man page skeleton") "Short description: " ".\\\" Copyright (C), " (format-time-string "%Y") "  " (getenv "ORGANIZATION") | (progn user-full-name) "
.\\\" You may distribute this file under the terms of the GNU Free
.\\\" Documentation License.
.TH " (file-name-base) " " (file-name-extension (buffer-file-name)) " " (format-time-string "%Y-%m-%d ") "
.SH NAME
" (file-name-base) " \\- " str "
.SH SYNOPSIS
.B " (file-name-base) "
" _ "
.SH DESCRIPTION
.SH OPTIONS
.SH FILES
.SH \"SEE ALSO\"
.SH BUGS
.SH AUTHOR
" (user-full-name) (quote (if (search-backward "&" (line-beginning-position) t) (replace-match (capitalize (user-login-name)) t t))) (quote (end-of-line 1)) " <" (progn user-mail-address) ">
") (("\\.el\\'" . "Emacs Lisp header") "Short description: " ";;; " (file-name-nondirectory (buffer-file-name)) " --- " str (make-string (max 2 (- 80 (current-column) 27)) 32) "-*- lexical-binding: t; -*-" (quote (setq lexical-binding t)) "

;; Copyright (C) " (format-time-string "%Y") "  " (getenv "ORGANIZATION") | (progn user-full-name) "

;; Author: " (user-full-name) (quote (if (search-backward "&" (line-beginning-position) t) (replace-match (capitalize (user-login-name)) t t))) (quote (end-of-line 1)) " <" (progn user-mail-address) ">
;; Keywords: " (quote (require (quote finder))) (quote (setq v1 (mapcar (lambda (x) (list (symbol-name (car x)))) finder-known-keywords) v2 (mapconcat (lambda (x) (format "%12s:  %s" (car x) (cdr x))) finder-known-keywords "
"))) ((let ((minibuffer-help-form v2)) (completing-read "Keyword, C-h: " v1 nil t)) str ", ") & -2 "

;; This program is free software; you can redistribute it and/or modify
;; it under the terms of the GNU General Public License as published by
;; the Free Software Foundation, either version 3 of the License, or
;; (at your option) any later version.

;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
;; GNU General Public License for more details.

;; You should have received a copy of the GNU General Public License
;; along with this program.  If not, see <http://www.gnu.org/licenses/>.

;;; Commentary:

;; " _ "

;;; Code:



(provide '" (file-name-base) ")
;;; " (file-name-nondirectory (buffer-file-name)) " ends here
") (("\\.texi\\(nfo\\)?\\'" . "Texinfo file skeleton") "Title: " "\\input texinfo   @c -*-texinfo-*-
@c %**start of header
@setfilename " (file-name-base) ".info
" "@settitle " str "
@c %**end of header
@copying
" (setq short-description (read-string "Short description: ")) ".

" "Copyright @copyright{} " (format-time-string "%Y") "  " (getenv "ORGANIZATION") | (progn user-full-name) "

@quotation
Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3
or any later version published by the Free Software Foundation;
with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.
A copy of the license is included in the section entitled ``GNU
Free Documentation License''.

A copy of the license is also available from the Free Software
Foundation Web site at @url{http://www.gnu.org/licenses/fdl.html}.

@end quotation

The document was typeset with
@uref{http://www.texinfo.org/, GNU Texinfo}.

@end copying

@titlepage
@title " str "
@subtitle " short-description "
@author " (getenv "ORGANIZATION") | (progn user-full-name) " <" (progn user-mail-address) ">
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@c Output the table of the contents at the beginning.
@contents

@ifnottex
@node Top
@top " str "

@insertcopying
@end ifnottex

@c Generate the nodes for this menu with `C-c C-u C-m'.
@menu
@end menu

@c Update all node entries with `C-c C-u C-n'.
@c Insert new nodes with `C-c C-c n'.
@node Chapter One
@chapter Chapter One

" _ "

@node Copying This Manual
@appendix Copying This Manual

@menu
* GNU Free Documentation License::  License for copying this manual.
@end menu

@c Get fdl.texi from http://www.gnu.org/licenses/fdl.html
@include fdl.texi

@node Index
@unnumbered Index

@printindex cp

@bye

@c " (file-name-nondirectory (buffer-file-name)) " ends here
")))) nil [3427 10037])
            ("auto-insert-directory" variable (:default-value "~/insert/") nil [10095 10338])
            ("auto-insert" function (:user-visible-flag t) nil [10356 12411])
            ("define-auto-insert" function (:arguments ("condition" "action" "after")) nil [12429 13146])
            ("define-minor-mode" code nil nil [13163 13698])
            ("autoinsert" package nil nil [13700 13721]))          
      :file "autoinsert.el"
      :pointmax 13751
      :fsize 13750
      :lastmodtime '(21187 50982 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "image.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("image" customgroup (:user-visible-flag t) nil [849 908])
            ("defalias" code nil nil [910 948])
            ("image-type-header-regexps" variable
               (:constant-flag t
                :default-value (\` (("\\`/[	
 ]*\\*.*XPM.\\*/" . xpm) ("\\`P[1-6]\\(?:\\(?:\\(?:#[^
]*[
]\\)?[[:space:]]\\)+\\(?:\\(?:#[^
]*[
]\\)?[0-9]\\)+\\)\\{2\\}" . pbm) ("\\`GIF8[79]a" . gif) ("\\`\211PNG

" . png) ("\\`[	
 ]*#define \\([a-z0-9_]+\\)_width [0-9]+
#define \\1_height [0-9]+
\\(#define \\1_x_hot [0-9]+
#define \\1_y_hot [0-9]+
\\)?static \\(unsigned \\)?char \\1_bits" . xbm) ("\\`\\(?:MM \\*\\|II\\* \\)" . tiff) ("\\`[	
 ]*%!PS" . postscript) ("\\`\377\330" . jpeg) ((\, (let* ((incomment-re "\\(?:[^-]\\|-[^-]\\)") (comment-re (concat "\\(?:!--" incomment-re "*-->[ 	
]*<\\)"))) (concat "\\(?:<\\?xml[ 	
]+[^>]*>\\)?[ 	
]*<" comment-re "*" "\\(?:!DOCTYPE[ 	
]+[^>]*>[ 	
]*<[ 	
]*" comment-re "*\\)?" "[Ss][Vv][Gg]"))) . svg))))
                nil [950 2274])
            ("image-type-file-name-regexps" variable (:default-value (quote (("\\.png\\'" . png) ("\\.gif\\'" . gif) ("\\.jpe?g\\'" . jpeg) ("\\.bmp\\'" . bmp) ("\\.xpm\\'" . xpm) ("\\.pbm\\'" . pbm) ("\\.xbm\\'" . xbm) ("\\.ps\\'" . postscript) ("\\.tiff?\\'" . tiff) ("\\.svgz?\\'" . svg)))) nil [2276 2735])
            ("image-type-auto-detectable" variable (:default-value (quote ((pbm . t) (xbm) (bmp . maybe) (gif . maybe) (png . maybe) (xpm) (jpeg . maybe) (tiff . maybe) (svg . maybe) (postscript)))) nil [2912 3415])
            ("image-format-suffixes" variable (:default-value (quote ((image/x-icon "ico")))) nil [3417 3932])
            ("image-load-path" variable (:default-value (list (file-name-as-directory (expand-file-name "images" data-directory)) (quote data-directory) (quote load-path))) nil [3934 4553])
            ("image-load-path-for-library" function (:arguments ("library" "image" "path" "no-error")) nil [4556 8600])
            ("image-jpeg-p" function (:arguments ("data")) nil [8696 9484])
            ("image-type-from-data" function (:arguments ("data")) nil [9502 10075])
            ("image-type-from-buffer" function nil nil [10093 10939])
            ("image-type-from-file-header" function (:arguments ("file")) nil [10957 11444])
            ("image-type-from-file-name" function (:arguments ("file")) nil [11462 11970])
            ("image-type" function (:arguments ("source" "type" "data-p")) nil [11987 12860])
            ("if" code nil nil [12863 13013])
            ("define-obsolete-variable-alias" code nil nil [13015 13106])
            ("image-type-available-p" function (:arguments ("type")) nil [13123 13329])
            ("image-type-auto-detected-p" function nil nil [13347 13992])
            ("create-image" function (:arguments ("file-or-data" "type" "data-p" "props")) nil [14010 15108])
            ("put-image" function (:arguments ("image" "pos" "string" "area")) nil [15126 16409])
            ("insert-image" function (:arguments ("image" "string" "area" "slice")) nil [16427 18232])
            ("insert-sliced-image" function (:arguments ("image" "string" "area" "rows" "cols")) nil [18250 19904])
            ("remove-images" function (:arguments ("start" "end" "buffer")) nil [19923 20410])
            ("image-search-load-path" function (:arguments ("file" "path")) nil [20412 21118])
            ("find-image" function (:arguments ("specs")) nil [21135 22448])
            ("defimage" function (:arguments ("symbol" "specs" "doc")) nil [22466 23334])
            ("image-default-frame-delay" variable (:default-value 0.1) nil [23362 23520])
            ("image-multi-frame-p" function (:arguments ("image")) nil [23522 24210])
            ("image-animated-p" function (:arguments ("image")) nil [24212 24392])
            ("make-obsolete" code nil nil [24394 24455])
            ("image-animate" function (:arguments ("image" "index" "limit")) nil [24477 25134])
            ("image-animate-timer" function (:arguments ("image")) nil [25136 25519])
            ("image-minimum-frame-delay" variable
               (:constant-flag t
                :default-value 0.01)
                nil [25521 25631])
            ("image-current-frame" function (:arguments ("image")) nil [25633 25763])
            ("image-show-frame" function (:arguments ("image" "n" "nocheck")) nil [25765 26147])
            ("image-animate-get-speed" function (:arguments ("image")) nil [26149 26277])
            ("image-animate-set-speed" function (:arguments ("image" "value" "multiply")) nil [26279 26613])
            ("image-animate-timeout" function (:arguments ("image" "n" "count" "time-elapsed" "limit")) nil [26822 28297])
            ("imagemagick-types-inhibit" variable nil nil [28301 28335])
            ("imagemagick-enabled-types" variable nil nil [28336 28370])
            ("imagemagick-filter-types" function nil nil [28372 29189])
            ("imagemagick--file-regexp" variable nil nil [29191 29408])
            ("imagemagick-register-types" function nil nil [29425 30917])
            ("imagemagick-types-inhibit" variable (:default-value (quote (C HTML HTM INFO M TXT PDF))) nil [30919 31796])
            ("imagemagick-enabled-types" variable (:default-value (quote (3FR ART ARW AVS BMP BMP2 BMP3 CAL CALS CMYK CMYKA CR2 CRW CUR CUT DCM DCR DCX DDS DJVU DNG DPX EXR FAX FITS GBR GIF GIF87 GRB HRZ ICB ICO ICON J2C JNG JP2 JPC JPEG JPG JPX K25 KDC MIFF MNG MRW MSL MSVG MTV NEF ORF OTB PBM PCD PCDS PCL PCT PCX PDB PEF PGM PICT PIX PJPEG PNG PNG24 PNG32 PNG8 PNM PPM PSD PTIF PWP RAF RAS RBG RGB RGBA RGBO RLA RLE SCR SCT SFW SGI SR2 SRF SUN SVG SVGZ TGA TIFF TIFF64 TILE TIM TTF UYVY VDA VICAR VID VIFF VST WBMP WPG X3F XBM XC XCF XPM XV XWD YCbCr YCbCrA YUV))) nil [31798 33356])
            ("imagemagick-register-types" code nil nil [33358 33386])
            ("image" package nil nil [33388 33404]))          
      :file "image.el"
      :pointmax 33429
      :fsize 33428
      :lastmodtime '(21215 33160 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "abbrev.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl-lib" include nil nil [1033 1050])
            ("abbrev-mode" customgroup (:user-visible-flag t) nil [1053 1167])
            ("abbrev-file-name" variable (:default-value (locate-user-emacs-file "abbrev_defs" ".abbrev_defs")) nil [1169 1359])
            ("only-global-abbrevs" variable nil nil [1361 1612])
            ("define-minor-mode" code nil nil [1614 2042])
            ("put" code nil nil [2044 2093])
            ("edit-abbrevs-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "" (quote abbrev-edit-save-buffer)) (define-key map "" (quote abbrev-edit-save-to-file)) (define-key map "" (quote edit-abbrevs-redefine)) map)) nil [2097 2377])
            ("define-obsolete-variable-alias" code nil nil [2378 2460])
            ("kill-all-abbrevs" function (:user-visible-flag t) nil [2462 2633])
            ("copy-abbrev-table" function (:arguments ("table")) nil [2635 2970])
            ("insert-abbrevs" function (:user-visible-flag t) nil [2972 3258])
            ("list-abbrevs" function
               (:user-visible-flag t
                :arguments ("local"))
                nil [3260 3558])
            ("abbrev-table-name" function (:arguments ("table")) nil [3560 3846])
            ("prepare-abbrev-list-buffer" function (:arguments ("local")) nil [3848 4734])
            ("edit-abbrevs" function (:user-visible-flag t) nil [4736 5679])
            ("edit-abbrevs-redefine" function (:user-visible-flag t) nil [5681 5876])
            ("define-abbrevs" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [5878 6876])
            ("read-abbrev-file" function
               (:user-visible-flag t
                :arguments ("file" "quietly"))
                nil [6878 7395])
            ("quietly-read-abbrev-file" function (:arguments ("file")) nil [7397 7722])
            ("write-abbrev-file" function
               (:user-visible-flag t
                :arguments ("file" "verbose"))
                nil [7724 9483])
            ("abbrev-edit-save-to-file" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [9485 9805])
            ("abbrev-edit-save-buffer" function (:user-visible-flag t) nil [9807 10040])
            ("add-mode-abbrev" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [10044 10584])
            ("add-global-abbrev" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [10586 11076])
            ("add-abbrev" function (:arguments ("table" "type" "arg")) nil [11078 11671])
            ("inverse-add-mode-abbrev" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [11673 12104])
            ("inverse-add-global-abbrev" function
               (:user-visible-flag t
                :arguments ("n"))
                nil [12106 12449])
            ("inverse-add-abbrev" function (:arguments ("table" "type" "arg")) nil [12451 13062])
            ("abbrev-prefix-mark" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [13064 13725])
            ("expand-region-abbrevs" function
               (:user-visible-flag t
                :arguments ("start" "end" "noquery"))
                nil [13727 14414])
            ("abbrev-table-get" function (:arguments ("table" "prop")) nil [14440 14593])
            ("abbrev-table-put" function (:arguments ("table" "prop" "val")) nil [14595 14820])
            ("defalias" code nil nil [14822 14911])
            ("defalias" code nil nil [14913 15083])
            ("abbrev-table-name-list" variable (:default-value (quote (fundamental-mode-abbrev-table global-abbrev-table))) nil [15139 15280])
            ("make-abbrev-table" function (:arguments ("props")) nil [15282 16073])
            ("abbrev-table-p" function (:arguments ("object")) nil [16075 16244])
            ("abbrev-table-empty-p" function (:arguments ("object" "ignore-system")) nil [16246 16710])
            ("global-abbrev-table" variable (:default-value (make-abbrev-table)) nil [16712 16959])
            ("abbrev-minor-mode-table-alist" variable nil nil [16961 17216])
            ("fundamental-mode-abbrev-table" variable (:default-value (let ((table (make-abbrev-table))) (setq-default local-abbrev-table table) table)) nil [17218 17493])
            ("abbrevs-changed" variable nil nil [17495 17643])
            ("abbrev-all-caps" variable nil nil [17645 17786])
            ("abbrev-start-location" variable nil nil [17788 17990])
            ("abbrev-start-location-buffer" variable nil nil [17992 18170])
            ("last-abbrev" variable nil nil [18172 18269])
            ("last-abbrev-text" variable nil nil [18271 18401])
            ("last-abbrev-location" variable nil nil [18403 18493])
            ("pre-abbrev-expand-hook" variable nil nil [18670 18945])
            ("make-obsolete-variable" code nil nil [18946 19025])
            ("clear-abbrev-table" function (:arguments ("table")) nil [19027 19649])
            ("define-abbrev" function (:arguments ("table" "name" "expansion" "hook" "props")) nil [19651 22662])
            ("abbrev--check-chars" function (:arguments ("abbrev" "global")) nil [22664 23407])
            ("define-global-abbrev" function
               (:user-visible-flag t
                :arguments ("abbrev" "expansion"))
                nil [23409 23767])
            ("define-mode-abbrev" function
               (:user-visible-flag t
                :arguments ("abbrev" "expansion"))
                nil [23769 24191])
            ("abbrev--active-tables" function (:arguments ("tables")) nil [24193 25240])
            ("abbrev--symbol" function (:arguments ("abbrev" "table")) nil [25243 26191])
            ("abbrev-symbol" function (:arguments ("abbrev" "table")) nil [26193 26887])
            ("abbrev-expansion" function (:arguments ("abbrev" "table")) nil [26890 27150])
            ("abbrev--before-point" function nil nil [27153 29737])
            ("abbrev-insert" function (:arguments ("abbrev" "name" "wordstart" "wordend")) nil [29739 32783])
            ("abbrev-expand-functions" variable nil nil [32785 32862])
            ("make-obsolete-variable" code nil nil [32863 32943])
            ("abbrev-expand-function" variable (:default-value (function abbrev--default-expand)) nil [32945 33122])
            ("expand-abbrev" function (:user-visible-flag t) nil [33124 33474])
            ("abbrev--default-expand" function nil nil [33476 34714])
            ("unexpand-abbrev" function (:user-visible-flag t) nil [34716 35614])
            ("abbrev--write" function (:arguments ("sym")) nil [35616 36071])
            ("abbrev--describe" function (:arguments ("sym")) nil [36073 36467])
            ("insert-abbrev-table-description" function (:arguments ("name" "readable")) nil [36469 37510])
            ("put" code nil nil [37512 37556])
            ("define-abbrev-table" function (:arguments ("tablename" "definitions" "docstring" "props")) nil [37557 39561])
            ("abbrev-table-menu" function (:arguments ("table" "prompt" "sortfun")) nil [39563 40379])
            ("define-derived-mode" code nil nil [40474 40600])
            ("abbrev" package nil nil [40602 40619]))          
      :file "abbrev.el"
      :pointmax 40645
      :fsize 40644
      :lastmodtime '(21195 15725 0 0)
      :unmatched-syntax '((close-paren 1050 . 1051) (symbol 1015 . 1032) (open-paren 1014 . 1015)))
    (semanticdb-table "button.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("button" variable
               (:default-value (quote ((t :inherit link)))
                :type "face")
                nil [2216 2310])
            ("button-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map [(control 109)] (quote push-button)) (define-key map [mouse-2] (quote push-button)) (define-key map [mode-line mouse-2] (quote push-button)) (define-key map [header-line mouse-2] (quote push-button)) map)) nil [2312 2923])
            ("button-buffer-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map [9] (quote forward-button)) (define-key map "	" (quote backward-button)) (define-key map [backtab] (quote backward-button)) map)) nil [2925 3249])
            ("put" code nil nil [3285 3320])
            ("put" code nil nil [3321 3365])
            ("put" code nil nil [3366 3406])
            ("put" code nil nil [3407 3442])
            ("put" code nil nil [3508 3545])
            ("put" code nil nil [3546 3622])
            ("put" code nil nil [3692 3726])
            ("put" code nil nil [3822 3861])
            ("put" code nil nil [3923 3976])
            ("button-category-symbol" function (:arguments ("type")) nil [4537 4807])
            ("define-button-type" function (:arguments ("name" "properties")) nil [4809 6447])
            ("button-type-put" function (:arguments ("type" "prop" "val")) nil [6449 6588])
            ("button-type-get" function (:arguments ("type" "prop")) nil [6590 6721])
            ("button-type-subtype-p" function (:arguments ("type" "supertype")) nil [6723 6951])
            ("button-start" function (:arguments ("button")) nil [6998 7244])
            ("button-end" function (:arguments ("button")) nil [7246 7477])
            ("button-get" function (:arguments ("button" "prop")) nil [7479 7808])
            ("button-put" function (:arguments ("button" "prop" "val")) nil [7810 8779])
            ("button-activate" function (:arguments ("button" "use-mouse-action")) nil [8781 9601])
            ("button-label" function (:arguments ("button")) nil [9603 9857])
            ("button-type" function (:arguments ("button")) nil [9859 9951])
            ("button-has-type-p" function (:arguments ("button" "type")) nil [9953 10121])
            ("button--area-button-p" function (:arguments ("b")) nil [10123 10302])
            ("defalias" code nil nil [10304 10395])
            ("make-button" function (:arguments ("beg" "end" "properties")) nil [10427 11355])
            ("insert-button" function (:arguments ("label" "properties")) nil [11357 11824])
            ("make-text-button" function (:arguments ("beg" "end" "properties")) nil [11863 14074])
            ("insert-text-button" function (:arguments ("label" "properties")) nil [14076 14761])
            ("button-at" function (:arguments ("pos")) nil [14797 15187])
            ("next-button" function (:arguments ("pos" "count-current")) nil [15189 15755])
            ("previous-button" function (:arguments ("pos" "count-current")) nil [15757 16764])
            ("push-button" function
               (:user-visible-flag t
                :arguments ("pos" "use-mouse-action"))
                nil [16786 18083])
            ("forward-button" function
               (:user-visible-flag t
                :arguments ("n" "wrap" "display-message"))
                nil [18085 19604])
            ("backward-button" function
               (:user-visible-flag t
                :arguments ("n" "wrap" "display-message"))
                nil [19606 20110])
            ("button" package nil nil [20113 20130]))          
      :file "button.el"
      :pointmax 20156
      :fsize 20155
      :lastmodtime '(21187 50982 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "custom.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("widget" include nil nil [1232 1249])
            ("custom-define-hook" variable nil nil [1251 1400])
            ("custom-dont-initialize" variable nil nil [1402 1585])
            ("custom-current-group-alist" variable nil nil [1587 1700])
            ("custom-initialize-default" function (:arguments ("symbol" "exp")) nil [1730 2193])
            ("custom-initialize-set" function (:arguments ("symbol" "exp")) nil [2195 2770])
            ("custom-initialize-reset" function (:arguments ("symbol" "exp")) nil [2772 3539])
            ("custom-initialize-changed" function (:arguments ("symbol" "exp")) nil [3541 4319])
            ("custom-delayed-init-variables" variable nil nil [4321 4418])
            ("custom-initialize-delay" function (:arguments ("symbol" "_value")) nil [4420 5544])
            ("custom-declare-variable" function (:arguments ("symbol" "default" "doc" "args")) nil [5546 8145])
            ("defcustom" function (:arguments ("symbol" "standard" "doc" "args")) nil [8147 14220])
            ("defface" function (:arguments ("face" "spec" "doc" "args")) nil [14248 17188])
            ("custom-current-group" function nil nil [17217 17306])
            ("custom-declare-group" function (:arguments ("symbol" "members" "doc" "args")) nil [17308 18369])
            ("defgroup" function (:arguments ("symbol" "members" "doc" "args")) nil [18371 19531])
            ("custom-add-to-group" function (:arguments ("group" "option" "widget")) nil [19533 19879])
            ("custom-group-of-mode" function (:arguments ("mode")) nil [19881 20283])
            ("custom-handle-all-keywords" function (:arguments ("symbol" "args" "type")) nil [20302 20892])
            ("custom-handle-keyword" function (:arguments ("symbol" "keyword" "value" "type")) nil [20894 21605])
            ("custom-add-dependencies" function (:arguments ("symbol" "value")) nil [21607 22360])
            ("custom-add-option" function (:arguments ("symbol" "option")) nil [22362 22813])
            ("defalias" code nil nil [22814 22870])
            ("custom-add-link" function (:arguments ("symbol" "widget")) nil [22872 23108])
            ("custom-add-version" function (:arguments ("symbol" "version")) nil [23110 23260])
            ("custom-add-package-version" function (:arguments ("symbol" "version")) nil [23262 23436])
            ("custom-add-load" function (:arguments ("symbol" "load")) nil [23438 23734])
            ("custom-autoload" function (:arguments ("symbol" "load" "noset")) nil [23736 24022])
            ("custom-variable-p" function (:arguments ("variable")) nil [24024 24457])
            ("define-obsolete-function-alias" code nil nil [24459 24534])
            ("custom-note-var-changed" function (:arguments ("variable")) nil [24536 24831])
            ("custom-load-recursion" variable nil nil [24974 25050])
            ("custom-load-symbol" function (:arguments ("symbol")) nil [25052 26311])
            ("custom-local-buffer" variable nil nil [26314 26634])
            ("put" code nil nil [26635 26680])
            ("custom-set-default" function (:arguments ("variable" "value")) nil [26682 27063])
            ("custom-set-minor-mode" function (:arguments ("variable" "value")) nil [27065 27489])
            ("custom-quote" function (:arguments ("sexp")) nil [27491 27829])
            ("customize-mark-to-save" function (:arguments ("symbol")) nil [27831 28994])
            ("customize-mark-as-set" function (:arguments ("symbol")) nil [28996 30151])
            ("custom-reevaluate-setting" function (:arguments ("symbol")) nil [30153 30625])
            ("custom-known-themes" variable (:default-value (quote (user changed))) nil [32452 32840])
            ("custom-theme-p" function (:arguments ("theme")) nil [32842 32951])
            ("custom-check-theme" function (:arguments ("theme")) nil [32953 33131])
            ("custom-push-theme" function (:arguments ("prop" "symbol" "theme" "mode" "value")) nil [33133 35329])
            ("custom-fix-face-spec" function (:arguments ("spec")) nil [35331 36101])
            ("custom-set-variables" function (:arguments ("args")) nil [36104 36715])
            ("custom-theme-set-variables" function (:arguments ("theme" "args")) nil [36717 39392])
            ("custom--sort-vars-table" variable nil nil [39394 39426])
            ("custom--sort-vars-result" variable nil nil [39427 39460])
            ("custom--sort-vars" function (:arguments ("vars")) nil [39462 40994])
            ("custom--sort-vars-1" function (:arguments ("sym" "_ignored")) nil [40996 41580])
            ("deftheme" function (:arguments ("theme" "doc" "ignored")) nil [42176 42797])
            ("custom-declare-theme" function (:arguments ("theme" "feature" "doc" "ignored")) nil [42799 43287])
            ("custom-make-theme-feature" function (:arguments ("theme")) nil [43289 43794])
            ("custom-theme-directory" variable (:default-value user-emacs-directory) nil [43818 44165])
            ("custom-theme-load-path" variable (:default-value (list (quote custom-theme-directory) t)) nil [44167 44968])
            ("custom--inhibit-theme-enable" variable nil nil [44970 45256])
            ("provide-theme" function (:arguments ("theme")) nil [45258 45656])
            ("custom-safe-themes" variable (:default-value (quote (default))) nil [45658 46278])
            ("load-theme" function
               (:user-visible-flag t
                :arguments ("theme" "no-confirm" "no-enable"))
                nil [46280 49156])
            ("custom-theme-load-confirm" function (:arguments ("hash")) nil [49158 49908])
            ("custom-theme-name-valid-p" function (:arguments ("name")) nil [49910 50175])
            ("custom-available-themes" function nil nil [50177 51057])
            ("custom-theme--load-path" function nil nil [51059 51378])
            ("enable-theme" function
               (:user-visible-flag t
                :arguments ("theme"))
                nil [51425 52661])
            ("custom-enabled-themes" variable nil nil [52663 53973])
            ("custom-theme-enabled-p" function (:arguments ("theme")) nil [53975 54093])
            ("disable-theme" function
               (:user-visible-flag t
                :arguments ("theme"))
                nil [54095 55694])
            ("declare-function" code nil nil [55736 55830])
            ("custom--frame-color-default" function (:arguments ("frame" "attribute" "resource-attr" "resource-class" "tty-default" "x-default")) nil [55832 56192])
            ("custom-variable-theme-value" function (:arguments ("variable")) nil [56194 56587])
            ("custom-theme-recalc-variable" function (:arguments ("variable")) nil [56589 57044])
            ("custom-theme-recalc-face" function (:arguments ("face")) nil [57046 57466])
            ("custom-theme-reset-variables" function (:arguments ("theme" "args")) nil [57683 58054])
            ("custom-reset-variables" function (:arguments ("args")) nil [58056 58397])
            ("custom" package nil nil [58413 58430]))          
      :file "custom.el"
      :pointmax 58456
      :fsize 58455
      :lastmodtime '(21187 50982 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "skeleton.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("cl-lib" include nil nil [1302 1319])
            ("skeleton-transformation-function" variable (:default-value (quote identity)) nil [1483 1769])
            ("defvaralias" code nil nil [1770 1842])
            ("put" code nil nil [1889 1984])
            ("skeleton-autowrap" variable (:default-value t) nil [1987 2470])
            ("skeleton-end-newline" variable (:default-value t) nil [2472 2647])
            ("skeleton-end-hook" variable (:default-value (lambda nil (or (eolp) (not skeleton-end-newline) (newline-and-indent)))) nil [2649 2994])
            ("skeleton-filter-function" variable (:default-value (quote identity)) nil [3012 3129])
            ("defvaralias" code nil nil [3130 3186])
            ("skeleton-untabify" variable nil nil [3188 3302])
            ("skeleton-newline-indent-rigidly" variable nil nil [3304 3459])
            ("defvar-local" code nil nil [3461 3747])
            ("skeleton-subprompt" variable (:default-value (substitute-command-keys "RET, \\<minibuffer-local-map>\\[abort-recursive-edit] or \\[help-command]")) nil [3749 3944])
            ("skeleton-debug" variable nil nil [3947 4042])
            ("skeleton-positions" variable nil nil [4044 4284])
            ("skeleton-il" variable nil nil [4328 4348])
            ("skeleton-modified" variable nil nil [4349 4375])
            ("skeleton-point" variable nil nil [4376 4399])
            ("skeleton-regions" variable nil nil [4400 4425])
            ("def-edebug-spec" code nil nil [4427 4638])
            ("define-skeleton" function (:arguments ("command" "documentation" "skeleton")) nil [4654 5909])
            ("skeleton-proxy-new" function (:arguments ("skeleton" "str" "arg")) nil [5926 7186])
            ("skeleton-insert" function (:arguments ("skeleton" "regions" "str")) nil [7203 11534])
            ("skeleton-read" function (:arguments ("prompt" "initial-input" "recursive")) nil [11536 13560])
            ("skeleton-internal-list" function (:arguments ("skeleton-il" "str" "recursive")) nil [13562 14818])
            ("skeleton-internal-1" function (:arguments ("element" "literal" "recursive")) nil [14821 17538])
            ("skeleton-pair" variable nil nil [18599 18811])
            ("skeleton-pair-on-word" variable nil nil [18814 18923])
            ("skeleton-pair-filter-function" variable (:default-value (lambda nil nil)) nil [18926 19132])
            ("skeleton-pair-alist" variable nil nil [19135 19461])
            ("skeleton-pair-default-alist" variable (:default-value (quote ((40 _ 41) (41) (91 _ 93) (93) (123 _ 125) (125) (60 _ 62) (62) (171 _ 187) (187) (96 _ 39)))) nil [19463 19642])
            ("skeleton-pair-insert-maybe" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [19659 21165])
            ("skeleton" package nil nil [22667 22686]))          
      :file "skeleton.el"
      :pointmax 22714
      :fsize 22716
      :lastmodtime '(21187 50982 0 0)
      :unmatched-syntax '((close-paren 1319 . 1320) (symbol 1284 . 1301) (open-paren 1283 . 1284)))
    (semanticdb-table "loaddefs.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("5x5" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [174 1115])
            ("5x5-crack-randomly" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1117 1215])
            ("5x5-crack-mutating-current" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1217 1333])
            ("5x5-crack-mutating-best" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1335 1445])
            ("5x5-crack-xor-mutate" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1447 1583])
            ("5x5-crack" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1585 1955])
            ("ada-add-extensions" function (:prototype-flag t) nil [2101 2387])
            ("ada-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [2389 2486])
            ("ada-header" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [2633 2735])
            ("ada-find-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [2882 3018])
            ("put" code nil nil [3140 3209])
            ("add-log-current-defun-function" variable nil nil [3211 3466])
            ("custom-autoload" code nil nil [3468 3529])
            ("add-log-full-name" variable nil nil [3531 3696])
            ("custom-autoload" code nil nil [3698 3746])
            ("add-log-mailing-address" variable nil nil [3748 4109])
            ("custom-autoload" code nil nil [4111 4165])
            ("prompt-for-change-log-name" function (:prototype-flag t) nil [4167 4264])
            ("find-change-log" function (:prototype-flag t) nil [4266 5041])
            ("add-change-log-entry" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [5043 6344])
            ("add-change-log-entry-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [6346 6610])
            ("change-log-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [6612 7038])
            ("add-log-current-defun" function (:prototype-flag t) nil [7040 7561])
            ("change-log-merge" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [7563 7964])
            ("ad-redefinition-action" variable (:default-value (quote warn)) nil [8107 8761])
            ("custom-autoload" code nil nil [8763 8815])
            ("ad-default-compilation-action" variable (:default-value (quote maybe)) nil [8817 9366])
            ("custom-autoload" code nil nil [9368 9427])
            ("ad-enable-advice" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [9429 9555])
            ("ad-disable-advice" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [9557 9684])
            ("ad-add-advice" function (:prototype-flag t) nil [9686 10816])
            ("ad-activate" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [10818 11899])
            ("defadvice" function (:prototype-flag t) nil [11901 14150])
            ("put" code nil nil [14152 14187])
            ("put" code nil nil [14189 14230])
            ("align" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [14340 15162])
            ("align-regexp" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [15164 16972])
            ("align-entire" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [16974 17350])
            ("align-current" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [17352 17780])
            ("align-highlight-rule" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [17782 18242])
            ("align-unhighlight-rule" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [18244 18369])
            ("align-newline-and-indent" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [18371 18502])
            ("push" code nil nil [18614 18671])
            ("allout-auto-activation-helper" function (:prototype-flag t) nil [18673 18856])
            ("allout-setup" function (:prototype-flag t) nil [18858 19182])
            ("allout-auto-activation" variable nil nil [19184 19848])
            ("custom-autoload" code nil nil [19850 19904])
            ("put" code nil nil [19906 20028])
            ("put" code nil nil [20030 20122])
            ("put" code nil nil [20124 20238])
            ("put" code nil nil [20240 20297])
            ("put" code nil nil [20299 20357])
            ("put" code nil nil [20359 20423])
            ("put" code nil nil [20425 20495])
            ("put" code nil nil [20497 20638])
            ("put" code nil nil [20640 20761])
            ("put" code nil nil [20763 20882])
            ("put" code nil nil [20884 21024])
            ("put" code nil nil [21026 21167])
            ("put" code nil nil [21169 21234])
            ("put" code nil nil [21236 21337])
            ("put" code nil nil [21339 21409])
            ("put" code nil nil [21411 21477])
            ("allout-mode-p" function (:prototype-flag t) nil [21479 21585])
            ("allout-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [21587 34580])
            ("defalias" code nil nil [34582 34629])
            ("outlineify-sticky" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [34631 34907])
            ("push" code nil nil [35051 35116])
            ("allout-widgets-setup" function (:prototype-flag t) nil [35118 35343])
            ("allout-widgets-auto-activation" variable nil nil [35345 35879])
            ("custom-autoload" code nil nil [35881 35951])
            ("put" code nil nil [35953 36076])
            ("allout-widgets-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [36078 37095])
            ("defalias" code nil nil [37230 37283])
            ("ange-ftp-reread-dir" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [37285 37680])
            ("ange-ftp-hook-function" function (:prototype-flag t) nil [37682 37768])
            ("animate-string" function (:prototype-flag t) nil [37902 38293])
            ("animate-sequence" function (:prototype-flag t) nil [38295 38659])
            ("animate-birthday-present" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [38661 38976])
            ("push" code nil nil [39108 39171])
            ("ansi-color-for-comint-mode-on" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [39173 39283])
            ("ansi-color-process-output" function (:prototype-flag t) nil [39285 39874])
            ("push" code nil nil [40026 40089])
            ("antlr-show-makefile-rules" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [40091 40945])
            ("antlr-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [40947 41043])
            ("antlr-set-tabs" function (:prototype-flag t) nil [41045 41241])
            ("appt-add" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [41366 41730])
            ("appt-activate" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [41732 41928])
            ("apropos-read-pattern" function (:prototype-flag t) nil [42044 42397])
            ("apropos-user-option" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [42399 42901])
            ("apropos-variable" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [42903 43114])
            ("defalias" code nil nil [43116 43160])
            ("apropos-command" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [43162 43925])
            ("apropos-documentation-property" function (:prototype-flag t) nil [43927 44087])
            ("apropos" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [44089 44768])
            ("apropos-library" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [44770 45063])
            ("apropos-value" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [45065 45707])
            ("apropos-documentation" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [45709 46425])
            ("archive-mode" function (:prototype-flag t) nil [46544 47069])
            ("array-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [47179 50264])
            ("push" code nil nil [50404 50463])
            ("artist-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [50465 58148])
            ("asm-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [58295 59023])
            ("auth-source-cache-expiry" variable (:default-value 7200) nil [59169 59336])
            ("custom-autoload" code nil nil [59338 59397])
            ("autoarg-mode" variable nil nil [59513 59647])
            ("custom-autoload" code nil nil [59649 59694])
            ("autoarg-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [59696 60779])
            ("autoarg-kp-mode" variable nil nil [60781 61078])
            ("custom-autoload" code nil nil [61080 61128])
            ("autoarg-kp-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [61130 61555])
            ("autoconf-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [61702 61807])
            ("auto-insert" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [61940 62145])
            ("define-auto-insert" function (:prototype-flag t) nil [62147 62451])
            ("auto-insert-mode" variable nil nil [62453 62754])
            ("custom-autoload" code nil nil [62756 62808])
            ("auto-insert-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [62810 63228])
            ("put" code nil nil [63377 63437])
            ("put" code nil nil [63439 63504])
            ("update-file-autoloads" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [63506 64051])
            ("update-directory-autoloads" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [64053 64869])
            ("batch-update-autoloads" function (:prototype-flag t) nil [64871 65125])
            ("auto-revert-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [65258 65900])
            ("turn-on-auto-revert-mode" function (:prototype-flag t) nil [65902 66110])
            ("auto-revert-tail-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [66112 66920])
            ("turn-on-auto-revert-tail-mode" function (:prototype-flag t) nil [66922 67154])
            ("global-auto-revert-mode" variable nil nil [67156 67485])
            ("custom-autoload" code nil nil [67487 67546])
            ("global-auto-revert-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [67548 68457])
            ("mouse-avoidance-mode" variable nil nil [68567 68810])
            ("custom-autoload" code nil nil [68812 68863])
            ("mouse-avoidance-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [68865 70061])
            ("add-to-list" code nil nil [70208 70276])
            ("bat-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [70278 70577])
            ("put" code nil nil [70693 70748])
            ("battery" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [70750 70980])
            ("display-battery-mode" variable nil nil [70982 71299])
            ("custom-autoload" code nil nil [71301 71354])
            ("display-battery-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [71356 71843])
            ("benchmark-run" function (:prototype-flag t) nil [71995 72429])
            ("put" code nil nil [72431 72476])
            ("benchmark-run-compiled" function (:prototype-flag t) nil [72478 72814])
            ("put" code nil nil [72816 72870])
            ("benchmark" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [72872 73132])
            ("bibtex-initialize" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [73273 73987])
            ("bibtex-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [73989 76658])
            ("bibtex-search-entry" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [76660 77405])
            ("bibtex-style-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [77564 77668])
            ("binhex-begin-line" variable
               (:constant-flag t
                :default-value "^:...............................................................$")
                nil [77791 77958])
            ("binhex-decode-region-internal" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [77960 78203])
            ("binhex-decode-region-external" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [78205 78349])
            ("binhex-decode-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [78351 78463])
            ("blackbox" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [78600 83562])
            ("define-key" code nil nil [83681 83724])
            ("define-key" code nil nil [83726 83768])
            ("define-key" code nil nil [83770 83819])
            ("bookmark-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "x" (quote bookmark-set)) (define-key map "m" (quote bookmark-set)) (define-key map "j" (quote bookmark-jump)) (define-key map "g" (quote bookmark-jump)) (define-key map "o" (quote bookmark-jump-other-window)) (define-key map "i" (quote bookmark-insert)) (define-key map "e" (quote edit-bookmarks)) (define-key map "f" (quote bookmark-insert-location)) (define-key map "r" (quote bookmark-rename)) (define-key map "d" (quote bookmark-delete)) (define-key map "l" (quote bookmark-load)) (define-key map "w" (quote bookmark-write)) (define-key map "s" (quote bookmark-save)) map)) nil [83821 84661])
            ("fset" code nil nil [84663 84696])
            ("bookmark-set" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [84698 85882])
            ("bookmark-jump" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [85884 86816])
            ("bookmark-jump-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [86818 86960])
            ("bookmark-relocate" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [86962 87278])
            ("bookmark-insert-location" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [87280 87545])
            ("defalias" code nil nil [87547 87600])
            ("bookmark-rename" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [87602 88211])
            ("bookmark-insert" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [88213 88623])
            ("bookmark-delete" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [88625 89119])
            ("bookmark-write" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [89121 89308])
            ("bookmark-save" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [89310 90087])
            ("bookmark-load" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [90089 91047])
            ("bookmark-bmenu-list" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [91049 91317])
            ("defalias" code nil nil [91319 91366])
            ("defalias" code nil nil [91368 91415])
            ("bookmark-bmenu-search" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [91417 91544])
            ("menu-bar-bookmark-map" variable (:default-value (let ((map (make-sparse-keymap "Bookmark functions"))) (bindings--define-key map [load] (quote (menu-item "Load a Bookmark File..." bookmark-load :help "Load bookmarks from a bookmark file)"))) (bindings--define-key map [write] (quote (menu-item "Save Bookmarks As..." bookmark-write :help "Write bookmarks to a file (reading the file name with the minibuffer)"))) (bindings--define-key map [save] (quote (menu-item "Save Bookmarks" bookmark-save :help "Save currently defined bookmarks"))) (bindings--define-key map [edit] (quote (menu-item "Edit Bookmark List" bookmark-bmenu-list :help "Display a list of existing bookmarks"))) (bindings--define-key map [delete] (quote (menu-item "Delete Bookmark..." bookmark-delete :help "Delete a bookmark from the bookmark list"))) (bindings--define-key map [rename] (quote (menu-item "Rename Bookmark..." bookmark-rename :help "Change the name of a bookmark"))) (bindings--define-key map [locate] (quote (menu-item "Insert Location..." bookmark-locate :help "Insert the name of the file associated with a bookmark"))) (bindings--define-key map [insert] (quote (menu-item "Insert Contents..." bookmark-insert :help "Insert the text of the file pointed to by a bookmark"))) (bindings--define-key map [set] (quote (menu-item "Set Bookmark..." bookmark-set :help "Set a bookmark named inside a file."))) (bindings--define-key map [jump] (quote (menu-item "Jump to Bookmark..." bookmark-jump :help "Jump to a bookmark (a point in some file)"))) map)) nil [91546 92993])
            ("defalias" code nil nil [92995 93050])
            ("browse-url-browser-function" variable (:default-value (quote browse-url-default-browser)) nil [93191 93754])
            ("custom-autoload" code nil nil [93756 93817])
            ("browse-url-of-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [93819 94168])
            ("browse-url-of-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [94170 94429])
            ("browse-url-of-dired-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [94431 94565])
            ("browse-url-of-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [94567 94686])
            ("browse-url" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [94688 95003])
            ("browse-url-at-point" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [95005 95249])
            ("browse-url-at-mouse" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [95251 95584])
            ("browse-url-xdg-open" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [95586 95833])
            ("browse-url-netscape" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [95835 96644])
            ("browse-url-mozilla" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [96646 97449])
            ("browse-url-firefox" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [97451 98584])
            ("browse-url-chromium" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [98586 98843])
            ("browse-url-galeon" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [98845 99642])
            ("browse-url-emacs" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [99644 99794])
            ("browse-url-gnome-moz" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [99796 100440])
            ("browse-url-mosaic" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [100442 101143])
            ("browse-url-cci" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [101145 101892])
            ("browse-url-w3" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [101894 102378])
            ("browse-url-w3-gnudoit" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [102380 102682])
            ("browse-url-text-xterm" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [102684 103058])
            ("browse-url-text-emacs" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [103060 103753])
            ("browse-url-mail" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [103755 104466])
            ("browse-url-generic" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [104468 104869])
            ("browse-url-kde" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [104871 105032])
            ("browse-url-elinks" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [105034 105400])
            ("push" code nil nil [105500 105554])
            ("bs-cycle-next" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [105556 105758])
            ("bs-cycle-previous" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [105760 105970])
            ("bs-customize" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [105972 106071])
            ("bs-show" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [106073 106699])
            ("bubbles" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [106833 107437])
            ("put" code nil nil [107599 107733])
            ("bug-reference-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [107735 108047])
            ("bug-reference-prog-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [108049 108202])
            ("put" code nil nil [108350 108408])
            ("put" code nil nil [108409 108480])
            ("put" code nil nil [108481 108550])
            ("put" code nil nil [108552 108691])
            ("byte-compile-disable-warning" function (:prototype-flag t) nil [108693 109067])
            ("byte-compile-enable-warning" function (:prototype-flag t) nil [109069 109429])
            ("byte-force-recompile" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [109431 109630])
            ("byte-recompile-directory" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [109632 110370])
            ("put" code nil nil [110371 110424])
            ("byte-compile-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [110426 110823])
            ("compile-defun" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [110825 111042])
            ("byte-compile" function (:prototype-flag t) nil [111044 111225])
            ("display-call-tree" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [111227 111904])
            ("batch-byte-compile-if-not-done" function (:prototype-flag t) nil [111906 112134])
            ("batch-byte-compile" function (:prototype-flag t) nil [112136 112587])
            ("batch-byte-recompile-directory" function (:prototype-flag t) nil [112589 113033])
            ("put" code nil nil [113181 113238])
            ("put" code nil nil [113240 113297])
            ("put" code nil nil [113439 113502])
            ("put" code nil nil [113504 113565])
            ("put" code nil nil [113567 113630])
            ("calendar-hebrew-list-yahrzeits" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [113781 114065])
            ("define-obsolete-function-alias" code nil nil [114067 114159])
            ("define-key" code nil nil [114276 114317])
            ("calc-dispatch" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [114319 114456])
            ("calc" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [114458 114610])
            ("full-calc" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [114612 114734])
            ("quick-calc" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [114736 114857])
            ("calc-eval" function (:prototype-flag t) nil [114859 115143])
            ("calc-keypad" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [115145 115443])
            ("full-calc-keypad" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [115445 115609])
            ("calc-grab-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [115611 115752])
            ("calc-grab-rectangle" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [115754 115899])
            ("calc-embedded" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [115901 116037])
            ("calc-embedded-activate" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [116039 116247])
            ("defmath" function (:prototype-flag t) nil [116249 116659])
            ("put" code nil nil [116661 116694])
            ("calc-undo" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [116834 116887])
            ("calculator" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [117020 117164])
            ("calendar" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [117309 118985])
            ("canlock-insert-header" function (:prototype-flag t) nil [119119 119284])
            ("canlock-verify" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [119286 119479])
            ("capitalized-words-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [119629 121018])
            ("put" code nil nil [121167 121219])
            ("c-guess-basic-syntax" function (:prototype-flag t) nil [121369 121482])
            ("c-guess-guessed-offsets-alist" variable nil nil [121629 121708])
            ("c-guess-guessed-basic-offset" variable nil nil [121710 121787])
            ("c-guess" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [121789 122159])
            ("c-guess-no-install" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [122161 122477])
            ("c-guess-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [122479 122843])
            ("c-guess-buffer-no-install" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [122845 123155])
            ("c-guess-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [123157 123516])
            ("c-guess-region-no-install" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [123518 124407])
            ("c-guess-install" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [124409 124848])
            ("c-initialize-cc-mode" function (:prototype-flag t) nil [124991 125443])
            ("add-to-list" code nil nil [125445 125511])
            ("add-to-list" code nil nil [125513 125592])
            ("add-to-list" code nil nil [125594 125662])
            ("add-to-list" code nil nil [125664 125719])
            ("add-to-list" code nil nil [125721 125783])
            ("add-to-list" code nil nil [125785 125839])
            ("add-to-list" code nil nil [125841 125893])
            ("add-to-list" code nil nil [125895 125950])
            ("c-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [125952 126512])
            ("c++-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [126514 127071])
            ("add-to-list" code nil nil [127073 127128])
            ("objc-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [127130 127700])
            ("add-to-list" code nil nil [127702 127760])
            ("java-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [127762 128324])
            ("add-to-list" code nil nil [128326 128382])
            ("idl-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [128384 128965])
            ("add-to-list" code nil nil [128967 129058])
            ("add-to-list" code nil nil [129060 129119])
            ("pike-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [129121 129683])
            ("add-to-list" code nil nil [129685 129741])
            ("add-to-list" code nil nil [129743 129800])
            ("add-to-list" code nil nil [129802 129860])
            ("add-to-list" code nil nil [129862 129920])
            ("add-to-list" code nil nil [129922 129980])
            ("awk-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [129982 130540])
            ("c-set-style" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [130690 131816])
            ("c-add-style" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [131818 132363])
            ("c-set-offset" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [132365 132703])
            ("put" code nil nil [132846 132898])
            ("put" code nil nil [132899 132955])
            ("put" code nil nil [132956 133014])
            ("ccl-compile" function (:prototype-flag t) nil [133154 133279])
            ("ccl-dump" function (:prototype-flag t) nil [133281 133366])
            ("declare-ccl-program" function (:prototype-flag t) nil [133368 133830])
            ("define-ccl-program" function (:prototype-flag t) nil [133832 140383])
            ("put" code nil nil [140385 140429])
            ("check-ccl-program" function (:prototype-flag t) nil [140431 140752])
            ("ccl-execute-with-args" function (:prototype-flag t) nil [140754 141037])
            ("cconv-closure-convert" function (:prototype-flag t) nil [141177 141482])
            ("cconv-warnings-only" function (:prototype-flag t) nil [141484 141605])
            ("push" code nil nil [141726 141782])
            ("push" code nil nil [141926 141985])
            ("cfengine3-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [141987 142220])
            ("cfengine2-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [142222 142455])
            ("cfengine-auto-mode" function (:prototype-flag t) nil [142457 142603])
            ("push" code nil nil [142742 142798])
            ("check-declare-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [142962 143143])
            ("check-declare-directory" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [143145 143343])
            ("push" code nil nil [143491 143552])
            ("put" code nil nil [143553 143622])
            ("put" code nil nil [143623 143689])
            ("put" code nil nil [143690 143767])
            ("put" code nil nil [143768 143845])
            ("put" code nil nil [143846 143929])
            ("put" code nil nil [143930 144001])
            ("put" code nil nil [144002 144078])
            ("put" code nil nil [144079 144157])
            ("checkdoc-list-of-strings-p" function (:prototype-flag t) nil [144159 144232])
            ("put" code nil nil [144233 144297])
            ("put" code nil nil [144298 144363])
            ("checkdoc" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [144365 144585])
            ("checkdoc-interactive" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [144587 145115])
            ("checkdoc-message-interactive" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [145117 145657])
            ("checkdoc-eval-current-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [145659 145948])
            ("checkdoc-current-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [145950 146251])
            ("checkdoc-start" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [146253 146608])
            ("checkdoc-continue" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [146610 146980])
            ("checkdoc-comments" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [146982 147271])
            ("checkdoc-rogue-spaces" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [147273 147632])
            ("checkdoc-message-text" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [147634 147849])
            ("checkdoc-eval-defun" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [147851 148192])
            ("checkdoc-defun" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [148194 148559])
            ("checkdoc-ispell" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [148561 148768])
            ("checkdoc-ispell-current-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [148770 149016])
            ("checkdoc-ispell-interactive" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [149018 149269])
            ("checkdoc-ispell-message-interactive" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [149271 149540])
            ("checkdoc-ispell-message-text" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [149542 149790])
            ("checkdoc-ispell-start" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [149792 150011])
            ("checkdoc-ispell-continue" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [150013 150253])
            ("checkdoc-ispell-comments" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [150255 150494])
            ("checkdoc-ispell-defun" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [150496 150726])
            ("checkdoc-minor-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [150728 151280])
            ("decode-hz-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [151431 151583])
            ("decode-hz-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [151585 151692])
            ("encode-hz-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [151694 151842])
            ("encode-hz-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [151844 151947])
            ("post-read-decode-hz" function (:prototype-flag t) nil [151949 152017])
            ("pre-write-encode-hz" function (:prototype-flag t) nil [152019 152091])
            ("repeat-matching-complex-command" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [152210 152615])
            ("list-command-history" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [152617 152984])
            ("command-history" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [152986 153611])
            ("common-lisp-indent-function" function (:prototype-flag t) nil [153763 157076])
            ("push" code nil nil [157218 157275])
            ("define-obsolete-variable-alias" code nil nil [157277 157367])
            ("cl-custom-print-functions" variable nil nil [157369 157855])
            ("define-error" code nil nil [157857 157922])
            ("cl--defsubst-expand" function (:prototype-flag t) nil [157924 157965])
            ("put" code nil nil [157967 158000])
            ("put" code nil nil [158002 158038])
            ("put" code nil nil [158040 158076])
            ("put" code nil nil [158078 158115])
            ("c-macro-expand" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [158259 158795])
            ("run-scheme" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [158917 159581])
            ("color-name-to-rgb" function (:prototype-flag t) nil [159691 160222])
            ("comint-output-filter-functions" variable (:default-value (quote (ansi-color-process-output comint-postoutput-scroll-to-bottom comint-watch-for-password-prompt))) nil [160335 161003])
            ("make-comint-in-buffer" function (:prototype-flag t) nil [161005 161800])
            ("make-comint" function (:prototype-flag t) nil [161802 162540])
            ("comint-run" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [162542 162882])
            ("comint-file-name-prefix" variable (:default-value (purecopy "")) nil [162884 163104])
            ("comint-redirect-send-command" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [163106 163404])
            ("comint-redirect-send-command-to-process" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [163406 163700])
            ("comint-redirect-results-list" function (:prototype-flag t) nil [163702 163957])
            ("comint-redirect-results-list-from-process" function (:prototype-flag t) nil [163959 164227])
            ("compare-windows" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [164363 165552])
            ("compilation-mode-hook" variable nil nil [165696 165784])
            ("custom-autoload" code nil nil [165786 165838])
            ("compilation-start-hook" variable nil nil [165840 165982])
            ("custom-autoload" code nil nil [165984 166037])
            ("compilation-window-height" variable nil nil [166039 166149])
            ("custom-autoload" code nil nil [166151 166207])
            ("compilation-process-setup-function" variable nil nil [166209 166514])
            ("compilation-buffer-name-function" variable nil nil [166516 166813])
            ("compilation-finish-function" variable nil nil [166815 167020])
            ("compilation-finish-functions" variable nil nil [167022 167240])
            ("put" code nil nil [167241 167299])
            ("compilation-ask-about-save" variable (:default-value t) nil [167301 167470])
            ("custom-autoload" code nil nil [167472 167529])
            ("compilation-search-path" variable (:default-value (quote (nil))) nil [167531 167777])
            ("custom-autoload" code nil nil [167779 167833])
            ("compile-command" variable (:default-value (purecopy "make -k ")) nil [167835 168415])
            ("custom-autoload" code nil nil [168417 168463])
            ("put" code nil nil [168464 168609])
            ("compilation-disable-input" variable nil nil [168611 168853])
            ("custom-autoload" code nil nil [168855 168911])
            ("compile" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [168913 170165])
            ("compilation-start" function (:prototype-flag t) nil [170167 171119])
            ("compilation-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [171121 171523])
            ("put" code nil nil [171525 171573])
            ("compilation-shell-minor-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [171575 172067])
            ("compilation-minor-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [172069 172481])
            ("compilation-next-error-function" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [172483 172712])
            ("dynamic-completion-mode" variable nil nil [172845 173174])
            ("custom-autoload" code nil nil [173176 173235])
            ("dynamic-completion-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [173237 173512])
            ("conf-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [173662 175089])
            ("conf-unix-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [175091 175412])
            ("conf-windows-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [175414 175886])
            ("conf-javaprop-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [175888 176312])
            ("conf-space-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [176314 177074])
            ("conf-space-keywords" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [177076 177235])
            ("conf-colon-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [177237 177563])
            ("conf-ppd-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [177565 177893])
            ("conf-xdefaults-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [177895 178212])
            ("cookie" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [178346 178668])
            ("cookie-insert" function (:prototype-flag t) nil [178670 178918])
            ("cookie-snarf" function (:prototype-flag t) nil [178920 179198])
            ("put" code nil nil [179349 179408])
            ("put" code nil nil [179409 179468])
            ("put" code nil nil [179469 179528])
            ("copyright-update" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [179530 179982])
            ("copyright-fix-years" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [179984 180251])
            ("copyright" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [180253 180375])
            ("copyright-update-directory" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [180377 180595])
            ("put" code nil nil [180747 180803])
            ("put" code nil nil [180804 180860])
            ("put" code nil nil [180861 180927])
            ("put" code nil nil [180928 180984])
            ("put" code nil nil [180985 181055])
            ("put" code nil nil [181056 181126])
            ("put" code nil nil [181127 181190])
            ("cperl-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [181192 189485])
            ("cperl-perldoc" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [189487 189570])
            ("cperl-perldoc-at-point" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [189572 189678])
            ("cpp-highlight-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [189802 190098])
            ("cpp-parse-edit" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [190100 190196])
            ("crisp-mode" variable nil nil [190334 190603])
            ("custom-autoload" code nil nil [190605 190646])
            ("crisp-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [190648 190908])
            ("defalias" code nil nil [190910 190944])
            ("completing-read-multiple" function (:prototype-flag t) nil [191070 192410])
            ("css-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [192557 192648])
            ("cua-mode" variable nil nil [192795 193064])
            ("custom-autoload" code nil nil [193066 193108])
            ("cua-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [193110 194228])
            ("cua-selection-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [194230 194356])
            ("cua-rectangle-mark-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [194503 194691])
            ("custom-browse-sort-alphabetically" variable nil nil [194810 194932])
            ("custom-autoload" code nil nil [194934 194999])
            ("custom-buffer-sort-alphabetically" variable (:default-value t) nil [195001 195119])
            ("custom-autoload" code nil nil [195121 195186])
            ("custom-menu-sort-alphabetically" variable nil nil [195188 195303])
            ("custom-autoload" code nil nil [195305 195368])
            ("customize-set-value" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [195370 195895])
            ("customize-set-variable" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [195897 196550])
            ("customize-save-variable" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [196552 197211])
            ("customize-push-and-save" function (:prototype-flag t) nil [197213 197625])
            ("customize" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [197627 197921])
            ("customize-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [197923 198170])
            ("customize-group" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [198172 198365])
            ("customize-group-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [198367 198524])
            ("defalias" code nil nil [198526 198574])
            ("customize-option" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [198576 198686])
            ("defalias" code nil nil [198688 198762])
            ("customize-option-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [198764 198943])
            ("customize-package-emacs-version-alist" variable nil nil [198945 200278])
            ("defalias" code nil nil [200280 200336])
            ("customize-changed-options" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [200338 200801])
            ("customize-face" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [200803 201222])
            ("customize-face-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [201224 201554])
            ("customize-unsaved" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [201556 201680])
            ("customize-rogue" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [201682 201794])
            ("customize-saved" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [201796 201890])
            ("customize-apropos" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [201892 202425])
            ("customize-apropos-options" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [202427 202576])
            ("customize-apropos-faces" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [202578 202692])
            ("customize-apropos-groups" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [202694 202810])
            ("custom-buffer-create" function (:prototype-flag t) nil [202812 203135])
            ("custom-buffer-create-other-window" function (:prototype-flag t) nil [203137 203550])
            ("customize-browse" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [203552 203675])
            ("custom-file" variable nil nil [203677 205198])
            ("custom-autoload" code nil nil [205200 205243])
            ("custom-save-all" function (:prototype-flag t) nil [205245 205344])
            ("customize-save-customized" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [205346 205470])
            ("custom-menu-create" function (:prototype-flag t) nil [205472 205641])
            ("customize-menu-create" function (:prototype-flag t) nil [205643 205947])
            ("customize-create-theme" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [206069 206491])
            ("custom-theme-visit-theme" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [206493 206615])
            ("describe-theme" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [206617 206738])
            ("customize-themes" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [206740 206969])
            ("cvs-status-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [207108 207198])
            ("push" code nil nil [207335 207393])
            ("cwarn-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [207395 207906])
            ("define-obsolete-function-alias" code nil nil [207908 207979])
            ("global-cwarn-mode" variable nil nil [207981 208286])
            ("custom-autoload" code nil nil [208288 208336])
            ("global-cwarn-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [208338 208731])
            ("cyrillic-encode-koi8-r-char" function (:prototype-flag t) nil [208882 209020])
            ("cyrillic-encode-alternativnyj-char" function (:prototype-flag t) nil [209022 209174])
            ("standard-display-cyrillic-translit" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [209176 209765])
            ("put" code nil nil [209880 209935])
            ("put" code nil nil [209936 209987])
            ("define-key" code nil nil [209989 210029])
            ("define-key" code nil nil [210031 210079])
            ("dabbrev-completion" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [210081 210571])
            ("dabbrev-expand" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [210573 211449])
            ("data-debug-new-buffer" function (:prototype-flag t) nil [211594 211706])
            ("dbus-handle-event" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [211821 212099])
            ("dcl-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [212246 216255])
            ("setq" code nil nil [216395 216417])
            ("debug" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [216419 216832])
            ("debug-on-entry" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [216834 217546])
            ("cancel-debug-on-entry" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [217548 217871])
            ("decipher" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [218008 218129])
            ("decipher-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [218131 218858])
            ("push" code nil nil [218979 219039])
            ("delimit-columns-customize" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [219041 219141])
            ("delimit-columns-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [219143 219296])
            ("delimit-columns-rectangle" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [219298 219471])
            ("defalias" code nil nil [219584 219638])
            ("delete-selection-mode" variable nil nil [219640 219961])
            ("custom-autoload" code nil nil [219963 220016])
            ("delete-selection-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [220018 220468])
            ("define-derived-mode" function (:prototype-flag t) nil [220614 222722])
            ("put" code nil nil [222724 222769])
            ("derived-mode-init-mode-variables" function (:prototype-flag t) nil [222771 223055])
            ("describe-text-properties" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [223188 223606])
            ("describe-char" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [223608 224489])
            ("desktop-save-mode" variable nil nil [224605 224754])
            ("custom-autoload" code nil nil [224756 224806])
            ("desktop-save-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [224808 225245])
            ("desktop-locals-to-save" variable (:default-value (quote (desktop-locals-to-save truncate-lines case-fold-search case-replace fill-column overwrite-mode change-log-default-name line-number-mode column-number-mode size-indication-mode buffer-file-coding-system indent-tabs-mode tab-width indicate-buffer-boundaries indicate-empty-lines show-trailing-whitespace))) nil [225247 225779])
            ("custom-autoload" code nil nil [225781 225834])
            ("defvar-local" code nil nil [225836 226432])
            ("desktop-buffer-mode-handlers" variable nil nil [226434 227600])
            ("put" code nil nil [227602 227661])
            ("desktop-minor-mode-handlers" variable nil nil [227663 228832])
            ("put" code nil nil [228834 228892])
            ("desktop-clear" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [228894 229347])
            ("desktop-save" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [229349 229725])
            ("desktop-remove" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [229727 229872])
            ("desktop-read" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [229874 230398])
            ("desktop-load-default" function (:prototype-flag t) nil [230400 230543])
            ("make-obsolete" code nil nil [230545 230609])
            ("desktop-change-dir" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [230611 230866])
            ("desktop-save-in-desktop-dir" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [230868 230983])
            ("desktop-revert" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [230985 231073])
            ("gnus-article-outlook-unwrap-lines" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [231210 231625])
            ("gnus-article-outlook-repair-attribution" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [231627 231821])
            ("gnus-outlook-deuglify-article" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [231823 232101])
            ("gnus-article-outlook-deuglify-article" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [232103 232238])
            ("diary" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [232386 232736])
            ("diary-mail-entries" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [232738 233502])
            ("diary-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [233504 233594])
            ("diff-switches" variable (:default-value (purecopy "-c")) nil [233707 233819])
            ("custom-autoload" code nil nil [233821 233862])
            ("diff-command" variable (:default-value (purecopy "diff")) nil [233864 233939])
            ("custom-autoload" code nil nil [233941 233981])
            ("diff" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [233983 234549])
            ("diff-backup" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [234551 234884])
            ("diff-latest-backup-file" function (:prototype-flag t) nil [234886 235001])
            ("diff-buffer-with-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [235003 235207])
            ("diff-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [235343 235923])
            ("diff-minor-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [235925 236205])
            ("dig" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [236317 236537])
            ("dired-listing-switches" variable (:default-value (purecopy "-al")) nil [236647 237136])
            ("custom-autoload" code nil nil [237138 237189])
            ("dired-directory" variable nil nil [237191 237494])
            ("define-key" code nil nil [237496 237529])
            ("dired" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [237531 238354])
            ("define-key" code nil nil [238356 238404])
            ("dired-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [238406 238561])
            ("define-key" code nil nil [238563 238610])
            ("dired-other-frame" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [238612 238758])
            ("dired-noselect" function (:prototype-flag t) nil [238760 238916])
            ("dired-mode" function (:prototype-flag t) nil [238918 241959])
            ("put" code nil nil [241961 242005])
            ("dirtrack-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [242124 242716])
            ("dirtrack" function (:prototype-flag t) nil [242718 243047])
            ("disassemble" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [243190 243558])
            ("make-display-table" function (:prototype-flag t) nil [243691 243788])
            ("display-table-slot" function (:prototype-flag t) nil [243790 244109])
            ("set-display-table-slot" function (:prototype-flag t) nil [244111 244441])
            ("describe-display-table" function (:prototype-flag t) nil [244443 244560])
            ("describe-current-display-table" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [244562 244703])
            ("standard-display-8bit" function (:prototype-flag t) nil [244705 245211])
            ("standard-display-default" function (:prototype-flag t) nil [245213 245352])
            ("standard-display-ascii" function (:prototype-flag t) nil [245354 245470])
            ("standard-display-g1" function (:prototype-flag t) nil [245472 245703])
            ("standard-display-graphic" function (:prototype-flag t) nil [245705 245923])
            ("standard-display-underline" function (:prototype-flag t) nil [245925 246054])
            ("create-glyph" function (:prototype-flag t) nil [246056 246187])
            ("make-glyph-code" function (:prototype-flag t) nil [246189 246327])
            ("glyph-char" function (:prototype-flag t) nil [246329 246431])
            ("glyph-face" function (:prototype-flag t) nil [246433 246564])
            ("standard-display-european" function (:prototype-flag t) nil [246566 247467])
            ("dissociated-press" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [247610 247997])
            ("dnd-protocol-alist" variable (:default-value (\` (((\, (purecopy "^file:///")) . dnd-open-local-file) ((\, (purecopy "^file://")) . dnd-open-file) ((\, (purecopy "^file:")) . dnd-open-local-file) ((\, (purecopy "^\\(https?\\|ftp\\|file\\|nfs\\)://")) . dnd-open-file)))) nil [248101 249044])
            ("custom-autoload" code nil nil [249046 249091])
            ("dns-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [249238 249650])
            ("defalias" code nil nil [249652 249683])
            ("dns-mode-soa-increment-serial" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [249685 249804])
            ("doc-view-mode-p" function (:prototype-flag t) nil [249923 250139])
            ("doc-view-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [250141 250486])
            ("doc-view-mode-maybe" function (:prototype-flag t) nil [250488 250675])
            ("doc-view-minor-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [250677 251044])
            ("doc-view-bookmark-jump" function (:prototype-flag t) nil [251046 251115])
            ("doctor" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [251238 251340])
            ("double-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [251453 251855])
            ("push" code nil nil [251977 252034])
            ("dunnet" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [252036 252123])
            ("defalias" code nil nil [252278 252337])
            ("define-minor-mode" function (:prototype-flag t) nil [252339 255561])
            ("put" code nil nil [255563 255606])
            ("defalias" code nil nil [255608 255679])
            ("defalias" code nil nil [255681 255747])
            ("define-globalized-minor-mode" function (:prototype-flag t) nil [255749 257076])
            ("put" code nil nil [257078 257132])
            ("easy-mmode-define-keymap" function (:prototype-flag t) nil [257134 257815])
            ("easy-mmode-defmap" function (:prototype-flag t) nil [257817 258067])
            ("easy-mmode-defsyntax" function (:prototype-flag t) nil [258069 258265])
            ("easy-menu-define" function (:prototype-flag t) nil [258414 261892])
            ("put" code nil nil [261894 261946])
            ("easy-menu-do-define" function (:prototype-flag t) nil [261948 262031])
            ("easy-menu-create-menu" function (:prototype-flag t) nil [262033 262331])
            ("easy-menu-change" function (:prototype-flag t) nil [262333 263224])
            ("push" code nil nil [263367 263425])
            ("ebnf-customize" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [263427 263510])
            ("ebnf-print-directory" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [263512 263833])
            ("ebnf-print-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [263835 264145])
            ("ebnf-print-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [264147 264720])
            ("ebnf-print-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [264722 264936])
            ("ebnf-spool-directory" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [264938 265259])
            ("ebnf-spool-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [265261 265571])
            ("ebnf-spool-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [265573 265891])
            ("ebnf-spool-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [265893 266171])
            ("ebnf-eps-directory" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [266173 266471])
            ("ebnf-eps-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [266473 266744])
            ("ebnf-eps-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [266746 267483])
            ("ebnf-eps-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [267485 268230])
            ("defalias" code nil nil [268232 268268])
            ("ebnf-syntax-directory" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [268270 268573])
            ("ebnf-syntax-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [268575 268854])
            ("ebnf-syntax-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [268856 268960])
            ("ebnf-syntax-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [268962 269064])
            ("ebnf-setup" function (:prototype-flag t) nil [269066 269151])
            ("ebnf-find-style" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [269153 269329])
            ("ebnf-insert-style" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [269331 269525])
            ("ebnf-delete-style" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [269527 269649])
            ("ebnf-merge-style" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [269651 269812])
            ("ebnf-apply-style" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [269814 269980])
            ("ebnf-reset-style" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [269982 270147])
            ("ebnf-push-style" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [270149 270392])
            ("ebnf-pop-style" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [270394 270626])
            ("ebrowse-tree-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [270770 271162])
            ("ebrowse-electric-choose-tree" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [271164 271302])
            ("ebrowse-member-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [271304 271401])
            ("ebrowse-tags-view-declaration" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [271403 271508])
            ("ebrowse-tags-find-declaration" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [271510 271615])
            ("ebrowse-tags-view-definition" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [271617 271720])
            ("ebrowse-tags-find-definition" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [271722 271825])
            ("ebrowse-tags-find-declaration-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [271827 271961])
            ("ebrowse-tags-view-definition-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [271963 272095])
            ("ebrowse-tags-find-definition-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [272097 272229])
            ("ebrowse-tags-find-declaration-other-frame" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [272231 272362])
            ("ebrowse-tags-view-definition-other-frame" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [272364 272494])
            ("ebrowse-tags-find-definition-other-frame" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [272496 272626])
            ("ebrowse-tags-complete-symbol" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [272628 272924])
            ("ebrowse-tags-loop-continue" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [272926 273197])
            ("ebrowse-tags-search" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [273199 273411])
            ("ebrowse-tags-query-replace" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [273413 273598])
            ("ebrowse-tags-search-member-use" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [273600 273937])
            ("ebrowse-back-in-position-stack" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [273939 274079])
            ("ebrowse-forward-in-position-stack" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [274081 274223])
            ("ebrowse-electric-position-menu" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [274225 274354])
            ("ebrowse-save-tree" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [274356 274463])
            ("ebrowse-save-tree-as" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [274465 274709])
            ("ebrowse-statistics" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [274711 274805])
            ("electric-buffer-list" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [274938 276317])
            ("Electric-command-history-redo-expression" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [276439 276671])
            ("ecomplete-setup" function (:prototype-flag t) nil [276811 276870])
            ("push" code nil nil [276985 277039])
            ("global-ede-mode" variable nil nil [277041 277338])
            ("custom-autoload" code nil nil [277340 277384])
            ("global-ede-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [277386 277761])
            ("push" code nil nil [277902 277958])
            ("push" code nil nil [278114 278177])
            ("edebug-all-defs" variable nil nil [278320 278784])
            ("custom-autoload" code nil nil [278786 278831])
            ("edebug-all-forms" variable nil nil [278833 279067])
            ("custom-autoload" code nil nil [279069 279115])
            ("edebug-basic-spec" function (:prototype-flag t) nil [279117 279323])
            ("defalias" code nil nil [279325 279377])
            ("edebug-eval-top-level-form" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [279379 280256])
            ("edebug-all-defs" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [280258 280349])
            ("edebug-all-forms" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [280351 280437])
            ("push" code nil nil [280552 280611])
            ("ediff-files" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [280613 280748])
            ("ediff-files3" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [280750 280898])
            ("defalias" code nil nil [280900 280932])
            ("defalias" code nil nil [280934 280964])
            ("ediff-current-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [280966 281187])
            ("ediff-backup" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [281189 281402])
            ("ediff-buffers" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [281404 281560])
            ("defalias" code nil nil [281562 281597])
            ("ediff-buffers3" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [281599 281772])
            ("defalias" code nil nil [281774 281811])
            ("ediff-directories" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [281813 282099])
            ("defalias" code nil nil [282101 282137])
            ("ediff-directory-revisions" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [282139 282441])
            ("defalias" code nil nil [282443 282496])
            ("ediff-directories3" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [282498 282797])
            ("defalias" code nil nil [282799 282837])
            ("ediff-merge-directories" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [282839 283159])
            ("defalias" code nil nil [283161 283209])
            ("ediff-merge-directories-with-ancestor" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [283211 283718])
            ("ediff-merge-directory-revisions" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [283720 284056])
            ("defalias" code nil nil [284058 284123])
            ("ediff-merge-directory-revisions-with-ancestor" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [284125 284489])
            ("defalias" code nil nil [284491 284584])
            ("defalias" code nil nil [284586 284662])
            ("ediff-windows-wordwise" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [284664 285006])
            ("ediff-windows-linewise" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [285008 285350])
            ("ediff-regions-wordwise" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [285352 285713])
            ("ediff-regions-linewise" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [285715 286110])
            ("defalias" code nil nil [286112 286154])
            ("ediff-merge-files" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [286156 286300])
            ("ediff-merge-files-with-ancestor" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [286302 286471])
            ("defalias" code nil nil [286473 286543])
            ("ediff-merge-buffers" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [286545 286702])
            ("ediff-merge-buffers-with-ancestor" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [286704 286888])
            ("ediff-merge-revisions" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [286890 287123])
            ("ediff-merge-revisions-with-ancestor" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [287125 287395])
            ("ediff-patch-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [287397 287740])
            ("ediff-patch-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [287742 288305])
            ("defalias" code nil nil [288307 288343])
            ("defalias" code nil nil [288345 288390])
            ("ediff-revision" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [288392 288708])
            ("defalias" code nil nil [288710 288747])
            ("ediff-version" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [288749 288895])
            ("ediff-documentation" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [288897 289031])
            ("ediff-files-command" function (:prototype-flag t) nil [289033 289092])
            ("ediff3-files-command" function (:prototype-flag t) nil [289094 289154])
            ("ediff-merge-command" function (:prototype-flag t) nil [289156 289215])
            ("ediff-merge-with-ancestor-command" function (:prototype-flag t) nil [289217 289290])
            ("ediff-directories-command" function (:prototype-flag t) nil [289292 289357])
            ("ediff-directories3-command" function (:prototype-flag t) nil [289359 289425])
            ("ediff-merge-directories-command" function (:prototype-flag t) nil [289427 289498])
            ("ediff-merge-directories-with-ancestor-command" function (:prototype-flag t) nil [289500 289585])
            ("ediff-customize" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [289724 289782])
            ("ediff-show-registry" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [289921 290008])
            ("defalias" code nil nil [290010 290052])
            ("ediff-toggle-multiframe" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [290191 290403])
            ("ediff-toggle-use-toolbar" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [290405 290633])
            ("push" code nil nil [290748 290806])
            ("edit-kbd-macro" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [290808 291230])
            ("edit-last-kbd-macro" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [291232 291354])
            ("edit-named-kbd-macro" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [291356 291508])
            ("read-kbd-macro" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [291510 292185])
            ("format-kbd-macro" function (:prototype-flag t) nil [292187 292568])
            ("edt-set-scroll-margins" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [292692 292930])
            ("edt-emulation-on" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [292932 293006])
            ("with-electric-help" function (:prototype-flag t) nil [293116 294339])
            ("electric-helpify" function (:prototype-flag t) nil [294341 294416])
            ("push" code nil nil [294555 294611])
            ("push" code nil nil [294765 294826])
            ("eieio-defclass-autoload" function (:prototype-flag t) nil [294828 295215])
            ("eldoc-minor-mode-string" variable (:default-value (purecopy " ElDoc")) nil [295354 295483])
            ("custom-autoload" code nil nil [295485 295537])
            ("eldoc-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [295539 296163])
            ("define-obsolete-function-alias" code nil nil [296165 296236])
            ("eldoc-documentation-function" variable nil nil [296238 296954])
            ("electric-pair-text-pairs" variable (:default-value (quote ((34 . 34)))) nil [297076 297368])
            ("custom-autoload" code nil nil [297370 297427])
            ("electric-pair-mode" variable nil nil [297429 297738])
            ("custom-autoload" code nil nil [297740 297793])
            ("electric-pair-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [297795 298265])
            ("elide-head" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [298398 298713])
            ("elint-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [298853 298925])
            ("elint-directory" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [298927 299079])
            ("elint-current-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [299081 299214])
            ("elint-defun" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [299216 299343])
            ("elint-initialize" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [299345 299536])
            ("elp-instrument-function" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [299662 299807])
            ("elp-instrument-list" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [299809 300039])
            ("elp-instrument-package" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [300041 300279])
            ("elp-results" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [300281 300507])
            ("emacs-lock-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [300640 301455])
            ("report-emacs-bug" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [301592 301758])
            ("emerge-files" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [301877 302014])
            ("emerge-files-with-ancestor" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [302016 302218])
            ("emerge-buffers" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [302220 302352])
            ("emerge-buffers-with-ancestor" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [302354 302555])
            ("emerge-files-command" function (:prototype-flag t) nil [302557 302618])
            ("emerge-files-with-ancestor-command" function (:prototype-flag t) nil [302620 302695])
            ("emerge-files-remote" function (:prototype-flag t) nil [302697 302780])
            ("emerge-files-with-ancestor-remote" function (:prototype-flag t) nil [302782 302888])
            ("emerge-revisions" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [302890 303046])
            ("emerge-revisions-with-ancestor" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [303048 303262])
            ("emerge-merge-directories" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [303264 303363])
            ("enriched-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [303510 304062])
            ("enriched-encode" function (:prototype-flag t) nil [304064 304139])
            ("enriched-decode" function (:prototype-flag t) nil [304141 304207])
            ("epa-list-keys" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [304310 304430])
            ("epa-list-secret-keys" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [304432 304560])
            ("epa-select-keys" function (:prototype-flag t) nil [304562 304922])
            ("epa-decrypt-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [304924 305126])
            ("epa-verify-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [305128 305196])
            ("epa-sign-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [305198 305300])
            ("epa-encrypt-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [305302 305398])
            ("epa-decrypt-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [305400 306328])
            ("epa-decrypt-armor-in-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [306330 306580])
            ("epa-verify-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [306582 307217])
            ("epa-verify-cleartext-in-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [307219 307489])
            ("epa-sign-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [307491 308140])
            ("epa-encrypt-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [308142 308815])
            ("epa-delete-keys" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [308817 308917])
            ("epa-import-keys" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [308919 308997])
            ("epa-import-keys-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [308999 309095])
            ("epa-import-armor-in-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [309097 309253])
            ("epa-export-keys" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [309255 309345])
            ("epa-insert-keys" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [309347 309440])
            ("epa-dired-do-decrypt" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [309562 309645])
            ("epa-dired-do-verify" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [309647 309728])
            ("epa-dired-do-sign" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [309730 309807])
            ("epa-dired-do-encrypt" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [309809 309892])
            ("epa-file-handler" function (:prototype-flag t) nil [310011 310091])
            ("epa-file-enable" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [310093 310149])
            ("epa-file-disable" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [310151 310208])
            ("epa-mail-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [310327 310604])
            ("epa-mail-decrypt" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [310606 310800])
            ("epa-mail-verify" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [310802 311013])
            ("epa-mail-sign" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [311015 311208])
            ("epa-mail-encrypt" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [311210 311770])
            ("epa-mail-import-keys" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [311772 311987])
            ("epa-global-mail-mode" variable nil nil [311989 312306])
            ("custom-autoload" code nil nil [312308 312362])
            ("epa-global-mail-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [312364 312634])
            ("push" code nil nil [312737 312793])
            ("epg-make-context" function (:prototype-flag t) nil [312795 312974])
            ("epg-configuration" function (:prototype-flag t) nil [313107 313241])
            ("epg-check-configuration" function (:prototype-flag t) nil [313243 313399])
            ("epg-expand-group" function (:prototype-flag t) nil [313401 313514])
            ("push" code nil nil [313625 313679])
            ("erc-select-read-args" function (:prototype-flag t) nil [313681 313802])
            ("erc" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [313804 314629])
            ("defalias" code nil nil [314631 314658])
            ("erc-tls" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [314660 314807])
            ("erc-handle-irc-url" function (:prototype-flag t) nil [314809 315081])
            ("erc-autoaway-mode" function (:prototype-flag t) nil [315228 315272])
            ("erc-button-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [315413 315459])
            ("erc-capab-identify-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [315597 315650])
            ("erc-define-minor-mode" function (:prototype-flag t) nil [315791 315837])
            ("erc-dcc-mode" function (:prototype-flag t) nil [315961 315995])
            ("erc-cmd-DCC" function (:prototype-flag t) nil [315997 316297])
            ("pcomplete/erc-mode/DCC" function (:prototype-flag t) nil [316299 316404])
            ("erc-ctcp-query-DCC-hook" variable (:default-value (quote (erc-ctcp-query-DCC))) nil [316406 316500])
            ("erc-ctcp-query-DCC" function (:prototype-flag t) nil [316502 316749])
            ("erc-notifications-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [316934 317001])
            ("erc-cmd-ezb" function (:prototype-flag t) nil [317148 317271])
            ("erc-ezb-get-login" function (:prototype-flag t) nil [317273 317534])
            ("erc-ezb-lookup-action" function (:prototype-flag t) nil [317536 317612])
            ("erc-ezb-notice-autodetect" function (:prototype-flag t) nil [317614 317734])
            ("erc-ezb-identify" function (:prototype-flag t) nil [317736 317840])
            ("erc-ezb-init-session-list" function (:prototype-flag t) nil [317842 317961])
            ("erc-ezb-end-of-session-list" function (:prototype-flag t) nil [317963 318094])
            ("erc-ezb-add-session" function (:prototype-flag t) nil [318096 318214])
            ("erc-ezb-select" function (:prototype-flag t) nil [318216 318339])
            ("erc-ezb-select-session" function (:prototype-flag t) nil [318341 318445])
            ("erc-ezb-initialize" function (:prototype-flag t) nil [318447 318555])
            ("erc-fill-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [318690 318732])
            ("erc-fill" function (:prototype-flag t) nil [318734 318928])
            ("erc-identd-mode" function (:prototype-flag t) nil [319069 319109])
            ("erc-identd-start" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [319111 319496])
            ("erc-identd-stop" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [319498 319569])
            ("erc-create-imenu-index" function (:prototype-flag t) nil [319707 319773])
            ("erc-autojoin-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [319908 319954])
            ("push" code nil nil [320088 320149])
            ("push" code nil nil [320283 320342])
            ("erc-list-mode" function (:prototype-flag t) nil [320344 320380])
            ("erc-log-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [320504 320544])
            ("erc-logging-enabled" function (:prototype-flag t) nil [320546 320902])
            ("erc-save-buffer-in-logs" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [320904 321400])
            ("erc-match-mode" function (:prototype-flag t) nil [321538 321576])
            ("erc-add-pal" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [321578 321667])
            ("erc-delete-pal" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [321669 321764])
            ("erc-add-fool" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [321766 321858])
            ("erc-delete-fool" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [321860 321958])
            ("erc-add-keyword" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [321960 322061])
            ("erc-delete-keyword" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [322063 322170])
            ("erc-add-dangerous-host" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [322172 322294])
            ("erc-delete-dangerous-host" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [322296 322424])
            ("erc-menu-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [322559 322601])
            ("erc-netsplit-mode" function (:prototype-flag t) nil [322748 322792])
            ("erc-cmd-WHOLEFT" function (:prototype-flag t) nil [322794 322872])
            ("erc-determine-network" function (:prototype-flag t) nil [323019 323272])
            ("erc-server-select" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [323274 323405])
            ("erc-notify-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [323546 323592])
            ("erc-cmd-NOTIFY" function (:prototype-flag t) nil [323594 323838])
            ("pcomplete/erc-mode/NOTIFY" function (:prototype-flag t) nil [323840 323910])
            ("erc-page-mode" function (:prototype-flag t) nil [324045 324081])
            ("erc-completion-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [324231 324284])
            ("erc-replace-mode" function (:prototype-flag t) nil [324428 324470])
            ("erc-ring-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [324605 324647])
            ("erc-services-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [324794 324844])
            ("erc-nickserv-identify-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [324846 324979])
            ("erc-nickserv-identify" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [324981 325174])
            ("erc-sound-mode" function (:prototype-flag t) nil [325312 325350])
            ("erc-speedbar-browser" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [325497 325653])
            ("erc-spelling-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [325800 325850])
            ("erc-timestamp-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [325988 326036])
            ("erc-track-minor-mode" variable nil nil [326174 326332])
            ("custom-autoload" code nil nil [326334 326389])
            ("erc-track-minor-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [326391 326932])
            ("erc-track-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [326934 326978])
            ("erc-truncate-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [327125 327175])
            ("erc-truncate-buffer-to-size" function (:prototype-flag t) nil [327177 327441])
            ("erc-truncate-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [327443 327617])
            ("erc-xdcc-mode" function (:prototype-flag t) nil [327752 327788])
            ("erc-xdcc-add-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [327790 327884])
            ("ert-deftest" function (:prototype-flag t) nil [328010 328601])
            ("put" code nil nil [328603 328645])
            ("put" code nil nil [328647 328686])
            ("ert-run-tests-batch" function (:prototype-flag t) nil [328688 329094])
            ("ert-run-tests-batch-and-exit" function (:prototype-flag t) nil [329096 329445])
            ("ert-run-tests-interactively" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [329447 329840])
            ("defalias" code nil nil [329842 329886])
            ("ert-describe-test" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [329888 330030])
            ("put" code nil nil [330170 330221])
            ("ert-kill-all-test-buffers" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [330223 330328])
            ("eshell-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [330469 330550])
            ("push" code nil nil [330684 330743])
            ("eshell" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [330745 331281])
            ("eshell-command" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [331283 331465])
            ("eshell-command-result" function (:prototype-flag t) nil [331467 331831])
            ("define-obsolete-function-alias" code nil nil [331833 331909])
            ("tags-file-name" variable nil nil [332047 332283])
            ("put" code nil nil [332285 332361])
            ("put" code nil nil [332363 332414])
            ("tags-case-fold-search" variable (:default-value (quote default)) nil [332416 332644])
            ("custom-autoload" code nil nil [332646 332696])
            ("tags-table-list" variable nil nil [332698 333037])
            ("custom-autoload" code nil nil [333039 333083])
            ("tags-compression-info-list" variable (:default-value (purecopy (quote ("" ".Z" ".bz2" ".gz" ".xz" ".tgz")))) nil [333085 333296])
            ("custom-autoload" code nil nil [333298 333353])
            ("tags-add-tables" variable (:default-value (quote ask-user)) nil [333355 333633])
            ("custom-autoload" code nil nil [333635 333679])
            ("find-tag-hook" variable nil nil [333681 333894])
            ("custom-autoload" code nil nil [333896 333938])
            ("find-tag-default-function" variable nil nil [333940 334219])
            ("custom-autoload" code nil nil [334221 334275])
            ("tags-table-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [334277 334369])
            ("visit-tags-table" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [334371 334917])
            ("visit-tags-table-buffer" function (:prototype-flag t) nil [334919 335501])
            ("tags-table-files" function (:prototype-flag t) nil [335503 335780])
            ("tags-completion-at-point-function" function nil nil [335782 335950])
            ("find-tag-noselect" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [335952 336950])
            ("find-tag" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [336952 337916])
            ("define-key" code nil nil [337918 337952])
            ("find-tag-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [337954 338946])
            ("define-key" code nil nil [338948 338999])
            ("find-tag-other-frame" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [339001 339982])
            ("define-key" code nil nil [339984 340034])
            ("find-tag-regexp" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [340036 340937])
            ("define-key" code nil nil [340939 340984])
            ("define-key" code nil nil [340986 341024])
            ("pop-tag-mark" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [341026 341287])
            ("next-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [341289 341838])
            ("tags-loop-continue" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [341840 342438])
            ("define-key" code nil nil [342440 342484])
            ("tags-search" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [342486 342953])
            ("tags-query-replace" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [342955 343668])
            ("list-tags" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [343670 343946])
            ("tags-apropos" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [343948 344059])
            ("select-tags-table" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [344061 344326])
            ("complete-tag" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [344328 344585])
            ("setup-ethiopic-environment-internal" function (:prototype-flag t) nil [344736 344816])
            ("ethio-sera-to-fidel-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [344818 345436])
            ("ethio-sera-to-fidel-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [345438 346074])
            ("ethio-sera-to-fidel-marker" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [346076 346370])
            ("ethio-fidel-to-sera-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [346372 347080])
            ("ethio-fidel-to-sera-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [347082 347788])
            ("ethio-fidel-to-sera-marker" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [347790 348022])
            ("ethio-modify-vowel" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [348024 348140])
            ("ethio-replace-space" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [348142 348651])
            ("ethio-input-special-character" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [348653 348757])
            ("ethio-fidel-to-tex-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [348759 348904])
            ("ethio-tex-to-fidel-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [348906 349040])
            ("ethio-fidel-to-java-buffer" function (:prototype-flag t) nil [349042 349358])
            ("ethio-java-to-fidel-buffer" function (:prototype-flag t) nil [349360 349504])
            ("ethio-find-file" function (:prototype-flag t) nil [349506 349636])
            ("ethio-write-file" function (:prototype-flag t) nil [349638 349774])
            ("ethio-insert-ethio-space" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [349776 349948])
            ("ethio-composition-function" function (:prototype-flag t) nil [349950 350047])
            ("eudc-set-server" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [350162 350388])
            ("eudc-get-email" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [350390 350571])
            ("eudc-get-phone" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [350573 350754])
            ("eudc-expand-inline" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [350756 351561])
            ("eudc-query-form" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [351563 351842])
            ("eudc-load-eudc" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [351844 351998])
            ("cond" code nil nil [352000 353980])
            ("eudc-display-generic-binary" function (:prototype-flag t) nil [354115 354236])
            ("eudc-display-url" function (:prototype-flag t) nil [354238 354335])
            ("eudc-display-mail" function (:prototype-flag t) nil [354337 354447])
            ("eudc-display-sound" function (:prototype-flag t) nil [354449 354555])
            ("eudc-display-jpeg-inline" function (:prototype-flag t) nil [354557 354679])
            ("eudc-display-jpeg-as-button" function (:prototype-flag t) nil [354681 354791])
            ("eudc-insert-record-at-point-into-bbdb" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [354935 355133])
            ("eudc-try-bbdb-insert" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [355135 355259])
            ("eudc-edit-hotlist" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [355406 355530])
            ("ewoc-create" function (:prototype-flag t) nil [355667 356468])
            ("eww" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [356579 356766])
            ("defalias" code nil nil [356768 356795])
            ("eww-open-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [356797 356875])
            ("eww-browse-url" function (:prototype-flag t) nil [356877 356954])
            ("executable-command-find-posix-p" function (:prototype-flag t) nil [357107 357301])
            ("executable-interpret" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [357303 357648])
            ("executable-set-magic" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [357650 358061])
            ("executable-self-display" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [358063 358248])
            ("executable-make-buffer-file-executable-if-script-p" function (:prototype-flag t) nil [358250 358495])
            ("expand-add-abbrevs" function (:prototype-flag t) nil [358608 359510])
            ("expand-abbrev-hook" function (:prototype-flag t) nil [359512 359697])
            ("expand-jump-to-previous-slot" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [359699 359892])
            ("expand-jump-to-next-slot" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [359894 360079])
            ("define-key" code nil nil [360081 360138])
            ("define-key" code nil nil [360140 360193])
            ("f90-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [360317 362688])
            ("face-remap-add-relative" function (:prototype-flag t) nil [362821 363913])
            ("face-remap-reset-base" function (:prototype-flag t) nil [363915 364166])
            ("face-remap-set-base" function (:prototype-flag t) nil [364168 364877])
            ("text-scale-set" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [364879 365307])
            ("text-scale-increase" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [365309 365762])
            ("text-scale-decrease" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [365764 365949])
            ("define-key" code nil nil [365951 366007])
            ("define-key" code nil nil [366009 366065])
            ("define-key" code nil nil [366067 366123])
            ("define-key" code nil nil [366125 366181])
            ("text-scale-adjust" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [366183 367337])
            ("buffer-face-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [367339 367722])
            ("buffer-face-set" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [367724 368209])
            ("buffer-face-toggle" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [368211 368907])
            ("variable-pitch-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [368909 369157])
            ("push" code nil nil [369293 369351])
            ("feedmail-send-it" function (:prototype-flag t) nil [369353 369609])
            ("feedmail-run-the-queue-no-prompts" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [369611 369764])
            ("feedmail-run-the-queue-global-prompt" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [369766 370067])
            ("feedmail-run-the-queue" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [370069 370395])
            ("feedmail-queue-reminder" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [370397 371543])
            ("ffap-next" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [371650 372049])
            ("find-file-at-point" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [372051 372516])
            ("defalias" code nil nil [372518 372554])
            ("ffap-menu" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [372556 372913])
            ("ffap-at-mouse" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [372915 373241])
            ("dired-at-point" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [373243 373442])
            ("ffap-guess-file-name-at-point" function (:prototype-flag t) nil [373444 373611])
            ("ffap-bindings" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [373613 373710])
            ("file-cache-add-directory" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [373832 374074])
            ("file-cache-add-directory-list" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [374076 374497])
            ("file-cache-add-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [374499 374592])
            ("file-cache-add-directory-using-find" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [374594 374761])
            ("file-cache-add-directory-using-locate" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [374763 374960])
            ("file-cache-add-directory-recursively" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [374962 375358])
            ("file-cache-minibuffer-complete" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [375360 375796])
            ("file-notify-handle-event" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [375929 376129])
            ("add-file-local-variable" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [376245 376762])
            ("delete-file-local-variable" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [376764 376934])
            ("add-file-local-variable-prop-line" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [376936 377344])
            ("delete-file-local-variable-prop-line" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [377346 377514])
            ("add-dir-local-variable" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [377516 377669])
            ("delete-dir-local-variable" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [377671 377818])
            ("copy-file-locals-to-dir-locals" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [377820 377934])
            ("copy-dir-locals-to-file-locals" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [377936 378065])
            ("copy-dir-locals-to-file-locals-prop-line" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [378067 378194])
            ("filesets-init" function (:prototype-flag t) nil [378313 378465])
            ("push" code nil nil [378583 378642])
            ("find-cmd" function (:prototype-flag t) nil [378644 379075])
            ("find-dired" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [379208 379535])
            ("find-name-dired" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [379537 379859])
            ("find-grep-dired" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [379861 380254])
            ("ff-special-constructs" variable (:default-value (\` (((\, (purecopy "^#\\s *\\(include\\|import\\)\\s +[<\"]\\(.*\\)[>\"]")) lambda nil (buffer-substring (match-beginning 2) (match-end 2)))))) nil [380376 380893])
            ("custom-autoload" code nil nil [380895 380949])
            ("ff-get-other-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [380951 381221])
            ("defalias" code nil nil [381223 381275])
            ("ff-find-other-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [381277 383170])
            ("ff-mouse-find-other-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [383172 383272])
            ("ff-mouse-find-other-file-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [383274 383405])
            ("find-library" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [383557 383711])
            ("find-function-search-for-symbol" function (:prototype-flag t) nil [383713 384216])
            ("find-function-noselect" function (:prototype-flag t) nil [384218 384903])
            ("find-function" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [384905 385436])
            ("find-function-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [385438 385617])
            ("find-function-other-frame" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [385619 385796])
            ("find-variable-noselect" function (:prototype-flag t) nil [385798 386300])
            ("find-variable" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [386302 386831])
            ("find-variable-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [386833 387012])
            ("find-variable-other-frame" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [387014 387191])
            ("find-definition-noselect" function (:prototype-flag t) nil [387193 387717])
            ("find-face-definition" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [387719 388266])
            ("find-function-on-key" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [388268 388442])
            ("find-function-at-point" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [388444 388564])
            ("find-variable-at-point" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [388566 388686])
            ("find-function-setup-keys" function (:prototype-flag t) nil [388688 388823])
            ("find-lisp-find-dired" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [388945 389053])
            ("find-lisp-find-dired-subdirectories" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [389055 389167])
            ("find-lisp-find-dired-filter" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [389169 389308])
            ("push" code nil nil [389420 389477])
            ("finder-list-keywords" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [389479 389596])
            ("finder-commentary" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [389598 389760])
            ("finder-by-keyword" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [389762 389857])
            ("enable-flow-control" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [389979 390231])
            ("enable-flow-control-on" function (:prototype-flag t) nil [390233 390617])
            ("fill-flowed-encode" function (:prototype-flag t) nil [390757 390836])
            ("fill-flowed" function (:prototype-flag t) nil [390838 390923])
            ("push" code nil nil [391065 391123])
            ("flymake-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [391125 391434])
            ("flymake-mode-on" function (:prototype-flag t) nil [391436 391514])
            ("flymake-mode-off" function (:prototype-flag t) nil [391516 391596])
            ("flymake-find-file-hook" function (:prototype-flag t) nil [391598 391662])
            ("flyspell-prog-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [391809 391917])
            ("flyspell-mode" variable nil nil [391918 391983])
            ("flyspell-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [391985 393246])
            ("turn-on-flyspell" function (:prototype-flag t) nil [393248 393345])
            ("turn-off-flyspell" function (:prototype-flag t) nil [393347 393446])
            ("flyspell-mode-off" function (:prototype-flag t) nil [393448 393531])
            ("flyspell-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [393533 393631])
            ("flyspell-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [393633 393711])
            ("push" code nil nil [393826 393885])
            ("turn-on-follow-mode" function (:prototype-flag t) nil [393998 394118])
            ("turn-off-follow-mode" function (:prototype-flag t) nil [394120 394242])
            ("follow-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [394244 395670])
            ("follow-delete-other-windows-and-split" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [395672 396363])
            ("push" code nil nil [396499 396559])
            ("footnote-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [396561 396998])
            ("forms-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [397108 397912])
            ("forms-find-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [397914 397997])
            ("forms-find-file-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [397999 398111])
            ("fortran-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [398255 401296])
            ("fortune-add-fortune" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [401430 401656])
            ("fortune-from-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [401658 401911])
            ("fortune-compile" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [401913 402146])
            ("fortune-to-signature" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [402148 402539])
            ("fortune" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [402541 402891])
            ("frameset-session-filter-alist" variable (:default-value (quote ((name . :never) (left . frameset-filter-iconified) (minibuffer . frameset-filter-minibuffer) (top . frameset-filter-iconified)))) nil [403010 403319])
            ("frameset-persistent-filter-alist" variable (:default-value (nconc (quote ((background-color . frameset-filter-sanitize-color) (buffer-list . :never) (buffer-predicate . :never) (buried-buffer-list . :never) (font . frameset-filter-shelve-param) (foreground-color . frameset-filter-sanitize-color) (fullscreen . frameset-filter-shelve-param) (GUI:font . frameset-filter-unshelve-param) (GUI:fullscreen . frameset-filter-unshelve-param) (GUI:height . frameset-filter-unshelve-param) (GUI:width . frameset-filter-unshelve-param) (height . frameset-filter-shelve-param) (outer-window-id . :never) (parent-id . :never) (tty . frameset-filter-tty-to-GUI) (tty-type . frameset-filter-tty-to-GUI) (width . frameset-filter-shelve-param) (window-id . :never) (window-system . :never))) frameset-session-filter-alist)) nil [403321 404222])
            ("frameset-filter-alist" variable (:default-value frameset-persistent-filter-alist) nil [404224 406439])
            ("frameset-frame-id" function (:prototype-flag t) nil [406441 406876])
            ("frameset-frame-id-equal-p" function (:prototype-flag t) nil [406878 406995])
            ("frameset-frame-with-id" function (:prototype-flag t) nil [406997 407231])
            ("frameset-save" function (:prototype-flag t) nil [407233 407994])
            ("frameset-restore" function (:prototype-flag t) nil [407996 410320])
            ("frameset-to-register" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [410322 410550])
            ("push" code nil nil [410686 410745])
            ("gdb-enable-debug" variable nil nil [410886 411037])
            ("custom-autoload" code nil nil [411039 411087])
            ("gdb-enable-debug" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [411089 411527])
            ("gdb" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [411529 414401])
            ("generic-mode-list" variable nil nil [414547 414711])
            ("define-generic-mode" function (:prototype-flag t) nil [414713 416289])
            ("put" code nil nil [416291 416342])
            ("put" code nil nil [416344 416389])
            ("generic-mode-internal" function (:prototype-flag t) nil [416391 416544])
            ("generic-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [416546 416941])
            ("generic-make-keywords-list" function (:prototype-flag t) nil [416943 417444])
            ("make-obsolete" code nil nil [417446 417509])
            ("glasses-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [417653 418032])
            ("gmm-regexp-concat" function (:prototype-flag t) nil [418172 418339])
            ("gmm-message" function (:prototype-flag t) nil [418341 418665])
            ("gmm-error" function (:prototype-flag t) nil [418667 418829])
            ("gmm-widget-p" function (:prototype-flag t) nil [418831 418924])
            ("gmm-tool-bar-from-list" function (:prototype-flag t) nil [418926 419773])
            ("push" code nil nil [419889 419945])
            ("when" code nil nil [419946 420025])
            ("gnus-slave-no-server" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [420027 420167])
            ("gnus-no-server" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [420169 420560])
            ("gnus-slave" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [420562 420644])
            ("gnus-other-frame" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [420646 421255])
            ("gnus" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [421257 421542])
            ("gnus-unplugged" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [421685 421763])
            ("gnus-plugged" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [421765 421839])
            ("gnus-slave-unplugged" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [421841 421949])
            ("gnus-agentize" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [421951 422359])
            ("gnus-agent-possibly-save-gcc" function (:prototype-flag t) nil [422361 422464])
            ("gnus-agent-rename-group" function (:prototype-flag t) nil [422466 422795])
            ("gnus-agent-delete-group" function (:prototype-flag t) nil [422797 423095])
            ("gnus-agent-get-undownloaded-list" function (:prototype-flag t) nil [423097 423231])
            ("gnus-agent-possibly-alter-active" function (:prototype-flag t) nil [423233 423423])
            ("gnus-agent-find-parameter" function (:prototype-flag t) nil [423425 423682])
            ("gnus-agent-batch-fetch" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [423684 423778])
            ("gnus-agent-batch" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [423780 423880])
            ("gnus-agent-regenerate" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [423882 424035])
            ("gnus-article-prepare-display" function (:prototype-flag t) nil [424170 424290])
            ("gnus-bookmark-set" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [424442 424537])
            ("gnus-bookmark-jump" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [424539 424657])
            ("gnus-bookmark-bmenu-list" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [424659 424947])
            ("gnus-jog-cache" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [425090 425266])
            ("gnus-cache-generate-active" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [425268 425388])
            ("gnus-cache-generate-nov-databases" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [425390 425517])
            ("gnus-cache-rename-group" function (:prototype-flag t) nil [425519 425834])
            ("gnus-cache-delete-group" function (:prototype-flag t) nil [425836 426133])
            ("gnus-delay-article" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [426276 426824])
            ("gnus-delay-send-queue" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [426826 426937])
            ("gnus-delay-initialize" function (:prototype-flag t) nil [426939 427316])
            ("gnus-user-format-function-d" function (:prototype-flag t) nil [427459 427538])
            ("gnus-user-format-function-D" function (:prototype-flag t) nil [427540 427619])
            ("turn-on-gnus-dired-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [427762 427874])
            ("gnus-draft-reminder" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [428017 428120])
            ("gnus-random-x-face" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [428257 428387])
            ("gnus-insert-random-x-face-header" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [428389 428521])
            ("gnus-x-face-from-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [428523 428729])
            ("gnus-face-from-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [428731 428930])
            ("gnus-convert-face-to-png" function (:prototype-flag t) nil [428932 429085])
            ("gnus-convert-png-to-face" function (:prototype-flag t) nil [429087 429261])
            ("gnus-treat-from-gravatar" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [429413 429580])
            ("gnus-treat-mail-gravatar" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [429582 429760])
            ("gnus-fetch-group" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [429903 430116])
            ("gnus-fetch-group-other-frame" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [430118 430226])
            ("gnus-article-html" function (:prototype-flag t) nil [430366 430444])
            ("gnus-html-prefetch-images" function (:prototype-flag t) nil [430446 430523])
            ("defalias" code nil nil [430663 430708])
            ("gnus-batch-score" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [430710 430848])
            ("turn-on-gnus-mailing-list-mode" function (:prototype-flag t) nil [430982 431054])
            ("gnus-mailing-list-insinuate" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [431056 431227])
            ("gnus-mailing-list-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [431229 431384])
            ("gnus-group-split-setup" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [431527 432663])
            ("gnus-group-split-update" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [432665 433023])
            ("gnus-group-split" function (:prototype-flag t) nil [433025 433263])
            ("gnus-group-split-fancy" function (:prototype-flag t) nil [433265 435442])
            ("gnus-msg-mail" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [435579 435942])
            ("gnus-button-mailto" function (:prototype-flag t) nil [435944 436029])
            ("gnus-button-reply" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [436031 436136])
            ("define-mail-user-agent" code nil nil [436138 436257])
            ("gnus-notifications" function (:prototype-flag t) nil [436424 436778])
            ("gnus-treat-from-picon" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [436921 437065])
            ("gnus-treat-mail-picon" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [437067 437217])
            ("gnus-treat-newsgroups-picon" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [437219 437392])
            ("gnus-sorted-difference" function (:prototype-flag t) nil [437535 437747])
            ("gnus-sorted-ndifference" function (:prototype-flag t) nil [437749 437948])
            ("gnus-sorted-complement" function (:prototype-flag t) nil [437950 438132])
            ("gnus-intersection" function (:prototype-flag t) nil [438134 438208])
            ("gnus-sorted-intersection" function (:prototype-flag t) nil [438210 438372])
            ("gnus-sorted-range-intersection" function (:prototype-flag t) nil [438374 438548])
            ("defalias" code nil nil [438550 438617])
            ("gnus-sorted-nintersection" function (:prototype-flag t) nil [438619 438817])
            ("gnus-sorted-union" function (:prototype-flag t) nil [438819 438967])
            ("gnus-sorted-nunion" function (:prototype-flag t) nil [438969 439153])
            ("gnus-add-to-sorted-list" function (:prototype-flag t) nil [439155 439272])
            ("gnus-registry-initialize" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [439424 439523])
            ("gnus-registry-install-hooks" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [439525 439625])
            ("gnus-sieve-update" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [439768 440141])
            ("gnus-sieve-generate" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [440143 440474])
            ("gnus-sieve-article-add-rule" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [440476 440546])
            ("gnus-update-format" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [440686 440793])
            ("gnus-declare-backend" function (:prototype-flag t) nil [440936 441078])
            ("gnus-summary-bookmark-jump" function (:prototype-flag t) nil [441213 441417])
            ("gnus-sync-initialize" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [441557 441653])
            ("gnus-sync-install-hooks" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [441655 441743])
            ("gnus-add-configuration" function (:prototype-flag t) nil [441880 442015])
            ("gnutls-min-prime-bits" variable (:default-value 256) nil [442136 442532])
            ("custom-autoload" code nil nil [442534 442585])
            ("gomoku" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [442708 443472])
            ("define-obsolete-function-alias" code nil nil [443610 443695])
            ("goto-address-at-point" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [443697 443989])
            ("goto-address" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [443991 444425])
            ("put" code nil nil [444426 444473])
            ("goto-address-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [444475 444774])
            ("goto-address-prog-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [444776 444914])
            ("gravatar-retrieve" function (:prototype-flag t) nil [445051 445260])
            ("gravatar-retrieve-synchronously" function (:prototype-flag t) nil [445262 445395])
            ("grep-window-height" variable nil nil [445522 445633])
            ("custom-autoload" code nil nil [445635 445681])
            ("grep-command" variable nil nil [445683 446121])
            ("custom-autoload" code nil nil [446123 446165])
            ("grep-find-command" variable nil nil [446167 446425])
            ("custom-autoload" code nil nil [446427 446474])
            ("grep-setup-hook" variable nil nil [446476 446578])
            ("custom-autoload" code nil nil [446580 446623])
            ("grep-regexp-alist" variable
               (:constant-flag t
                :default-value (quote (("^\\(.+?\\)\\(:[ 	]*\\)\\([1-9][0-9]*\\)\\2" 1 3 ((lambda nil (when grep-highlight-matches (let* ((beg (match-end 0)) (end (save-excursion (goto-char beg) (line-end-position))) (mbeg (text-property-any beg end (quote font-lock-face) grep-match-face))) (when mbeg (- mbeg beg))))) lambda nil (when grep-highlight-matches (let* ((beg (match-end 0)) (end (save-excursion (goto-char beg) (line-end-position))) (mbeg (text-property-any beg end (quote font-lock-face) grep-match-face)) (mend (and mbeg (next-single-property-change mbeg (quote font-lock-face) nil end)))) (when mend (- mend beg)))))) ("^Binary file \\(.+\\) matches$" 1 nil nil 0 1))))
                nil [446625 447354])
            ("grep-program" variable (:default-value (purecopy "grep")) nil [447356 447543])
            ("find-program" variable (:default-value (purecopy "find")) nil [447545 447713])
            ("xargs-program" variable (:default-value (purecopy "xargs")) nil [447715 447913])
            ("grep-find-use-xargs" variable nil nil [447915 448229])
            ("grep-history" variable nil nil [448231 448283])
            ("grep-find-history" variable nil nil [448285 448347])
            ("grep-process-setup" function (:prototype-flag t) nil [448349 448526])
            ("grep-compute-defaults" function (:prototype-flag t) nil [448528 448588])
            ("grep-mode" function (:prototype-flag t) nil [448590 448694])
            ("grep" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [448696 449514])
            ("grep-find" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [449516 449875])
            ("defalias" code nil nil [449877 449909])
            ("lgrep" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [449911 450697])
            ("rgrep" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [450699 451672])
            ("zrgrep" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [451674 451973])
            ("defalias" code nil nil [451975 452001])
            ("gs-load-image" function (:prototype-flag t) nil [452102 452461])
            ("gud-gdb" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [452585 452799])
            ("sdb" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [452801 453011])
            ("dbx" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [453013 453223])
            ("xdb" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [453225 453586])
            ("perldb" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [453588 453804])
            ("pdb" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [453806 454018])
            ("jdb" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [454020 454649])
            ("gdb-script-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [454651 454737])
            ("gud-tooltip-mode" variable nil nil [454739 455040])
            ("custom-autoload" code nil nil [455042 455087])
            ("gud-tooltip-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [455089 455341])
            ("gv-get" function (:prototype-flag t) nil [455464 455954])
            ("gv-letplace" function (:prototype-flag t) nil [455956 456506])
            ("put" code nil nil [456508 456551])
            ("gv-define-expander" function (:prototype-flag t) nil [456553 456864])
            ("put" code nil nil [456866 456916])
            ("gv--defun-declaration" function (:prototype-flag t) nil [456918 457015])
            ("push" code nil nil [457017 457119])
            ("push" code nil nil [457121 457219])
            ("gv-define-setter" function (:prototype-flag t) nil [457221 457891])
            ("put" code nil nil [457893 457941])
            ("gv-define-simple-setter" function (:prototype-flag t) nil [457943 458526])
            ("setf" function (:prototype-flag t) nil [458528 458880])
            ("put" code nil nil [458882 458934])
            ("gv-ref" function (:prototype-flag t) nil [458936 459225])
            ("handwrite" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [459365 459791])
            ("hanoi" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [459910 460005])
            ("hanoi-unix" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [460007 460229])
            ("hanoi-unix-64" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [460231 460474])
            ("hashcash-insert-payment" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [460611 460741])
            ("hashcash-insert-payment-async" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [460743 460937])
            ("hashcash-verify-payment" function (:prototype-flag t) nil [460939 461062])
            ("mail-add-payment" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [461064 461360])
            ("mail-add-payment-async" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [461362 461604])
            ("mail-check-payment" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [461606 461780])
            ("help-at-pt-string" function (:prototype-flag t) nil [461913 462306])
            ("help-at-pt-kbd-string" function (:prototype-flag t) nil [462308 462586])
            ("display-local-help" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [462588 463069])
            ("help-at-pt-cancel-timer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [463071 463230])
            ("help-at-pt-set-timer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [463232 463395])
            ("help-at-pt-display-when-idle" variable (:default-value (quote never)) nil [463397 464773])
            ("custom-autoload" code nil nil [464775 464839])
            ("scan-buf-move-to-region" function (:prototype-flag t) nil [464841 465784])
            ("scan-buf-next-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [465786 466800])
            ("scan-buf-previous-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [466802 467178])
            ("describe-function" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [467297 467418])
            ("help-C-file-name" function (:prototype-flag t) nil [467420 467619])
            ("find-lisp-object-file-name" function (:prototype-flag t) nil [467621 468421])
            ("describe-function-1" function (:prototype-flag t) nil [468423 468494])
            ("variable-at-point" function (:prototype-flag t) nil [468496 468732])
            ("describe-variable" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [468734 469076])
            ("describe-syntax" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [469078 469328])
            ("describe-categories" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [469330 469655])
            ("doc-file-to-man" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [469657 469787])
            ("doc-file-to-info" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [469789 469918])
            ("three-step-help" variable nil nil [470051 470380])
            ("custom-autoload" code nil nil [470382 470431])
            ("help-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [470553 470755])
            ("help-mode-setup" function (:prototype-flag t) nil [470757 470816])
            ("help-mode-finish" function (:prototype-flag t) nil [470818 470878])
            ("help-setup-xref" function (:prototype-flag t) nil [470880 471474])
            ("help-buffer" function (:prototype-flag t) nil [471476 471813])
            ("help-make-xrefs" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [471815 472836])
            ("help-xref-button" function (:prototype-flag t) nil [472838 473207])
            ("help-insert-xref-button" function (:prototype-flag t) nil [473209 473510])
            ("help-xref-on-pp" function (:prototype-flag t) nil [473512 473637])
            ("help-bookmark-jump" function (:prototype-flag t) nil [473639 473865])
            ("Helper-describe-bindings" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [474008 474115])
            ("Helper-help" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [474117 474197])
            ("hexl-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [474302 477840])
            ("hexl-find-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [477842 478063])
            ("hexlify-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [478065 478200])
            ("hi-lock-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [478316 481135])
            ("global-hi-lock-mode" variable nil nil [481137 481450])
            ("custom-autoload" code nil nil [481452 481504])
            ("global-hi-lock-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [481506 481910])
            ("defalias" code nil nil [481912 481981])
            ("hi-lock-line-face-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [481983 482455])
            ("defalias" code nil nil [482457 482506])
            ("hi-lock-face-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [482508 482957])
            ("defalias" code nil nil [482959 483015])
            ("hi-lock-face-phrase-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [483017 483678])
            ("defalias" code nil nil [483680 483747])
            ("hi-lock-face-symbol-at-point" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [483749 484219])
            ("defalias" code nil nil [484221 484274])
            ("hi-lock-unface-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [484276 484627])
            ("hi-lock-write-interactive-patterns" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [484629 484953])
            ("hide-ifdef-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [485094 486479])
            ("hs-special-modes-alist" variable (:default-value (mapcar (quote purecopy) (quote ((c-mode "{" "}" "/[*/]" nil nil) (c++-mode "{" "}" "/[*/]" nil nil) (bibtex-mode ("@\\S(*\\(\\s(\\)" 1)) (java-mode "{" "}" "/[*/]" nil nil) (js-mode "{" "}" "/[*/]" nil))))) nil [486626 488067])
            ("hs-minor-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [488069 488972])
            ("turn-off-hideshow" function (:prototype-flag t) nil [488974 489075])
            ("highlight-changes-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [489197 490289])
            ("highlight-changes-visible-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [490291 490926])
            ("highlight-changes-remove-highlight" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [490928 491147])
            ("highlight-changes-next-change" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [491149 491291])
            ("highlight-changes-previous-change" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [491293 491443])
            ("highlight-changes-rotate-faces" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [491445 492116])
            ("highlight-compare-buffers" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [492118 492702])
            ("highlight-compare-with-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [492704 493322])
            ("global-highlight-changes-mode" variable nil nil [493324 493677])
            ("custom-autoload" code nil nil [493679 493743])
            ("global-highlight-changes-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [493745 494215])
            ("push" code nil nil [494347 494408])
            ("hippie-expand-try-functions-list" variable (:default-value (quote (try-complete-file-name-partially try-complete-file-name try-expand-all-abbrevs try-expand-list try-expand-line try-expand-dabbrev try-expand-dabbrev-all-buffers try-expand-dabbrev-from-kill try-complete-lisp-symbol-partially try-complete-lisp-symbol))) nil [494410 494881])
            ("custom-autoload" code nil nil [494883 494949])
            ("hippie-expand" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [494951 495437])
            ("make-hippie-expand-function" function (:prototype-flag t) nil [495439 495706])
            ("hl-line-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [495821 496682])
            ("global-hl-line-mode" variable nil nil [496684 496997])
            ("custom-autoload" code nil nil [496999 497051])
            ("global-hl-line-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [497053 497634])
            ("define-obsolete-variable-alias" code nil nil [497779 497862])
            ("holiday-general-holidays" variable (:default-value (mapcar (quote purecopy) (quote ((holiday-fixed 1 1 "New Year's Day") (holiday-float 1 1 3 "Martin Luther King Day") (holiday-fixed 2 2 "Groundhog Day") (holiday-fixed 2 14 "Valentine's Day") (holiday-float 2 1 3 "President's Day") (holiday-fixed 3 17 "St. Patrick's Day") (holiday-fixed 4 1 "April Fools' Day") (holiday-float 5 0 2 "Mother's Day") (holiday-float 5 1 -1 "Memorial Day") (holiday-fixed 6 14 "Flag Day") (holiday-float 6 0 3 "Father's Day") (holiday-fixed 7 4 "Independence Day") (holiday-float 9 1 1 "Labor Day") (holiday-float 10 1 2 "Columbus Day") (holiday-fixed 10 31 "Halloween") (holiday-fixed 11 11 "Veteran's Day") (holiday-float 11 4 4 "Thanksgiving"))))) nil [497864 498685])
            ("custom-autoload" code nil nil [498687 498743])
            ("put" code nil nil [498745 498800])
            ("define-obsolete-variable-alias" code nil nil [498802 498887])
            ("holiday-oriental-holidays" variable (:default-value (mapcar (quote purecopy) (quote ((holiday-chinese-new-year) (if calendar-chinese-all-holidays-flag (append (holiday-chinese 1 15 "Lantern Festival") (holiday-chinese-qingming) (holiday-chinese 5 5 "Dragon Boat Festival") (holiday-chinese 7 7 "Double Seventh Festival") (holiday-chinese 8 15 "Mid-Autumn Festival") (holiday-chinese 9 9 "Double Ninth Festival") (holiday-chinese-winter-solstice))))))) nil [498889 499390])
            ("custom-autoload" code nil nil [499392 499449])
            ("put" code nil nil [499451 499507])
            ("define-obsolete-variable-alias" code nil nil [499509 499588])
            ("holiday-local-holidays" variable nil nil [499590 499704])
            ("custom-autoload" code nil nil [499706 499760])
            ("put" code nil nil [499762 499815])
            ("define-obsolete-variable-alias" code nil nil [499817 499896])
            ("holiday-other-holidays" variable nil nil [499898 500019])
            ("custom-autoload" code nil nil [500021 500075])
            ("put" code nil nil [500077 500130])
            ("hebrew-holidays-1" variable (:default-value (mapcar (quote purecopy) (quote ((holiday-hebrew-rosh-hashanah) (if calendar-hebrew-all-holidays-flag (holiday-julian 11 (let ((m displayed-month) (y displayed-year) year) (calendar-increment-month m y -1) (setq year (calendar-extract-year (calendar-julian-from-absolute (calendar-absolute-from-gregorian (list m 1 y))))) (if (zerop (% (1+ year) 4)) 22 21)) "\"Tal Umatar\" (evening)")))))) nil [500132 500603])
            ("put" code nil nil [500605 500653])
            ("hebrew-holidays-2" variable (:default-value (mapcar (quote purecopy) (quote ((holiday-hebrew-hanukkah) (if calendar-hebrew-all-holidays-flag (holiday-hebrew 10 (let ((h-year (calendar-extract-year (calendar-hebrew-from-absolute (calendar-absolute-from-gregorian (list displayed-month 28 displayed-year)))))) (if (= 6 (% (calendar-hebrew-to-absolute (list 10 10 h-year)) 7)) 11 10)) "Tzom Teveth")) (if calendar-hebrew-all-holidays-flag (holiday-hebrew 11 15 "Tu B'Shevat")))))) nil [500655 501169])
            ("put" code nil nil [501171 501219])
            ("hebrew-holidays-3" variable (:default-value (mapcar (quote purecopy) (quote ((if calendar-hebrew-all-holidays-flag (holiday-hebrew 11 (let* ((m displayed-month) (y displayed-year) (h-year (progn (calendar-increment-month m y 1) (calendar-extract-year (calendar-hebrew-from-absolute (calendar-absolute-from-gregorian (list m (calendar-last-day-of-month m y) y)))))) (s-s (calendar-hebrew-from-absolute (if (= 6 (% (calendar-hebrew-to-absolute (list 7 1 h-year)) 7)) (calendar-dayname-on-or-before 6 (calendar-hebrew-to-absolute (list 11 17 h-year))) (calendar-dayname-on-or-before 6 (calendar-hebrew-to-absolute (list 11 16 h-year)))))) (day (calendar-extract-day s-s))) day) "Shabbat Shirah")))))) nil [501221 501955])
            ("put" code nil nil [501957 502005])
            ("hebrew-holidays-4" variable (:default-value (mapcar (quote purecopy) (quote ((holiday-hebrew-passover) (and calendar-hebrew-all-holidays-flag (let* ((m displayed-month) (y displayed-year) (year (progn (calendar-increment-month m y -1) (calendar-extract-year (calendar-julian-from-absolute (calendar-absolute-from-gregorian (list m 1 y))))))) (= 21 (% year 28))) (holiday-julian 3 26 "Kiddush HaHamah")) (if calendar-hebrew-all-holidays-flag (holiday-hebrew-tisha-b-av)))))) nil [502007 502517])
            ("put" code nil nil [502519 502567])
            ("define-obsolete-variable-alias" code nil nil [502569 502650])
            ("holiday-hebrew-holidays" variable (:default-value (mapcar (quote purecopy) (quote ((holiday-hebrew-passover) (holiday-hebrew-rosh-hashanah) (holiday-hebrew-hanukkah) (if calendar-hebrew-all-holidays-flag (append (holiday-hebrew-tisha-b-av) (holiday-hebrew-misc))))))) nil [502652 502967])
            ("custom-autoload" code nil nil [502969 503024])
            ("put" code nil nil [503026 503080])
            ("define-obsolete-variable-alias" code nil nil [503082 503169])
            ("holiday-christian-holidays" variable (:default-value (mapcar (quote purecopy) (quote ((holiday-easter-etc) (holiday-fixed 12 25 "Christmas") (if calendar-christian-all-holidays-flag (append (holiday-fixed 1 6 "Epiphany") (holiday-julian 12 25 "Christmas (Julian calendar)") (holiday-greek-orthodox-easter) (holiday-fixed 8 15 "Assumption") (holiday-advent 0 "Advent"))))))) nil [503171 503595])
            ("custom-autoload" code nil nil [503597 503655])
            ("put" code nil nil [503657 503714])
            ("define-obsolete-variable-alias" code nil nil [503716 503799])
            ("holiday-islamic-holidays" variable (:default-value (mapcar (quote purecopy) (quote ((holiday-islamic-new-year) (holiday-islamic 9 1 "Ramadan Begins") (if calendar-islamic-all-holidays-flag (append (holiday-islamic 1 10 "Ashura") (holiday-islamic 3 12 "Mulad-al-Nabi") (holiday-islamic 7 26 "Shab-e-Mi'raj") (holiday-islamic 8 15 "Shab-e-Bara't") (holiday-islamic 9 27 "Shab-e Qadr") (holiday-islamic 10 1 "Id-al-Fitr") (holiday-islamic 12 10 "Id-al-Adha"))))))) nil [503801 504311])
            ("custom-autoload" code nil nil [504313 504369])
            ("put" code nil nil [504371 504426])
            ("define-obsolete-variable-alias" code nil nil [504428 504507])
            ("holiday-bahai-holidays" variable (:default-value (mapcar (quote purecopy) (quote ((holiday-bahai-new-year) (holiday-bahai-ridvan) (holiday-fixed 5 23 "Declaration of the Báb") (holiday-fixed 5 29 "Ascension of Bahá'u'lláh") (holiday-fixed 7 9 "Martyrdom of the Báb") (holiday-fixed 10 20 "Birth of the Báb") (holiday-fixed 11 12 "Birth of Bahá'u'lláh") (if calendar-bahai-all-holidays-flag (append (holiday-fixed 11 26 "Day of the Covenant") (holiday-fixed 11 28 "Ascension of `Abdu'l-Bahá"))))))) nil [504509 505054])
            ("custom-autoload" code nil nil [505056 505110])
            ("put" code nil nil [505112 505165])
            ("define-obsolete-variable-alias" code nil nil [505167 505246])
            ("holiday-solar-holidays" variable (:default-value (mapcar (quote purecopy) (quote ((solar-equinoxes-solstices) (holiday-sexp calendar-daylight-savings-starts (format "Daylight Saving Time Begins %s" (solar-time-string (/ calendar-daylight-savings-starts-time (float 60)) calendar-standard-time-zone-name))) (holiday-sexp calendar-daylight-savings-ends (format "Daylight Saving Time Ends %s" (solar-time-string (/ calendar-daylight-savings-ends-time (float 60)) calendar-daylight-time-zone-name))))))) nil [505248 505800])
            ("custom-autoload" code nil nil [505802 505856])
            ("put" code nil nil [505858 505911])
            ("put" code nil nil [505913 505961])
            ("holidays" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [505963 506222])
            ("list-holidays" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [506224 507047])
            ("defalias" code nil nil [507049 507088])
            ("html2text" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [507228 507328])
            ("push" code nil nil [507462 507525])
            ("htmlfontify-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [507527 508237])
            ("htmlfontify-copy-and-link-dir" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [508239 508548])
            ("define-ibuffer-column" function (:prototype-flag t) nil [508670 509783])
            ("define-ibuffer-sorter" function (:prototype-flag t) nil [509785 510298])
            ("define-ibuffer-op" function (:prototype-flag t) nil [510300 511946])
            ("define-ibuffer-filter" function (:prototype-flag t) nil [511948 512525])
            ("ibuffer-list-buffers" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [512641 512868])
            ("ibuffer-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [512870 513111])
            ("ibuffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [513113 513980])
            ("push" code nil nil [514127 514188])
            ("icalendar-export-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [514190 514451])
            ("icalendar-export-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [514453 514927])
            ("icalendar-import-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [514929 515276])
            ("icalendar-import-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [515278 515982])
            ("icomplete-mode" variable nil nil [516104 516397])
            ("custom-autoload" code nil nil [516399 516448])
            ("icomplete-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [516450 516738])
            ("icon-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [516865 518291])
            ("idlwave-shell" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [518444 519294])
            ("push" code nil nil [519437 519498])
            ("idlwave-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [519500 524441])
            ("ido-mode" variable nil nil [524545 525009])
            ("custom-autoload" code nil nil [525011 525048])
            ("ido-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [525050 525565])
            ("ido-switch-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [525567 527260])
            ("ido-switch-buffer-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [527262 527501])
            ("ido-display-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [527503 527730])
            ("ido-kill-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [527732 527915])
            ("ido-insert-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [527917 528146])
            ("ido-switch-buffer-other-frame" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [528148 528385])
            ("ido-find-file-in-dir" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [528387 528488])
            ("ido-find-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [528490 530855])
            ("ido-find-file-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [530857 531084])
            ("ido-find-alternate-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [531086 531310])
            ("ido-find-file-read-only" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [531312 531537])
            ("ido-find-file-read-only-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [531539 531793])
            ("ido-find-file-read-only-other-frame" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [531795 532047])
            ("ido-display-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [532049 532266])
            ("ido-find-file-other-frame" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [532268 532493])
            ("ido-write-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [532495 532688])
            ("ido-insert-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [532690 532895])
            ("ido-dired" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [532897 533079])
            ("ido-read-buffer" function (:prototype-flag t) nil [533081 533462])
            ("ido-read-file-name" function (:prototype-flag t) nil [533464 533755])
            ("ido-read-directory-name" function (:prototype-flag t) nil [533757 534057])
            ("ido-completing-read" function (:prototype-flag t) nil [534059 535029])
            ("ielm" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [535134 535334])
            ("define-obsolete-function-alias" code nil nil [535447 535520])
            ("iimage-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [535522 535826])
            ("image-type-from-data" function (:prototype-flag t) nil [535936 536128])
            ("image-type-from-buffer" function (:prototype-flag t) nil [536130 536330])
            ("image-type-from-file-header" function (:prototype-flag t) nil [536332 536549])
            ("image-type-from-file-name" function (:prototype-flag t) nil [536551 536755])
            ("image-type" function (:prototype-flag t) nil [536757 537225])
            ("image-type-available-p" function (:prototype-flag t) nil [537227 537387])
            ("image-type-auto-detected-p" function (:prototype-flag t) nil [537389 537886])
            ("create-image" function (:prototype-flag t) nil [537888 538767])
            ("put-image" function (:prototype-flag t) nil [538769 539488])
            ("insert-image" function (:prototype-flag t) nil [539490 540340])
            ("insert-sliced-image" function (:prototype-flag t) nil [540342 540925])
            ("remove-images" function (:prototype-flag t) nil [540927 541175])
            ("find-image" function (:prototype-flag t) nil [541177 542005])
            ("defimage" function (:prototype-flag t) nil [542007 542822])
            ("put" code nil nil [542824 542858])
            ("imagemagick-register-types" function (:prototype-flag t) nil [542860 543437])
            ("push" code nil nil [543572 543637])
            ("image-dired-dired-toggle-marked-thumbs" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [543639 544027])
            ("image-dired-dired-with-window-configuration" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [544029 544660])
            ("image-dired-display-thumbs" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [544662 545652])
            ("image-dired-show-all-from-dir" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [545654 545934])
            ("defalias" code nil nil [545936 545990])
            ("define-obsolete-function-alias" code nil nil [545992 546051])
            ("image-dired-tag-files" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [546053 546187])
            ("image-dired-delete-tag" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [546189 546348])
            ("image-dired-jump-thumbnail-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [546350 546452])
            ("image-dired-setup-dired-keybindings" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [546454 546698])
            ("image-dired-display-thumbs-append" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [546700 546829])
            ("image-dired-display-thumb" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [546831 546964])
            ("image-dired-dired-display-external" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [546966 547091])
            ("image-dired-dired-display-image" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [547093 547343])
            ("image-dired-dired-comment-files" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [547345 547468])
            ("image-dired-mark-tagged-files" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [547470 547896])
            ("image-dired-dired-edit-comment-and-tags" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [547898 548109])
            ("image-file-name-extensions" variable (:default-value (purecopy (quote ("png" "jpeg" "jpg" "gif" "tiff" "tif" "xbm" "xpm" "pbm" "pgm" "ppm" "pnm" "svg")))) nil [548242 548780])
            ("custom-autoload" code nil nil [548782 548844])
            ("image-file-name-regexps" variable nil nil [548846 549319])
            ("custom-autoload" code nil nil [549321 549380])
            ("image-file-name-regexp" function (:prototype-flag t) nil [549382 549507])
            ("insert-image-file" function (:prototype-flag t) nil [549509 549766])
            ("auto-image-file-mode" variable nil nil [549768 550085])
            ("custom-autoload" code nil nil [550087 550143])
            ("auto-image-file-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [550145 550585])
            ("image-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [550718 550946])
            ("image-minor-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [550948 551379])
            ("image-mode-as-text" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [551381 551975])
            ("image-bookmark-jump" function (:prototype-flag t) nil [551977 552045])
            ("imenu-sort-function" variable nil nil [552155 552691])
            ("custom-autoload" code nil nil [552693 552741])
            ("imenu-generic-expression" variable nil nil [552743 554252])
            ("put" code nil nil [554253 554308])
            ("make-variable-buffer-local" code nil nil [554310 554364])
            ("imenu-create-index-function" variable (:default-value (quote imenu-default-create-index-function)) nil [554366 554732])
            ("make-variable-buffer-local" code nil nil [554734 554791])
            ("imenu-prev-index-position-function" variable (:default-value (quote beginning-of-defun)) nil [554793 555233])
            ("make-variable-buffer-local" code nil nil [555235 555299])
            ("imenu-extract-index-name-function" variable nil nil [555301 555594])
            ("make-variable-buffer-local" code nil nil [555596 555659])
            ("imenu-name-lookup-function" variable nil nil [555661 556019])
            ("make-variable-buffer-local" code nil nil [556021 556077])
            ("imenu-default-goto-function" variable (:default-value (quote imenu-default-goto-function)) nil [556079 556282])
            ("make-variable-buffer-local" code nil nil [556284 556341])
            ("put" code nil nil [556342 556391])
            ("make-variable-buffer-local" code nil nil [556393 556441])
            ("make-variable-buffer-local" code nil nil [556443 556495])
            ("imenu-add-to-menubar" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [556497 556715])
            ("imenu-add-menubar-index" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [556717 556921])
            ("imenu" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [556923 557138])
            ("indian-compose-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [557283 557414])
            ("indian-compose-string" function (:prototype-flag t) nil [557416 557487])
            ("in-is13194-post-read-conversion" function (:prototype-flag t) nil [557489 557567])
            ("in-is13194-pre-write-conversion" function (:prototype-flag t) nil [557569 557651])
            ("indian-2-column-to-ucs-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [557653 557778])
            ("inferior-lisp" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [557925 558403])
            ("defalias" code nil nil [558405 558440])
            ("Info-default-directory-list" variable (:default-value (let* ((config-dir (file-name-as-directory (or (and (featurep (quote ns)) (let ((dir (expand-file-name "../info" data-directory))) (if (file-directory-p dir) dir))) configure-info-directory))) (prefixes (prune-directory-list (quote ("/usr/local/" "/usr/" "/opt/" "/")))) (suffixes (quote ("share/" "" "gnu/" "gnu/lib/" "gnu/lib/emacs/" "emacs/" "lib/" "lib/emacs/"))) (standard-info-dirs (apply (function nconc) (mapcar (lambda (pfx) (let ((dirs (mapcar (lambda (sfx) (concat pfx sfx "info/")) suffixes))) (prune-directory-list dirs))) prefixes))) (dirs (if (member config-dir standard-info-dirs) (nconc standard-info-dirs (list config-dir)) (cons config-dir standard-info-dirs)))) (if (not (eq system-type (quote windows-nt))) dirs (let* ((instdir (file-name-directory invocation-directory)) (dir1 (expand-file-name "../info/" instdir)) (dir2 (expand-file-name "../../../info/" instdir))) (cond ((file-exists-p dir1) (append dirs (list dir1))) ((file-exists-p dir2) (append dirs (list dir2))) (t dirs)))))) nil [558547 560560])
            ("info-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [560562 560701])
            ("put" code nil nil [560703 560744])
            ("info" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [560746 561692])
            ("info-emacs-manual" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [561694 561786])
            ("info-emacs-bug" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [561788 561911])
            ("info-standalone" function (:prototype-flag t) nil [561913 562120])
            ("Info-on-current-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [562122 562349])
            ("Info-directory" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [562351 562432])
            ("Info-index" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [562434 562829])
            ("info-apropos" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [562831 562990])
            ("info-finder" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [562992 563324])
            ("Info-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [563326 567017])
            ("put" code nil nil [567019 567084])
            ("Info-goto-emacs-command-node" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [567086 567422])
            ("put" code nil nil [567424 567493])
            ("Info-goto-emacs-key-command-node" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [567495 567908])
            ("Info-speedbar-browser" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [567910 568065])
            ("Info-bookmark-jump" function (:prototype-flag t) nil [568067 568248])
            ("info-display-manual" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [568250 568464])
            ("info-lookup-reset" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [568586 568830])
            ("put" code nil nil [568832 568876])
            ("info-lookup-symbol" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [568878 569318])
            ("put" code nil nil [569320 569362])
            ("info-lookup-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [569364 569762])
            ("info-complete-symbol" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [569764 569886])
            ("info-complete-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [569888 570006])
            ("push" code nil nil [570127 570185])
            ("info-xref-check" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [570187 571422])
            ("info-xref-check-all" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [571424 572014])
            ("info-xref-check-all-custom" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [572016 572402])
            ("info-xref-docstrings" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [572404 573274])
            ("Info-tagify" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [573393 573543])
            ("Info-split-threshold" variable (:default-value 262144) nil [573545 573653])
            ("custom-autoload" code nil nil [573655 573707])
            ("Info-split" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [573709 574394])
            ("Info-validate" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [574396 574558])
            ("batch-info-validate" function (:prototype-flag t) nil [574560 574890])
            ("push" code nil nil [575031 575091])
            ("inversion-require-emacs" function (:prototype-flag t) nil [575093 575318])
            ("isearch-toggle-specified-input-method" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [575476 575615])
            ("isearch-toggle-input-method" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [575617 575728])
            ("isearch-process-search-multibyte-characters" function (:prototype-flag t) nil [575730 575843])
            ("push" code nil nil [575961 576020])
            ("isearchb-activate" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [576022 576287])
            ("iso-spanish" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [576439 576709])
            ("iso-german" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [576711 576970])
            ("iso-iso2tex" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [576972 577239])
            ("iso-tex2iso" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [577241 577508])
            ("iso-gtex2iso" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [577510 577786])
            ("iso-iso2gtex" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [577788 578064])
            ("iso-iso2duden" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [578066 578339])
            ("iso-iso2sgml" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [578341 578606])
            ("iso-sgml2iso" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [578608 578873])
            ("iso-cvt-read-only" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [578875 578975])
            ("iso-cvt-write-only" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [578977 579079])
            ("iso-cvt-define-menu" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [579081 579210])
            ("define-key" code nil nil [579371 579435])
            ("iso-transl-ctl-x-8-map" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [579437 579521])
            ("put" code nil nil [579662 579752])
            ("ispell-personal-dictionary" variable nil nil [579754 580069])
            ("custom-autoload" code nil nil [580071 580127])
            ("put" code nil nil [580129 580198])
            ("ispell-menu-map" variable nil nil [580200 580257])
            ("ispell-menu-xemacs" variable nil nil [580259 580425])
            ("ispell-menu-map-needed" variable (:default-value (and (not ispell-menu-map) (not (featurep (quote xemacs))) (quote reload))) nil [580427 580519])
            ("if" code nil nil [580521 582271])
            ("if" code nil nil [582273 582954])
            ("if" code nil nil [582956 583588])
            ("ispell-skip-region-alist" variable (:default-value (\` ((ispell-words-keyword forward-line) (ispell-dictionary-keyword forward-line) (ispell-pdict-keyword forward-line) (ispell-parsing-keyword forward-line) ((\, (purecopy "^---*BEGIN PGP [A-Z ]*--*")) \, (purecopy "^---*END PGP [A-Z ]*--*")) ((\, (purecopy "^begin [0-9][0-9][0-9] [^ 	]+$")) \, (purecopy "
end
")) ((\, (purecopy "^%!PS-Adobe-[123].0")) \, (purecopy "
%%EOF
")) ((\, (purecopy "^---* \\(Start of \\)?[Ff]orwarded [Mm]essage")) \, (purecopy "^---* End of [Ff]orwarded [Mm]essage")) ((\, (purecopy "\\(--+\\|_+\\|\\(/\\w\\|\\(\\(\\w\\|[-_]\\)+[.:@]\\)\\)\\(\\w\\|[-_]\\)*\\([.:/@]+\\(\\w\\|[-_~=?&]\\)+\\)+\\)")))))) nil [583590 584616])
            ("ispell-tex-skip-alists" variable (:default-value (purecopy (quote ((("\\\\addcontentsline" ispell-tex-arg-end 2) ("\\\\add\\(tocontents\\|vspace\\)" ispell-tex-arg-end) ("\\\\\\([aA]lph\\|arabic\\)" ispell-tex-arg-end) ("\\\\bibliographystyle" ispell-tex-arg-end) ("\\\\makebox" ispell-tex-arg-end 0) ("\\\\e?psfig" ispell-tex-arg-end) ("\\\\document\\(class\\|style\\)" . "\\\\begin[ 	
]*{[ 	
]*document[ 	
]*}")) (("\\(figure\\|table\\)\\*?" ispell-tex-arg-end 0) ("list" ispell-tex-arg-end 2) ("program" . "\\\\end[ 	
]*{[ 	
]*program[ 	
]*}") ("verbatim\\*?" . "\\\\end[ 	
]*{[ 	
]*verbatim\\*?[ 	
]*}")))))) nil [584618 585424])
            ("ispell-html-skip-alists" variable
               (:constant-flag t
                :default-value (quote (("<[cC][oO][dD][eE]\\>[^>]*>" "</[cC][oO][dD][eE]*>") ("<[sS][cC][rR][iI][pP][tT]\\>[^>]*>" "</[sS][cC][rR][iI][pP][tT]>") ("<[aA][pP][pP][lL][eE][tT]\\>[^>]*>" "</[aA][pP][pP][lL][eE][tT]>") ("<[vV][eE][rR][bB]\\>[^>]*>" "<[vV][eE][rR][bB]\\>[^>]*>") ("<[tT][tT]/" "/") ("<[^ 	
>]" ">") ("&[^ 	
;]" "[; 	
]"))))
                nil [585426 585971])
            ("put" code nil nil [585972 586027])
            ("define-key" code nil nil [586029 586066])
            ("ispell-word" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [586068 587443])
            ("ispell-pdict-save" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [587445 587625])
            ("ispell-help" function (:prototype-flag t) nil [587627 588720])
            ("ispell-kill-ispell" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [588722 588986])
            ("ispell-change-dictionary" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [588988 589300])
            ("ispell-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [589302 589553])
            ("ispell-comments-and-strings" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [589555 589690])
            ("ispell-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [589692 589803])
            ("ispell-buffer-with-debug" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [589805 590015])
            ("ispell-continue" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [590017 590138])
            ("ispell-complete-word" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [590140 590412])
            ("ispell-complete-word-interior-frag" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [590414 590544])
            ("ispell" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [590546 590991])
            ("ispell-minor-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [590993 591641])
            ("ispell-message" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [591643 592585])
            ("iswitchb-mode" variable nil nil [592704 592993])
            ("custom-autoload" code nil nil [592995 593042])
            ("iswitchb-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [593044 593416])
            ("setup-japanese-environment-internal" function (:prototype-flag t) nil [593567 593647])
            ("japanese-katakana" function (:prototype-flag t) nil [593649 594126])
            ("japanese-hiragana" function (:prototype-flag t) nil [594128 594370])
            ("japanese-hankaku" function (:prototype-flag t) nil [594372 594710])
            ("japanese-zenkaku" function (:prototype-flag t) nil [594712 594954])
            ("japanese-katakana-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [594956 595240])
            ("japanese-hiragana-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [595242 595385])
            ("japanese-hankaku-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [595387 595731])
            ("japanese-zenkaku-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [595733 596082])
            ("read-hiragana-string" function (:prototype-flag t) nil [596084 596328])
            ("jka-compr-inhibit" variable nil nil [596450 596664])
            ("jka-compr-handler" function (:prototype-flag t) nil [596666 596748])
            ("jka-compr-uninstall" function (:prototype-flag t) nil [596750 596990])
            ("push" code nil nil [597110 597161])
            ("js-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [597163 597239])
            ("defalias" code nil nil [597241 597277])
            ("push" code nil nil [597383 597438])
            ("keypad-setup" variable nil nil [597579 597790])
            ("custom-autoload" code nil nil [597792 597836])
            ("keypad-numlock-setup" variable nil nil [597838 598056])
            ("custom-autoload" code nil nil [598058 598110])
            ("keypad-shifted-setup" variable nil nil [598112 598329])
            ("custom-autoload" code nil nil [598331 598383])
            ("keypad-numlock-shifted-setup" variable nil nil [598385 598610])
            ("custom-autoload" code nil nil [598612 598672])
            ("keypad-setup" function (:prototype-flag t) nil [598674 599709])
            ("kinsoku" function (:prototype-flag t) nil [599861 600505])
            ("kkc-after-update-conversion-functions" variable nil nil [600645 601023])
            ("kkc-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [601025 601452])
            ("global-set-key" code nil nil [601565 601609])
            ("global-set-key" code nil nil [601611 601653])
            ("global-set-key" code nil nil [601655 601706])
            ("global-set-key" code nil nil [601708 601767])
            ("global-set-key" code nil nil [601769 601816])
            ("global-set-key" code nil nil [601818 601860])
            ("kmacro-keymap" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [601862 601944])
            ("kmacro-exec-ring-item" function (:prototype-flag t) nil [601946 602055])
            ("kmacro-start-macro" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [602057 603064])
            ("kmacro-end-macro" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [603066 603529])
            ("kmacro-call-macro" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [603531 604175])
            ("kmacro-start-macro-or-insert-counter" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [604177 604926])
            ("kmacro-end-or-call-macro" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [604928 605199])
            ("kmacro-end-and-call-macro" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [605201 605585])
            ("kmacro-end-call-mouse" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [605587 605793])
            ("default-korean-keyboard" variable (:default-value (purecopy (if (string-match "3" (or (getenv "HANGUL_KEYBOARD_TYPE") "")) "3" ""))) nil [605944 606140])
            ("setup-korean-environment-internal" function (:prototype-flag t) nil [606142 606220])
            ("defalias" code nil nil [606357 606403])
            ("landmark-test-run" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [606405 606539])
            ("landmark" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [606541 607221])
            ("lao-compose-string" function (:prototype-flag t) nil [607366 607431])
            ("lao-transcribe-single-roman-syllable-to-lao" function (:prototype-flag t) nil [607433 607969])
            ("lao-transcribe-roman-to-lao-string" function (:prototype-flag t) nil [607971 608112])
            ("lao-composition-function" function (:prototype-flag t) nil [608114 608189])
            ("lao-compose-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [608191 608258])
            ("latex-inputenc-coding-alist" variable (:default-value (purecopy (quote (("ansinew" . windows-1252) ("applemac" . mac-roman) ("ascii" . us-ascii) ("cp1250" . windows-1250) ("cp1252" . windows-1252) ("cp1257" . cp1257) ("cp437de" . cp437) ("cp437" . cp437) ("cp850" . cp850) ("cp852" . cp852) ("cp858" . cp858) ("cp865" . cp865) ("latin1" . iso-8859-1) ("latin2" . iso-8859-2) ("latin3" . iso-8859-3) ("latin4" . iso-8859-4) ("latin5" . iso-8859-5) ("latin9" . iso-8859-15) ("next" . next) ("utf8" . utf-8) ("utf8x" . utf-8))))) nil [608413 609122])
            ("custom-autoload" code nil nil [609124 609183])
            ("latexenc-inputenc-to-coding-system" function (:prototype-flag t) nil [609185 609397])
            ("latexenc-coding-system-to-inputenc" function (:prototype-flag t) nil [609399 609606])
            ("latexenc-find-file-coding-system" function (:prototype-flag t) nil [609608 609900])
            ("latin1-display" variable nil nil [610064 610767])
            ("custom-autoload" code nil nil [610769 610820])
            ("latin1-display" function (:prototype-flag t) nil [610822 611163])
            ("latin1-display-ucs-per-lynx" variable nil nil [611165 611500])
            ("custom-autoload" code nil nil [611502 611566])
            ("ld-script-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [611716 611812])
            ("life" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [611929 612194])
            ("push" code nil nil [612303 612362])
            ("linum-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [612364 612687])
            ("global-linum-mode" variable nil nil [612689 612994])
            ("custom-autoload" code nil nil [612996 613044])
            ("global-linum-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [613046 613418])
            ("unload-feature" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [613537 614711])
            ("locate-ls-subdir-switches" variable (:default-value (purecopy "-al")) nil [614824 615023])
            ("custom-autoload" code nil nil [615025 615080])
            ("locate" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [615082 616146])
            ("locate-with-filter" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [616148 616908])
            ("log-edit" function (:prototype-flag t) nil [617032 618272])
            ("log-view-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [618405 618498])
            ("lpr-windows-system" variable (:default-value (memq system-type (quote (ms-dos windows-nt)))) nil [618602 618717])
            ("lpr-lp-system" variable (:default-value (memq system-type (quote (usg-unix-v hpux irix)))) nil [618719 618854])
            ("printer-name" variable (:default-value (and (eq system-type (quote ms-dos)) "PRN")) nil [618856 619670])
            ("custom-autoload" code nil nil [619672 619711])
            ("lpr-switches" variable nil nil [619713 619921])
            ("custom-autoload" code nil nil [619923 619962])
            ("lpr-command" variable (:default-value (purecopy (cond (lpr-windows-system "") (lpr-lp-system "lp") (t "lpr")))) nil [619964 620530])
            ("custom-autoload" code nil nil [620532 620570])
            ("lpr-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [620572 620768])
            ("print-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [620770 621336])
            ("lpr-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [621338 621544])
            ("print-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [621546 622126])
            ("ls-lisp-support-shell-wildcards" variable (:default-value t) nil [622242 622425])
            ("custom-autoload" code nil nil [622427 622489])
            ("lunar-phases" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [622625 622898])
            ("define-obsolete-function-alias" code nil nil [622900 622969])
            ("m4-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [623113 623196])
            ("name-last-kbd-macro" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [623309 623612])
            ("insert-kbd-macro" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [623614 624277])
            ("kbd-macro-query" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [624279 624938])
            ("apply-macro-to-region-lines" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [624940 626407])
            ("define-key" code nil nil [626409 626452])
            ("mail-extract-address-components" function (:prototype-flag t) nil [626592 627515])
            ("what-domain" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [627517 627637])
            ("mail-hist-define-keys" function (:prototype-flag t) nil [627777 627907])
            ("mail-hist-enable" function (:prototype-flag t) nil [627909 627969])
            ("mail-hist-keep-history" variable (:default-value t) nil [627971 628076])
            ("custom-autoload" code nil nil [628078 628133])
            ("mail-hist-put-headers-into-history" function (:prototype-flag t) nil [628135 628423])
            ("mail-use-rfc822" variable nil nil [628566 628744])
            ("custom-autoload" code nil nil [628746 628795])
            ("mail-dont-reply-to-names" variable nil nil [628797 629138])
            ("custom-autoload" code nil nil [629140 629198])
            ("mail-file-babyl-p" function (:prototype-flag t) nil [629200 629306])
            ("mail-quote-printable" function (:prototype-flag t) nil [629308 629662])
            ("mail-quote-printable-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [629664 629916])
            ("mail-unquote-printable" function (:prototype-flag t) nil [629918 630169])
            ("mail-unquote-printable-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [630171 630817])
            ("mail-fetch-field" function (:prototype-flag t) nil [630819 631295])
            ("mail-abbrevs-mode" variable nil nil [631438 631743])
            ("custom-autoload" code nil nil [631745 631798])
            ("mail-abbrevs-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [631800 632329])
            ("mail-abbrevs-setup" function (:prototype-flag t) nil [632331 632437])
            ("build-mail-abbrevs" function (:prototype-flag t) nil [632439 632668])
            ("define-mail-abbrev" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [632670 633112])
            ("mail-complete-style" variable (:default-value (quote angles)) nil [633252 633568])
            ("custom-autoload" code nil nil [633570 633622])
            ("expand-mail-aliases" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [633624 634035])
            ("define-mail-alias" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [634037 634496])
            ("mail-completion-at-point-function" function (:prototype-flag t) nil [634498 634660])
            ("mail-complete" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [634662 634934])
            ("make-obsolete" code nil nil [634936 635009])
            ("mailclient-send-it" function (:prototype-flag t) nil [635151 635365])
            ("makefile-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [635515 638816])
            ("makefile-automake-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [638818 638935])
            ("makefile-gmake-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [638937 639048])
            ("makefile-makepp-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [639050 639163])
            ("makefile-bsdmake-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [639165 639281])
            ("makefile-imake-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [639283 639394])
            ("make-command-summary" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [639510 639684])
            ("defalias" code nil nil [639788 639817])
            ("man" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [639819 641008])
            ("man-follow" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [641010 641135])
            ("Man-bookmark-jump" function (:prototype-flag t) nil [641137 641242])
            ("push" code nil nil [641354 641413])
            ("master-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [641415 641970])
            ("minibuffer-depth-indicate-mode" variable nil nil [642089 642446])
            ("custom-autoload" code nil nil [642448 642512])
            ("minibuffer-depth-indicate-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [642514 643049])
            ("push" code nil nil [643152 643206])
            ("define-mail-user-agent" code nil nil [643330 643451])
            ("message-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [643453 645867])
            ("message-mail" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [645869 646278])
            ("message-news" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [646280 646401])
            ("message-reply" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [646403 646557])
            ("message-wide-reply" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [646559 646697])
            ("message-followup" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [646699 646881])
            ("message-cancel-news" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [646883 647036])
            ("message-supersede" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [647038 647261])
            ("message-recover" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [647263 647381])
            ("message-forward" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [647383 647597])
            ("message-forward-make-body" function (:prototype-flag t) nil [647599 647698])
            ("message-forward-rmail-make-body" function (:prototype-flag t) nil [647700 647788])
            ("message-insinuate-rmail" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [647790 647886])
            ("message-resend" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [647888 647988])
            ("message-bounce" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [647990 648214])
            ("message-mail-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [648216 648373])
            ("message-mail-other-frame" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [648375 648530])
            ("message-news-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [648532 648666])
            ("message-news-other-frame" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [648668 648801])
            ("message-bold-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [648803 649043])
            ("message-unbold-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [649045 649268])
            ("push" code nil nil [649417 649477])
            ("metafont-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [649479 649574])
            ("metapost-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [649576 649671])
            ("metamail-interpret-header" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [649808 649975])
            ("metamail-interpret-body" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [649977 650371])
            ("metamail-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [650373 650785])
            ("metamail-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [650787 651207])
            ("mh-smail" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [651341 651481])
            ("mh-smail-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [651483 651652])
            ("mh-smail-batch" function (:prototype-flag t) nil [651654 652212])
            ("define-mail-user-agent" code nil nil [652214 652343])
            ("mh-user-agent-compose" function (:prototype-flag t) nil [652345 653145])
            ("mh-send-letter" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [653147 654230])
            ("mh-fully-kill-draft" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [654232 654542])
            ("push" code nil nil [654658 654713])
            ("put" code nil nil [654715 654754])
            ("put" code nil nil [654756 654793])
            ("put" code nil nil [654795 654838])
            ("mh-version" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [654840 654958])
            ("mh-rmail" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [655098 655313])
            ("mh-nmail" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [655315 655536])
            ("mh-folder-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [655538 657279])
            ("clean-buffer-list" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [657398 658020])
            ("midnight-delay-set" function (:prototype-flag t) nil [658022 658241])
            ("minibuffer-electric-default-mode" variable nil nil [658383 658748])
            ("custom-autoload" code nil nil [658750 658821])
            ("minibuffer-electric-default-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [658823 659498])
            ("butterfly" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [659605 660179])
            ("list-dynamic-libraries" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [660181 660625])
            ("add-hook" code nil nil [660744 660794])
            ("multi-isearch-next-buffer-function" variable nil nil [660796 661835])
            ("multi-isearch-next-buffer-current-function" variable nil nil [661837 662035])
            ("multi-isearch-current-buffer" variable nil nil [662037 662199])
            ("multi-isearch-setup" function (:prototype-flag t) nil [662201 662350])
            ("multi-isearch-buffers" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [662352 662696])
            ("multi-isearch-buffers-regexp" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [662698 663056])
            ("multi-isearch-files" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [663058 663483])
            ("multi-isearch-files-regexp" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [663485 663924])
            ("push" code nil nil [664076 664137])
            ("mixal-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [664139 664230])
            ("mm-default-file-encoding" function (:prototype-flag t) nil [664370 664478])
            ("mm-extern-cache-contents" function (:prototype-flag t) nil [664618 664745])
            ("mm-inline-external-body" function (:prototype-flag t) nil [664747 665040])
            ("mm-inline-partial" function (:prototype-flag t) nil [665183 665465])
            ("mm-url-insert-file-contents" function (:prototype-flag t) nil [665588 665747])
            ("mm-url-insert-file-contents-external" function (:prototype-flag t) nil [665749 665881])
            ("mm-uu-dissect" function (:prototype-flag t) nil [666001 666307])
            ("mm-uu-dissect-text-parts" function (:prototype-flag t) nil [666309 666500])
            ("mml-to-mime" function (:prototype-flag t) nil [666614 666709])
            ("mml-attach-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [666711 667408])
            ("mml1991-encrypt" function (:prototype-flag t) nil [667542 667619])
            ("mml1991-sign" function (:prototype-flag t) nil [667621 667680])
            ("mml2015-decrypt" function (:prototype-flag t) nil [667814 667882])
            ("mml2015-decrypt-test" function (:prototype-flag t) nil [667884 667957])
            ("mml2015-verify" function (:prototype-flag t) nil [667959 668026])
            ("mml2015-verify-test" function (:prototype-flag t) nil [668028 668100])
            ("mml2015-encrypt" function (:prototype-flag t) nil [668102 668179])
            ("mml2015-sign" function (:prototype-flag t) nil [668181 668240])
            ("mml2015-self-encrypt" function (:prototype-flag t) nil [668242 668304])
            ("put" code nil nil [668449 668502])
            ("defalias" code nil nil [668646 668680])
            ("m2-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [668682 669828])
            ("morse-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [669948 670055])
            ("unmorse-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [670057 670175])
            ("nato-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [670177 670295])
            ("denato-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [670297 670420])
            ("mouse-drag-throw" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [670553 671490])
            ("mouse-drag-drag" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [671492 672109])
            ("mpc" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [672213 672277])
            ("mpuz" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [672394 672472])
            ("msb-mode" variable nil nil [672576 672845])
            ("custom-autoload" code nil nil [672847 672884])
            ("msb-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [672886 673234])
            ("list-character-sets" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [673392 673886])
            ("read-charset" function (:prototype-flag t) nil [673888 674418])
            ("list-charset-chars" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [674420 674542])
            ("describe-character-set" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [674544 674673])
            ("describe-coding-system" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [674675 674793])
            ("describe-current-coding-system-briefly" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [674795 675969])
            ("describe-current-coding-system" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [675971 676092])
            ("list-coding-systems" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [676094 676400])
            ("list-coding-categories" function (:prototype-flag t) nil [676402 676508])
            ("describe-font" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [676510 676670])
            ("describe-fontset" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [676672 676826])
            ("list-fontsets" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [676828 677100])
            ("list-input-methods" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [677102 677206])
            ("mule-diag" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [677208 677541])
            ("font-show-log" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [677543 677782])
            ("string-to-list" function (:arguments ("string")) nil [677940 678037])
            ("string-to-vector" function (:arguments ("string")) nil [678039 678137])
            ("store-substring" function (:prototype-flag t) nil [678139 678268])
            ("truncate-string-to-width" function (:prototype-flag t) nil [678270 679517])
            ("nested-alist-p" function (:arguments ("obj")) nil [679519 679974])
            ("set-nested-alist" function (:prototype-flag t) nil [679976 680354])
            ("lookup-nested-alist" function (:prototype-flag t) nil [680356 680999])
            ("coding-system-post-read-conversion" function (:prototype-flag t) nil [681001 681161])
            ("coding-system-pre-write-conversion" function (:prototype-flag t) nil [681163 681323])
            ("coding-system-translation-table-for-decode" function (:prototype-flag t) nil [681325 681497])
            ("coding-system-translation-table-for-encode" function (:prototype-flag t) nil [681499 681671])
            ("with-coding-priority" function (:prototype-flag t) nil [681673 682038])
            ("put" code nil nil [682039 682090])
            ("detect-coding-with-priority" function (:prototype-flag t) nil [682092 682361])
            ("make-obsolete" code nil nil [682363 682437])
            ("detect-coding-with-language-environment" function (:prototype-flag t) nil [682439 682710])
            ("char-displayable-p" function (:prototype-flag t) nil [682712 683064])
            ("ifconfig" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [683202 683295])
            ("iwconfig" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [683297 683390])
            ("netstat" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [683392 683483])
            ("arp" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [683485 683568])
            ("route" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [683570 683657])
            ("traceroute" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [683659 683752])
            ("ping" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [683754 683910])
            ("nslookup-host" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [683912 684008])
            ("nslookup" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [684010 684081])
            ("dns-lookup-host" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [684083 684202])
            ("run-dig" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [684204 684274])
            ("ftp" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [684276 684342])
            ("finger" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [684344 684422])
            ("whois" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [684424 684697])
            ("whois-reverse-lookup" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [684699 684761])
            ("network-connection-to-service" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [684763 684892])
            ("network-connection" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [684894 685006])
            ("netrc-credentials" function (:prototype-flag t) nil [685124 685322])
            ("open-network-stream" function (:prototype-flag t) nil [685475 689326])
            ("defalias" code nil nil [689328 689381])
            ("newsticker-running-p" function (:prototype-flag t) nil [689531 689768])
            ("newsticker-start" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [689770 690133])
            ("newsticker-plainview" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [690289 690384])
            ("newsticker-show-news" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [690531 690652])
            ("newsticker-ticker-running-p" function (:prototype-flag t) nil [690799 691054])
            ("newsticker-start-ticker" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [691056 691256])
            ("newsticker-treeview" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [691409 691501])
            ("push" code nil nil [691641 691703])
            ("nndiary-generate-nov-databases" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [691837 691974])
            ("nndoc-add-type" function (:prototype-flag t) nil [692094 692442])
            ("nnfolder-generate-active-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [692579 692780])
            ("push" code nil nil [692916 692975])
            ("nnml-generate-nov-databases" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [693092 693220])
            ("define-obsolete-variable-alias" code nil nil [693333 693422])
            ("disabled-command-function" variable (:default-value (quote disabled-command-function)) nil [693424 693602])
            ("disabled-command-function" function (:prototype-flag t) nil [693604 693689])
            ("enable-command" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [693691 693935])
            ("disable-command" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [693937 694168])
            ("nroff-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [694321 694642])
            ("push" code nil nil [694756 694811])
            ("nxml-glyph-display-string" function (:prototype-flag t) nil [694954 695215])
            ("nxml-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [695354 697902])
            ("defalias" code nil nil [697904 697935])
            ("nxml-enable-unicode-char-name-sets" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [698078 698319])
            ("octave-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [698459 698905])
            ("inferior-octave" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [698907 699474])
            ("defalias" code nil nil [699476 699515])
            ("define-obsolete-function-alias" code nil nil [699659 699725])
            ("opascal-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [699727 700906])
            ("org-babel-do-load-languages" function (:prototype-flag t) nil [701018 701150])
            ("org-babel-load-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [701152 701517])
            ("org-version" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [701519 701797])
            ("turn-on-orgtbl" function (:prototype-flag t) nil [701799 701889])
            ("org-clock-persistence-insinuate" function (:prototype-flag t) nil [701891 701995])
            ("org-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [701997 702876])
            ("org-cycle" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [702878 705205])
            ("org-global-cycle" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [705207 705461])
            ("put" code nil nil [705462 705530])
            ("orgstruct-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [705532 705844])
            ("turn-on-orgstruct" function (:prototype-flag t) nil [705846 705942])
            ("turn-on-orgstruct++" function (:prototype-flag t) nil [705944 706044])
            ("org-run-like-in-org-mode" function (:prototype-flag t) nil [706046 706327])
            ("org-store-link" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [706329 706897])
            ("org-insert-link-global" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [706899 707066])
            ("org-open-at-point-global" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [707068 707243])
            ("org-open-link-from-string" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [707245 707393])
            ("org-switchb" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [707395 707726])
            ("defalias" code nil nil [707728 707768])
            ("defalias" code nil nil [707770 707807])
            ("org-cycle-agenda-files" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [707809 708049])
            ("org-submit-bug-report" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [708051 708408])
            ("org-reload" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [708410 708561])
            ("org-customize" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [708563 708661])
            ("org-toggle-sticky-agenda" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [708802 708910])
            ("org-agenda" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [708912 710690])
            ("org-batch-agenda" function (:prototype-flag t) nil [710692 711130])
            ("org-batch-agenda-csv" function (:prototype-flag t) nil [711132 712914])
            ("org-store-agenda-views" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [712916 713017])
            ("org-batch-store-agenda-views" function (:prototype-flag t) nil [713019 713164])
            ("org-agenda-list" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [713166 713886])
            ("org-search-view" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [713888 716210])
            ("org-todo-list" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [716212 716592])
            ("org-tags-view" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [716594 716808])
            ("org-agenda-list-stuck-projects" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [716810 717114])
            ("org-diary" function (:prototype-flag t) nil [717116 718279])
            ("org-agenda-check-for-timestamp-as-reason-to-ignore-todo-item" function (:prototype-flag t) nil [718281 718474])
            ("org-agenda-set-restriction-lock" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [718476 718829])
            ("org-calendar-goto-agenda" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [718831 719039])
            ("org-agenda-to-appt" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [719041 720281])
            ("org-capture-string" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [720425 720559])
            ("org-capture" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [720561 721777])
            ("org-capture-import-remember-templates" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [721779 721930])
            ("org-columns-remove-overlays" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [722074 722189])
            ("org-columns-get-format-and-top-level" function (:prototype-flag t) nil [722191 722273])
            ("org-columns" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [722275 722464])
            ("org-columns-compute" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [722466 722612])
            ("org-columns-number-to-string" function (:prototype-flag t) nil [722614 722780])
            ("org-dblock-write:columnview" function (:prototype-flag t) nil [722782 723820])
            ("org-insert-columns-dblock" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [723822 723944])
            ("org-agenda-columns" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [723946 724052])
            ("org-check-version" function (:prototype-flag t) nil [724193 724303])
            ("org-load-noerror-mustsuffix" function (:prototype-flag t) nil [724438 724638])
            ("org-release" function (:prototype-flag t) nil [724782 724932])
            ("org-git-version" function (:prototype-flag t) nil [724934 725084])
            ("org-odt-data-dir" variable (:default-value "/usr/share/emacs/etc/org") nil [725086 725170])
            ("put" code nil nil [725285 725336])
            ("put" code nil nil [725337 725400])
            ("outline-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [725402 727597])
            ("outline-minor-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [727599 727928])
            ("put" code nil nil [727929 727973])
            ("push" code nil nil [728117 728177])
            ("package-enable-at-startup" variable (:default-value t) nil [728179 728566])
            ("custom-autoload" code nil nil [728568 728624])
            ("package-install" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [728626 728859])
            ("package-install-from-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [728861 729157])
            ("package-install-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [729159 729311])
            ("package-import-keyring" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [729313 729412])
            ("package-refresh-contents" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [729414 729627])
            ("package-initialize" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [729629 729884])
            ("describe-package" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [729886 730003])
            ("list-packages" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [730005 730273])
            ("defalias" code nil nil [730275 730323])
            ("show-paren-mode" variable nil nil [730433 730730])
            ("custom-autoload" code nil nil [730732 730778])
            ("show-paren-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [730780 731237])
            ("put" code nil nil [731387 731434])
            ("parse-time-string" function (:prototype-flag t) nil [731436 731683])
            ("pascal-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [731824 733930])
            ("password-cache" variable (:default-value t) nil [734075 734132])
            ("custom-autoload" code nil nil [734134 734186])
            ("password-cache-expiry" variable (:default-value 16) nil [734188 734363])
            ("custom-autoload" code nil nil [734365 734424])
            ("password-in-cache-p" function (:prototype-flag t) nil [734426 734527])
            ("pcase" function (:prototype-flag t) nil [734667 736349])
            ("put" code nil nil [736351 736388])
            ("pcase-let*" function (:prototype-flag t) nil [736390 736618])
            ("put" code nil nil [736620 736662])
            ("pcase-let" function (:prototype-flag t) nil [736664 736898])
            ("put" code nil nil [736900 736941])
            ("pcomplete/cvs" function (:prototype-flag t) nil [737063 737159])
            ("pcomplete/gzip" function (:prototype-flag t) nil [737281 737361])
            ("pcomplete/bzip2" function (:prototype-flag t) nil [737363 737445])
            ("pcomplete/make" function (:prototype-flag t) nil [737447 737531])
            ("pcomplete/tar" function (:prototype-flag t) nil [737533 737625])
            ("defalias" code nil nil [737627 737669])
            ("pcomplete/kill" function (:prototype-flag t) nil [737805 737921])
            ("pcomplete/umount" function (:prototype-flag t) nil [737923 738019])
            ("pcomplete/mount" function (:prototype-flag t) nil [738021 738115])
            ("pcomplete/rpm" function (:prototype-flag t) nil [738237 738327])
            ("pcomplete/cd" function (:prototype-flag t) nil [738460 738537])
            ("defalias" code nil nil [738539 738580])
            ("pcomplete/rmdir" function (:prototype-flag t) nil [738582 738665])
            ("pcomplete/rm" function (:prototype-flag t) nil [738667 738744])
            ("pcomplete/xargs" function (:prototype-flag t) nil [738746 738829])
            ("defalias" code nil nil [738831 738874])
            ("pcomplete/which" function (:prototype-flag t) nil [738876 738959])
            ("pcomplete/chown" function (:prototype-flag t) nil [738961 739056])
            ("pcomplete/chgrp" function (:prototype-flag t) nil [739058 739153])
            ("pcomplete/ssh" function (:prototype-flag t) nil [739155 739252])
            ("pcomplete/scp" function (:prototype-flag t) nil [739254 739409])
            ("pcomplete/tlmgr" function (:prototype-flag t) nil [739525 739617])
            ("pcomplete/ack" function (:prototype-flag t) nil [739619 739787])
            ("defalias" code nil nil [739789 739834])
            ("pcomplete/ag" function (:prototype-flag t) nil [739836 739922])
            ("pcomplete" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [740044 740301])
            ("pcomplete-reverse" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [740303 740411])
            ("pcomplete-expand-and-complete" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [740413 740570])
            ("pcomplete-continue" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [740572 740686])
            ("pcomplete-expand" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [740688 740832])
            ("pcomplete-help" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [740834 740952])
            ("pcomplete-list" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [740954 741073])
            ("pcomplete-comint-setup" function (:prototype-flag t) nil [741075 741346])
            ("pcomplete-shell-setup" function (:prototype-flag t) nil [741348 741449])
            ("cvs-checkout" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [741562 741829])
            ("cvs-quickdir" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [741831 742211])
            ("cvs-examine" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [742213 742721])
            ("cvs-update" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [742723 743175])
            ("cvs-status" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [743177 743622])
            ("cvs-dired-action" variable (:default-value (quote cvs-quickdir)) nil [743624 743792])
            ("custom-autoload" code nil nil [743794 743838])
            ("cvs-dired-use-hook" variable (:default-value (quote (4))) nil [743840 744169])
            ("custom-autoload" code nil nil [744171 744217])
            ("cvs-dired-noselect" function (:arguments ("dir")) nil [744219 744753])
            ("cvs-global-menu" variable (:default-value (let ((m (make-sparse-keymap "PCL-CVS"))) (define-key m [status] (\` (menu-item (\, (purecopy "Directory Status")) cvs-status :help (\, (purecopy "A more verbose status of a workarea"))))) (define-key m [checkout] (\` (menu-item (\, (purecopy "Checkout Module")) cvs-checkout :help (\, (purecopy "Check out a module from the repository"))))) (define-key m [update] (\` (menu-item (\, (purecopy "Update Directory")) cvs-update :help (\, (purecopy "Fetch updates from the repository"))))) (define-key m [examine] (\` (menu-item (\, (purecopy "Examine Directory")) cvs-examine :help (\, (purecopy "Examine the current state of a workarea"))))) (fset (quote cvs-global-menu) m))) nil [744889 745566])
            ("put" code nil nil [745715 745770])
            ("put" code nil nil [745771 745840])
            ("put" code nil nil [745841 745906])
            ("put" code nil nil [745907 745962])
            ("put" code nil nil [745963 746028])
            ("put" code nil nil [746029 746084])
            ("perl-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [746086 748292])
            ("picture-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [748436 752194])
            ("defalias" code nil nil [752196 752234])
            ("plstore-open" function (:prototype-flag t) nil [752368 752474])
            ("plstore-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [752476 752565])
            ("po-find-file-coding-system" function (:prototype-flag t) nil [752686 752906])
            ("pong" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [753023 753273])
            ("pop3-movemail" function (:prototype-flag t) nil [753390 753525])
            ("pp-to-string" function (:prototype-flag t) nil [753648 753911])
            ("pp-buffer" function (:prototype-flag t) nil [753913 754032])
            ("pp" function (:prototype-flag t) nil [754034 754340])
            ("pp-eval-expression" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [754342 754523])
            ("pp-macroexpand-expression" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [754525 754646])
            ("pp-eval-last-sexp" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [754648 754842])
            ("pp-macroexpand-last-sexp" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [754844 755052])
            ("push" code nil nil [755170 755231])
            ("pr-interface" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [755233 755453])
            ("pr-ps-directory-preview" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [755455 756304])
            ("pr-ps-directory-using-ghostscript" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [756306 757184])
            ("pr-ps-directory-print" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [757186 758040])
            ("pr-ps-directory-ps-print" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [758042 758967])
            ("pr-ps-buffer-preview" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [758969 759607])
            ("pr-ps-buffer-using-ghostscript" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [759609 760267])
            ("pr-ps-buffer-print" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [760269 760903])
            ("pr-ps-buffer-ps-print" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [760905 761610])
            ("pr-ps-region-preview" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [761612 761762])
            ("pr-ps-region-using-ghostscript" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [761764 761953])
            ("pr-ps-region-print" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [761955 762108])
            ("pr-ps-region-ps-print" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [762110 762292])
            ("pr-ps-mode-preview" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [762294 762446])
            ("pr-ps-mode-using-ghostscript" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [762448 762639])
            ("pr-ps-mode-print" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [762641 762796])
            ("pr-ps-mode-ps-print" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [762798 762974])
            ("pr-printify-directory" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [762976 763539])
            ("pr-printify-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [763541 763822])
            ("pr-printify-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [763824 764105])
            ("pr-txt-directory" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [764107 764475])
            ("pr-txt-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [764477 764563])
            ("pr-txt-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [764565 764651])
            ("pr-txt-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [764653 764741])
            ("pr-despool-preview" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [764743 765234])
            ("pr-despool-using-ghostscript" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [765236 765744])
            ("pr-despool-print" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [765746 766242])
            ("pr-despool-ps-print" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [766244 766774])
            ("pr-ps-file-preview" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [766776 766877])
            ("pr-ps-file-up-preview" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [766879 767009])
            ("pr-ps-file-using-ghostscript" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [767011 767138])
            ("pr-ps-file-print" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [767140 767237])
            ("pr-ps-file-ps-print" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [767239 767380])
            ("pr-ps-file-up-ps-print" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [767382 768299])
            ("pr-toggle-file-duplex" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [768301 768397])
            ("pr-toggle-file-tumble" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [768399 768657])
            ("pr-toggle-file-landscape" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [768659 768761])
            ("pr-toggle-ghostscript" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [768763 768859])
            ("pr-toggle-faces" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [768861 768944])
            ("pr-toggle-spool" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [768946 769018])
            ("pr-toggle-duplex" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [769020 769091])
            ("pr-toggle-tumble" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [769093 769326])
            ("pr-toggle-landscape" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [769328 769405])
            ("pr-toggle-upside-down" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [769407 769488])
            ("pr-toggle-line" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [769490 769564])
            ("pr-toggle-zebra" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [769566 769643])
            ("pr-toggle-header" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [769645 769725])
            ("pr-toggle-header-frame" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [769727 769819])
            ("pr-toggle-lock" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [769821 769893])
            ("pr-toggle-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [769895 770004])
            ("pr-toggle-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [770006 770078])
            ("pr-customize" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [770080 770184])
            ("lpr-customize" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [770186 770286])
            ("pr-help" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [770288 770379])
            ("pr-ps-name" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [770381 770474])
            ("pr-txt-name" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [770476 770564])
            ("pr-ps-utility" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [770566 770662])
            ("pr-show-ps-setup" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [770664 770765])
            ("pr-show-pr-setup" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [770767 770868])
            ("pr-show-lpr-setup" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [770870 770967])
            ("pr-ps-fast-fire" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [770969 773481])
            ("pr-txt-fast-fire" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [773483 774473])
            ("proced" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [774586 774942])
            ("profiler-start" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [775061 775335])
            ("profiler-find-profile" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [775337 775430])
            ("profiler-find-profile-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [775432 775538])
            ("profiler-find-profile-other-frame" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [775540 775645])
            ("prolog-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [775786 776193])
            ("mercury-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [776195 776334])
            ("run-prolog" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [776336 776530])
            ("bdf-directory-list" variable (:default-value (if (memq system-type (quote (ms-dos windows-nt))) (list (expand-file-name "fonts/bdf" installation-directory)) (quote ("/usr/local/share/emacs/fonts/bdf")))) nil [776643 776932])
            ("custom-autoload" code nil nil [776934 776982])
            ("push" code nil nil [777125 777185])
            ("ps-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [777187 778288])
            ("push" code nil nil [778406 778467])
            ("ps-page-dimensions-database" variable (:default-value (purecopy (list (list (quote a4) (/ (* 72 21.0) 2.54) (/ (* 72 29.7) 2.54) "A4") (list (quote a3) (/ (* 72 29.7) 2.54) (/ (* 72 42.0) 2.54) "A3") (list (quote letter) (* 72 8.5) (* 72 11.0) "Letter") (list (quote legal) (* 72 8.5) (* 72 14.0) "Legal") (list (quote letter-small) (* 72 7.68) (* 72 10.16) "LetterSmall") (list (quote tabloid) (* 72 11.0) (* 72 17.0) "Tabloid") (list (quote ledger) (* 72 17.0) (* 72 11.0) "Ledger") (list (quote statement) (* 72 5.5) (* 72 8.5) "Statement") (list (quote executive) (* 72 7.5) (* 72 10.0) "Executive") (list (quote a4small) (* 72 7.47) (* 72 10.85) "A4Small") (list (quote b4) (* 72 10.125) (* 72 14.33) "B4") (list (quote b5) (* 72 7.16) (* 72 10.125) "B5") (quote (addresslarge 236.0 99.0 "AddressLarge")) (quote (addresssmall 236.0 68.0 "AddressSmall")) (quote (cuthanging13 90.0 222.0 "CutHanging13")) (quote (cuthanging15 90.0 114.0 "CutHanging15")) (quote (diskette 181.0 136.0 "Diskette")) (quote (eurofilefolder 139.0 112.0 "EuropeanFilefolder")) (quote (eurofoldernarrow 526.0 107.0 "EuroFolderNarrow")) (quote (eurofolderwide 526.0 136.0 "EuroFolderWide")) (quote (euronamebadge 189.0 108.0 "EuroNameBadge")) (quote (euronamebadgelarge 223.0 136.0 "EuroNameBadgeLarge")) (quote (filefolder 230.0 37.0 "FileFolder")) (quote (jewelry 76.0 136.0 "Jewelry")) (quote (mediabadge 180.0 136.0 "MediaBadge")) (quote (multipurpose 126.0 68.0 "MultiPurpose")) (quote (retaillabel 90.0 104.0 "RetailLabel")) (quote (shipping 271.0 136.0 "Shipping")) (quote (slide35mm 26.0 104.0 "Slide35mm")) (quote (spine8mm 187.0 26.0 "Spine8mm")) (quote (topcoated 425.19685 136.0 "TopCoatedPaper")) (quote (topcoatedpaper 396.0 136.0 "TopcoatedPaper150")) (quote (vhsface 205.0 127.0 "VHSFace")) (quote (vhsspine 400.0 50.0 "VHSSpine")) (quote (zipdisk 156.0 136.0 "ZipDisk"))))) nil [778469 780174])
            ("custom-autoload" code nil nil [780176 780235])
            ("ps-paper-type" variable (:default-value (quote letter)) nil [780237 780426])
            ("custom-autoload" code nil nil [780428 780473])
            ("ps-print-color-p" variable (:default-value (or (fboundp (quote x-color-values)) (fboundp (quote color-instance-rgb-components)))) nil [780475 780812])
            ("custom-autoload" code nil nil [780814 780862])
            ("ps-print-customize" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [780864 780955])
            ("ps-print-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [780957 781472])
            ("ps-print-buffer-with-faces" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [781474 781814])
            ("ps-print-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [781816 782011])
            ("ps-print-region-with-faces" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [782013 782361])
            ("ps-spool-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [782363 782660])
            ("ps-spool-buffer-with-faces" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [782662 783068])
            ("ps-spool-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [783070 783327])
            ("ps-spool-region-with-faces" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [783329 783739])
            ("ps-despool" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [783741 784250])
            ("ps-line-lengths" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [784252 784490])
            ("ps-nb-pages-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [784492 784680])
            ("ps-nb-pages-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [784682 784869])
            ("ps-setup" function (:prototype-flag t) nil [784871 784969])
            ("ps-extend-face-list" function (:prototype-flag t) nil [784971 785468])
            ("ps-extend-face" function (:prototype-flag t) nil [785470 786557])
            ("push" code nil nil [786678 786734])
            ("push" code nil nil [786874 786934])
            ("add-to-list" code nil nil [786936 787008])
            ("add-to-list" code nil nil [787010 787094])
            ("run-python" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [787096 787735])
            ("python-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [787737 787844])
            ("quoted-printable-decode-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [787955 788497])
            ("quail-title" function (:prototype-flag t) nil [788643 788740])
            ("quail-use-package" function (:prototype-flag t) nil [788742 789037])
            ("quail-define-package" function (:prototype-flag t) nil [789039 793216])
            ("quail-set-keyboard-layout" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [793218 793656])
            ("quail-show-keyboard-layout" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [793658 793893])
            ("quail-define-rules" function (:prototype-flag t) nil [793895 795366])
            ("quail-install-map" function (:prototype-flag t) nil [795368 795652])
            ("quail-install-decode-map" function (:prototype-flag t) nil [795654 795980])
            ("quail-defrule" function (:prototype-flag t) nil [795982 797250])
            ("quail-defrule-internal" function (:prototype-flag t) nil [797252 797690])
            ("quail-update-leim-list-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [797692 798267])
            ("hangul-input-method-activate" function (:prototype-flag t) nil [798416 798672])
            ("ucs-input-activate" function (:prototype-flag t) nil [798830 799124])
            ("quickurl-reread-hook-postfix" variable
               (:constant-flag t
                :default-value "
;; Local Variables:
;; eval: (progn (require 'quickurl) (add-hook 'local-write-file-hooks (lambda () (quickurl-read) nil)))
;; End:
")
                nil [799259 799780])
            ("quickurl" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [799782 800030])
            ("quickurl-ask" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [800032 800153])
            ("quickurl-add-url" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [800155 800385])
            ("quickurl-browse-url" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [800387 800655])
            ("quickurl-browse-url-ask" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [800657 800798])
            ("quickurl-edit-urls" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [800800 800915])
            ("quickurl-list-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [800917 801094])
            ("quickurl-list" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [801096 801221])
            ("rcirc" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [801339 801551])
            ("defalias" code nil nil [801553 801575])
            ("rcirc-connect" function (:prototype-flag t) nil [801577 801714])
            ("rcirc-track-minor-mode" variable nil nil [801716 802041])
            ("custom-autoload" code nil nil [802043 802096])
            ("rcirc-track-minor-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [802098 802383])
            ("defalias" code nil nil [802538 802576])
            ("re-builder" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [802578 802966])
            ("recentf-mode" variable nil nil [803082 803367])
            ("custom-autoload" code nil nil [803369 803414])
            ("recentf-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [803416 803838])
            ("delete-rectangle" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [803945 804373])
            ("delete-extract-rectangle" function (:prototype-flag t) nil [804375 804750])
            ("extract-rectangle" function (:prototype-flag t) nil [804752 804953])
            ("kill-rectangle" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [804955 805598])
            ("copy-rectangle-as-kill" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [805600 805730])
            ("yank-rectangle" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [805732 805846])
            ("insert-rectangle" function (:prototype-flag t) nil [805848 806219])
            ("open-rectangle" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [806221 806655])
            ("defalias" code nil nil [806657 806713])
            ("delete-whitespace-rectangle" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [806715 807206])
            ("string-rectangle" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [807208 807461])
            ("defalias" code nil nil [807463 807510])
            ("string-insert-rectangle" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [807512 807857])
            ("clear-rectangle" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [807859 808203])
            ("rectangle-number-lines" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [808205 808597])
            ("rectangle-mark-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [808599 808779])
            ("refill-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [808920 809435])
            ("turn-on-reftex" function (:prototype-flag t) nil [809576 809651])
            ("reftex-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [809653 811064])
            ("reftex-reset-scanning-information" function (:prototype-flag t) nil [811066 811251])
            ("reftex-citation" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [811407 812507])
            ("reftex-isearch-minor-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [812669 813095])
            ("reftex-index-phrases-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [813254 814197])
            ("reftex-all-document-files" function (:prototype-flag t) nil [814356 814588])
            ("put" code nil nil [814743 814835])
            ("put" code nil nil [814836 814928])
            ("put" code nil nil [814929 814986])
            ("put" code nil nil [814987 815069])
            ("regexp-opt" function (:prototype-flag t) nil [815224 815977])
            ("regexp-opt-depth" function (:prototype-flag t) nil [815979 816174])
            ("push" code nil nil [816310 816365])
            ("push" code nil nil [816511 816570])
            ("remember" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [816572 816849])
            ("remember-other-frame" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [816851 816963])
            ("remember-clipboard" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [816965 817131])
            ("remember-diary-extract-entries" function (:prototype-flag t) nil [817133 817244])
            ("remember-notes" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [817246 818368])
            ("push" code nil nil [818480 818538])
            ("repeat" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [818540 819228])
            ("reporter-submit-bug-report" function (:prototype-flag t) nil [819364 820570])
            ("reposition-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [820703 821833])
            ("reveal-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [821946 822329])
            ("global-reveal-mode" variable nil nil [822331 822640])
            ("custom-autoload" code nil nil [822642 822692])
            ("global-reveal-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [822694 823048])
            ("ring-p" function (:prototype-flag t) nil [823185 823271])
            ("make-ring" function (:prototype-flag t) nil [823273 823369])
            ("rlogin" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [823490 825215])
            ("rmail-file-name" variable (:default-value (purecopy "~/RMAIL")) nil [825334 825417])
            ("custom-autoload" code nil nil [825419 825463])
            ("put" code nil nil [825465 825698])
            ("rmail-spool-directory" variable (:default-value (purecopy (cond ((file-exists-p "/var/mail") "/var/mail/") ((file-exists-p "/var/spool/mail") "/var/spool/mail/") ((memq system-type (quote (hpux usg-unix-v irix))) "/usr/mail/") (t "/usr/spool/mail/")))) nil [825700 826030])
            ("custom-autoload" code nil nil [826032 826082])
            ("custom-initialize-delay" code nil nil [826083 826135])
            ("rmail-movemail-variant-p" function (:prototype-flag t) nil [826137 826328])
            ("rmail-user-mail-address-regexp" variable nil nil [826330 826950])
            ("custom-autoload" code nil nil [826952 827011])
            ("define-obsolete-variable-alias" code nil nil [827013 827105])
            ("rmail-default-dont-reply-to-names" variable nil nil [827107 827311])
            ("make-obsolete-variable" code nil nil [827313 827405])
            ("rmail-ignored-headers" variable (:default-value (purecopy (concat "^via:\\|^mail-from:\\|^origin:\\|^references:\\|^sender:" "\\|^status:\\|^received:\\|^x400-originator:\\|^x400-recipients:" "\\|^x400-received:\\|^x400-mts-identifier:\\|^x400-content-type:" "\\|^\\(resent-\\|\\)message-id:\\|^summary-line:\\|^resent-date:" "\\|^nntp-posting-host:\\|^path:\\|^x-char.*:\\|^x-face:\\|^face:" "\\|^x-mailer:\\|^delivered-to:\\|^lines:" "\\|^content-transfer-encoding:\\|^x-coding-system:" "\\|^return-path:\\|^errors-to:\\|^return-receipt-to:" "\\|^precedence:\\|^mime-version:" "\\|^list-owner:\\|^list-help:\\|^list-post:\\|^list-subscribe:" "\\|^list-id:\\|^list-unsubscribe:\\|^list-archive:" "\\|^content-length:\\|^nntp-posting-date:\\|^user-agent" "\\|^importance:\\|^envelope-to:\\|^delivery-date\\|^openpgp:" "\\|^mbox-line:\\|^cancel-lock:" "\\|^DomainKey-Signature:\\|^dkim-signature:" "\\|^resent-face:\\|^resent-x.*:\\|^resent-organization:\\|^resent-openpgp:" "\\|^x-.*:"))) nil [827407 828822])
            ("custom-autoload" code nil nil [828824 828874])
            ("rmail-displayed-headers" variable nil nil [828876 829056])
            ("custom-autoload" code nil nil [829058 829110])
            ("rmail-retry-ignored-headers" variable (:default-value (purecopy "^x-authentication-warning:\\|^x-detected-operating-system:\\|^x-spam[-a-z]*:\\|content-type:\\|content-transfer-encoding:\\|mime-version:\\|message-id:")) nil [829112 829381])
            ("custom-autoload" code nil nil [829383 829439])
            ("rmail-highlighted-headers" variable (:default-value (purecopy "^From:\\|^Subject:")) nil [829441 829651])
            ("custom-autoload" code nil nil [829653 829707])
            ("rmail-primary-inbox-list" variable nil nil [829709 830072])
            ("custom-autoload" code nil nil [830074 830127])
            ("rmail-secondary-file-directory" variable (:default-value (purecopy "~/")) nil [830129 830236])
            ("custom-autoload" code nil nil [830238 830297])
            ("rmail-secondary-file-regexp" variable (:default-value (purecopy "\\.xmail$")) nil [830299 830412])
            ("custom-autoload" code nil nil [830414 830470])
            ("rmail-mode-hook" variable nil nil [830472 830553])
            ("rmail-show-message-hook" variable nil nil [830555 830652])
            ("custom-autoload" code nil nil [830654 830706])
            ("rmail-file-coding-system" variable nil nil [830708 830815])
            ("rmail-insert-mime-forwarded-message-function" variable nil nil [830817 831189])
            ("rmail" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [831191 831772])
            ("rmail-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [831774 835117])
            ("rmail-input" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [835119 835204])
            ("rmail-set-remote-password" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [835206 835348])
            ("put" code nil nil [835484 835538])
            ("rmail-output" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [835540 836800])
            ("rmail-output-as-seen" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [836802 837352])
            ("rmail-output-body-to-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [837354 837938])
            ("rng-c-load-schema" function (:prototype-flag t) nil [838078 838221])
            ("rng-nxml-mode-init" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [838358 838601])
            ("rng-validate-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [838741 840039])
            ("put" code nil nil [840173 840257])
            ("rng-xsd-compile" function (:prototype-flag t) nil [840259 841346])
            ("robin-define-package" function (:prototype-flag t) nil [841492 841935])
            ("robin-modify-package" function (:prototype-flag t) nil [841937 842223])
            ("robin-use-package" function (:prototype-flag t) nil [842225 842337])
            ("rot13" function (:prototype-flag t) nil [842447 842573])
            ("rot13-string" function (:prototype-flag t) nil [842575 842668])
            ("rot13-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [842670 842795])
            ("rot13-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [842797 843169])
            ("toggle-rot13-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [843171 843282])
            ("add-to-list" code nil nil [843406 843475])
            ("rst-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [843477 843739])
            ("rst-minor-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [843741 844158])
            ("push" code nil nil [844307 844367])
            ("ruby-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [844369 844472])
            ("add-to-list" code nil nil [844474 844689])
            ("dolist" code nil nil [844691 844826])
            ("push" code nil nil [844958 845019])
            ("ruler-mode" variable nil nil [845021 845136])
            ("ruler-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [845138 845413])
            ("rx-to-string" function (:prototype-flag t) nil [845536 845766])
            ("rx" function (:prototype-flag t) nil [845768 854325])
            ("push" code nil nil [854462 854517])
            ("push" code nil nil [854635 854693])
            ("savehist-mode" variable nil nil [854695 854984])
            ("custom-autoload" code nil nil [854986 855033])
            ("savehist-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [855035 855716])
            ("scheme-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [855857 856688])
            ("dsssl-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [856690 857136])
            ("gnus-score-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [857279 857438])
            ("scroll-all-mode" variable nil nil [857571 857868])
            ("custom-autoload" code nil nil [857870 857921])
            ("scroll-all-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [857923 858343])
            ("scroll-lock-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [858479 858975])
            ("when" code nil nil [859098 859175])
            ("push" code nil nil [859313 859372])
            ("semantic-default-submodes" variable (:default-value (quote (global-semantic-idle-scheduler-mode global-semanticdb-minor-mode))) nil [859374 860923])
            ("custom-autoload" code nil nil [860925 860982])
            ("semantic-mode" variable nil nil [860984 861273])
            ("custom-autoload" code nil nil [861275 861322])
            ("semantic-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [861324 861885])
            ("bovine-grammar-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [862069 862183])
            ("wisent-grammar-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [862367 862481])
            ("mail-from-style" variable (:default-value (quote default)) nil [862618 863026])
            ("custom-autoload" code nil nil [863028 863075])
            ("mail-specify-envelope-from" variable nil nil [863077 863533])
            ("custom-autoload" code nil nil [863535 863593])
            ("mail-self-blind" variable nil nil [863595 863796])
            ("custom-autoload" code nil nil [863798 863845])
            ("mail-interactive" variable (:default-value t) nil [863847 864004])
            ("custom-autoload" code nil nil [864006 864054])
            ("send-mail-function" variable (:default-value (if (and (boundp (quote smtpmail-smtp-server)) smtpmail-smtp-server) (quote smtpmail-send-it) (quote sendmail-query-once))) nil [864056 864516])
            ("custom-autoload" code nil nil [864518 864568])
            ("mail-header-separator" variable (:default-value (purecopy "--text follows this line--")) nil [864570 864712])
            ("custom-autoload" code nil nil [864714 864767])
            ("mail-archive-file-name" variable nil nil [864769 864962])
            ("custom-autoload" code nil nil [864964 865018])
            ("mail-default-reply-to" variable nil nil [865020 865219])
            ("custom-autoload" code nil nil [865221 865274])
            ("mail-personal-alias-file" variable (:default-value (purecopy "~/.mailrc")) nil [865276 865538])
            ("custom-autoload" code nil nil [865540 865596])
            ("mail-setup-hook" variable nil nil [865598 865696])
            ("custom-autoload" code nil nil [865698 865745])
            ("mail-aliases" variable (:default-value t) nil [865747 866053])
            ("mail-yank-prefix" variable (:default-value "> ") nil [866055 866224])
            ("custom-autoload" code nil nil [866226 866274])
            ("mail-indentation-spaces" variable (:default-value 3) nil [866276 866435])
            ("custom-autoload" code nil nil [866437 866492])
            ("mail-citation-hook" variable nil nil [866494 866990])
            ("custom-autoload" code nil nil [866992 867042])
            ("mail-citation-prefix-regexp" variable (:default-value (purecopy "\\([ 	]*\\(\\w\\|[_.]\\)+>+\\|[ 	]*[]>|]\\)+")) nil [867044 867417])
            ("custom-autoload" code nil nil [867419 867478])
            ("mail-signature" variable (:default-value t) nil [867480 867928])
            ("custom-autoload" code nil nil [867930 867976])
            ("mail-signature-file" variable (:default-value (purecopy "~/.signature")) nil [867978 868093])
            ("custom-autoload" code nil nil [868095 868146])
            ("mail-default-directory" variable (:default-value (purecopy "~/")) nil [868148 868416])
            ("custom-autoload" code nil nil [868418 868472])
            ("mail-default-headers" variable nil nil [868474 868712])
            ("custom-autoload" code nil nil [868714 868766])
            ("sendmail-query-once" function (:prototype-flag t) nil [868768 868948])
            ("define-mail-user-agent" code nil nil [868950 869044])
            ("sendmail-user-agent-compose" function (:prototype-flag t) nil [869046 869229])
            ("mail-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [869231 870359])
            ("mail-mailing-lists" variable nil nil [870361 870573])
            ("custom-autoload" code nil nil [870575 870625])
            ("sendmail-coding-system" variable nil nil [870627 870946])
            ("default-sendmail-coding-system" variable (:default-value (quote iso-latin-1)) nil [870948 871424])
            ("mail" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [871426 873614])
            ("mail-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [873616 873805])
            ("mail-other-frame" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [873807 873994])
            ("put" code nil nil [874107 874149])
            ("put" code nil nil [874151 874193])
            ("put" code nil nil [874195 874241])
            ("server-start" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [874243 874990])
            ("server-force-delete" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [874992 875225])
            ("server-mode" variable nil nil [875227 875508])
            ("custom-autoload" code nil nil [875510 875553])
            ("server-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [875555 875942])
            ("server-save-buffers-kill-terminal" function (:prototype-flag t) nil [875944 876259])
            ("ses-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [876362 877811])
            ("sgml-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [877961 878676])
            ("html-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [878678 880481])
            ("push" code nil nil [880629 880691])
            ("put" code nil nil [880692 880737])
            ("sh-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [880739 883230])
            ("defalias" code nil nil [883232 883270])
            ("list-load-path-shadows" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [883413 885351])
            ("shadow-define-cluster" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [885484 885924])
            ("shadow-define-literal-group" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [885926 886267])
            ("shadow-define-regexp-group" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [886269 886725])
            ("shadow-initialize" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [886727 886809])
            ("shell-dumb-shell-regexp" variable (:default-value (purecopy "cmd\\(proxy\\)?\\.exe")) nil [886919 887270])
            ("custom-autoload" code nil nil [887272 887324])
            ("shell" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [887326 888986])
            ("shr-render-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [889097 889240])
            ("shr-insert-document" function (:prototype-flag t) nil [889242 889440])
            ("sieve-manage" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [889560 889632])
            ("sieve-upload" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [889634 889699])
            ("sieve-upload-and-bury" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [889701 889775])
            ("sieve-upload-and-kill" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [889777 889851])
            ("sieve-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [889994 890337])
            ("simula-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [890478 892623])
            ("skeleton-filter-function" variable (:default-value (quote identity)) nil [892742 892859])
            ("define-skeleton" function (:prototype-flag t) nil [892861 893108])
            ("put" code nil nil [893110 893151])
            ("skeleton-proxy-new" function (:prototype-flag t) nil [893153 893735])
            ("skeleton-insert" function (:prototype-flag t) nil [893737 896884])
            ("skeleton-pair-insert-maybe" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [896886 897593])
            ("smerge-ediff" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [897735 897951])
            ("smerge-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [897953 898257])
            ("smerge-start-session" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [898259 898440])
            ("smiley-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [898563 898733])
            ("smiley-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [898735 898936])
            ("smtpmail-send-it" function (:prototype-flag t) nil [899073 899132])
            ("smtpmail-send-queued-mail" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [899134 899271])
            ("snake" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [899391 899955])
            ("snmp-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [900093 900470])
            ("snmpv2-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [900472 900855])
            ("sunrise-sunset" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [900991 901385])
            ("solitaire" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [901525 903189])
            ("put" code nil nil [903295 903347])
            ("sort-subr" function (:prototype-flag t) nil [903349 905500])
            ("sort-lines" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [905502 905842])
            ("sort-paragraphs" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [905844 906194])
            ("sort-pages" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [906196 906536])
            ("put" code nil nil [906537 906592])
            ("sort-numeric-fields" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [906594 907171])
            ("sort-fields" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [907173 907631])
            ("sort-regexp-fields" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [907633 908751])
            ("sort-columns" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [908753 909546])
            ("reverse-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [909548 909711])
            ("delete-duplicate-lines" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [909713 910658])
            ("spam-initialize" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [910773 911133])
            ("spam-report-process-queue" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [911279 911608])
            ("spam-report-url-ping-mm-url" function (:prototype-flag t) nil [911610 911833])
            ("spam-report-url-to-file" function (:prototype-flag t) nil [911835 912040])
            ("spam-report-agentize" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [912042 912293])
            ("spam-report-deagentize" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [912295 912491])
            ("defalias" code nil nil [912609 912650])
            ("speedbar-frame-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [912652 913111])
            ("speedbar-get-focus" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [913113 913359])
            ("spook" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [913479 913577])
            ("snarf-spooks" function (:prototype-flag t) nil [913579 913694])
            ("push" code nil nil [913817 913871])
            ("sql-add-product-keywords" function (:prototype-flag t) nil [913873 914605])
            ("sql-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [914607 915696])
            ("sql-connect" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [915698 916024])
            ("sql-product-interactive" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [916026 916581])
            ("sql-oracle" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [916583 917808])
            ("sql-sybase" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [917810 919046])
            ("sql-informix" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [919048 920166])
            ("sql-sqlite" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [920168 921422])
            ("sql-mysql" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [921424 922700])
            ("sql-solid" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [922702 923835])
            ("sql-ingres" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [923837 924940])
            ("sql-ms" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [924942 926161])
            ("sql-postgres" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [926163 927655])
            ("sql-interbase" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [927657 928810])
            ("sql-db2" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [928812 930139])
            ("sql-linter" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [930141 931352])
            ("push" code nil nil [931487 931545])
            ("srecode-template-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [931708 931816])
            ("defalias" code nil nil [931818 931861])
            ("starttls-open-stream" function (:prototype-flag t) nil [931998 932867])
            ("strokes-global-set-stroke" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [932983 933419])
            ("strokes-read-stroke" function (:prototype-flag t) nil [933421 933857])
            ("strokes-read-complex-stroke" function (:prototype-flag t) nil [933859 934338])
            ("strokes-do-stroke" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [934340 934504])
            ("strokes-do-complex-stroke" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [934506 934679])
            ("strokes-describe-stroke" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [934681 934823])
            ("strokes-help" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [934825 934922])
            ("strokes-load-user-strokes" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [934924 935049])
            ("strokes-list-strokes" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [935051 935397])
            ("strokes-mode" variable nil nil [935399 935684])
            ("custom-autoload" code nil nil [935686 935731])
            ("strokes-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [935733 936512])
            ("strokes-decode-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [936514 936783])
            ("strokes-compose-complex-stroke" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [936785 936922])
            ("studlify-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [937045 937134])
            ("studlify-word" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [937136 937262])
            ("studlify-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [937264 937351])
            ("subword-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [937495 938625])
            ("global-subword-mode" variable nil nil [938627 938940])
            ("custom-autoload" code nil nil [938942 938994])
            ("global-subword-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [938996 939403])
            ("superword-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [939405 940038])
            ("global-superword-mode" variable nil nil [940040 940361])
            ("custom-autoload" code nil nil [940363 940417])
            ("global-superword-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [940419 940840])
            ("sc-cite-original" function (:prototype-flag t) nil [940979 941980])
            ("define-obsolete-function-alias" code nil nil [942096 942165])
            ("gpm-mouse-mode" variable (:default-value t) nil [942167 942458])
            ("custom-autoload" code nil nil [942460 942507])
            ("gpm-mouse-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [942509 942969])
            ("untabify" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [943082 943477])
            ("tabify" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [943479 943973])
            ("table-cell-map-hook" variable nil nil [944111 944279])
            ("custom-autoload" code nil nil [944281 944329])
            ("table-load-hook" variable nil nil [944331 944427])
            ("custom-autoload" code nil nil [944429 944473])
            ("table-point-entered-cell-hook" variable nil nil [944475 944586])
            ("custom-autoload" code nil nil [944588 944646])
            ("table-point-left-cell-hook" variable nil nil [944648 944753])
            ("custom-autoload" code nil nil [944755 944810])
            ("table-insert" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [944812 949912])
            ("table-insert-row" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [949914 950241])
            ("table-insert-column" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [950243 950595])
            ("table-insert-row-column" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [950597 950748])
            ("table-recognize" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [950750 951119])
            ("table-unrecognize" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [951121 951176])
            ("table-recognize-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [951178 951516])
            ("table-unrecognize-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [951518 951588])
            ("table-recognize-table" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [951590 951854])
            ("table-unrecognize-table" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [951856 951917])
            ("table-recognize-cell" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [951919 952384])
            ("table-unrecognize-cell" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [952386 952446])
            ("table-heighten-cell" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [952448 952886])
            ("table-shorten-cell" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [952888 953380])
            ("table-widen-cell" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [953382 953629])
            ("table-narrow-cell" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [953631 953855])
            ("table-forward-cell" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [953857 955731])
            ("table-backward-cell" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [955733 955949])
            ("table-span-cell" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [955951 956122])
            ("table-split-cell-vertically" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [956124 956285])
            ("table-split-cell-horizontally" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [956287 956468])
            ("table-split-cell" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [956470 956629])
            ("table-justify" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [956631 956878])
            ("table-justify-cell" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [956880 957240])
            ("table-justify-row" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [957242 957437])
            ("table-justify-column" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [957439 957640])
            ("table-fixed-width-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [957642 958171])
            ("table-query-dimension" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [958173 958929])
            ("table-generate-source" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [958931 960095])
            ("table-insert-sequence" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [960097 961724])
            ("table-delete-row" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [961726 961977])
            ("table-delete-column" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [961979 962250])
            ("table-capture" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [962252 967390])
            ("table-release" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [967392 967700])
            ("talk-connect" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [967807 967916])
            ("talk" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [967918 968031])
            ("tar-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [968150 968929])
            ("tcl-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [969053 970117])
            ("inferior-tcl" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [970119 970320])
            ("tcl-help-on-word" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [970322 970514])
            ("telnet" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [970635 971238])
            ("rsh" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [971240 971472])
            ("make-term" function (:prototype-flag t) nil [971579 971998])
            ("term" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [972000 972247])
            ("ansi-term" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [972249 972371])
            ("serial-term" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [972373 972947])
            ("testcover-this-defun" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [973099 973200])
            ("push" code nil nil [973322 973379])
            ("tetris" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [973381 974118])
            ("tex-shell-file-name" variable nil nil [974265 974373])
            ("custom-autoload" code nil nil [974375 974426])
            ("tex-directory" variable (:default-value (purecopy ".")) nil [974428 974715])
            ("custom-autoload" code nil nil [974717 974762])
            ("tex-first-line-header-regexp" variable nil nil [974764 975041])
            ("custom-autoload" code nil nil [975043 975103])
            ("tex-main-file" variable nil nil [975105 975296])
            ("custom-autoload" code nil nil [975298 975343])
            ("tex-offer-save" variable (:default-value t) nil [975345 975448])
            ("custom-autoload" code nil nil [975450 975496])
            ("tex-run-command" variable (:default-value (purecopy "tex")) nil [975498 975659])
            ("custom-autoload" code nil nil [975661 975708])
            ("latex-run-command" variable (:default-value (purecopy "latex")) nil [975710 975879])
            ("custom-autoload" code nil nil [975881 975930])
            ("slitex-run-command" variable (:default-value (purecopy "slitex")) nil [975932 976105])
            ("custom-autoload" code nil nil [976107 976157])
            ("tex-start-options" variable (:default-value (purecopy "")) nil [976159 976455])
            ("custom-autoload" code nil nil [976457 976506])
            ("tex-start-commands" variable (:default-value (purecopy "\\nonstopmode\\input")) nil [976508 976763])
            ("custom-autoload" code nil nil [976765 976815])
            ("latex-block-names" variable nil nil [976817 976953])
            ("custom-autoload" code nil nil [976955 977004])
            ("tex-bibtex-command" variable (:default-value (purecopy "bibtex")) nil [977006 977265])
            ("custom-autoload" code nil nil [977267 977317])
            ("tex-dvi-print-command" variable (:default-value (purecopy "lpr -d")) nil [977319 977569])
            ("custom-autoload" code nil nil [977571 977624])
            ("tex-alt-dvi-print-command" variable (:default-value (purecopy "lpr -d")) nil [977626 978235])
            ("custom-autoload" code nil nil [978237 978294])
            ("tex-dvi-view-command" variable (:default-value (\` (cond ((eq window-system (quote x)) (\, (purecopy "xdvi"))) ((eq window-system (quote w32)) (\, (purecopy "yap"))) (t (\, (purecopy "dvi2tty * | cat -s")))))) nil [978296 978786])
            ("custom-autoload" code nil nil [978788 978840])
            ("tex-show-queue-command" variable (:default-value (purecopy "lpq")) nil [978842 979018])
            ("custom-autoload" code nil nil [979020 979074])
            ("tex-default-mode" variable (:default-value (quote latex-mode)) nil [979076 979374])
            ("custom-autoload" code nil nil [979376 979424])
            ("tex-open-quote" variable (:default-value (purecopy "``")) nil [979426 979537])
            ("custom-autoload" code nil nil [979539 979585])
            ("tex-close-quote" variable (:default-value (purecopy "''")) nil [979587 979700])
            ("custom-autoload" code nil nil [979702 979749])
            ("tex-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [979751 980183])
            ("defalias" code nil nil [980185 980215])
            ("defalias" code nil nil [980217 980259])
            ("defalias" code nil nil [980261 980295])
            ("plain-tex-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [980297 982030])
            ("latex-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [982032 983724])
            ("slitex-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [983726 985487])
            ("tex-start-shell" function (:prototype-flag t) nil [985489 985547])
            ("doctex-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [985549 985633])
            ("texinfo-format-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [985780 986206])
            ("texinfo-format-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [986208 986549])
            ("texi2info" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [986551 987178])
            ("texinfo-open-quote" variable (:default-value (purecopy "``")) nil [987322 987441])
            ("custom-autoload" code nil nil [987443 987492])
            ("texinfo-close-quote" variable (:default-value (purecopy "''")) nil [987494 987615])
            ("custom-autoload" code nil nil [987617 987667])
            ("texinfo-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [987669 990492])
            ("thai-compose-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [990640 990853])
            ("thai-compose-string" function (:prototype-flag t) nil [990855 990991])
            ("thai-compose-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [990993 991100])
            ("thai-composition-function" function (:prototype-flag t) nil [991102 991179])
            ("forward-thing" function (:prototype-flag t) nil [991301 991625])
            ("bounds-of-thing-at-point" function (:prototype-flag t) nil [991627 992140])
            ("thing-at-point" function (:prototype-flag t) nil [992142 992659])
            ("sexp-at-point" function (:prototype-flag t) nil [992661 992768])
            ("symbol-at-point" function (:prototype-flag t) nil [992770 992881])
            ("number-at-point" function (:prototype-flag t) nil [992883 992994])
            ("list-at-point" function (:prototype-flag t) nil [992996 993108])
            ("thumbs-find-thumb" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [993221 993311])
            ("thumbs-show-from-dir" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [993313 993553])
            ("thumbs-dired-show-marked" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [993555 993667])
            ("thumbs-dired-show" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [993669 993792])
            ("defalias" code nil nil [993794 993834])
            ("thumbs-dired-setroot" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [993836 993952])
            ("tibetan-char-p" function (:prototype-flag t) nil [994103 994261])
            ("tibetan-tibetan-to-transcription" function (:prototype-flag t) nil [994263 994416])
            ("tibetan-transcription-to-tibetan" function (:prototype-flag t) nil [994418 994612])
            ("tibetan-compose-string" function (:prototype-flag t) nil [994614 994712])
            ("tibetan-compose-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [994714 994831])
            ("tibetan-decompose-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [994833 995092])
            ("tibetan-decompose-string" function (:prototype-flag t) nil [995094 995331])
            ("tibetan-decompose-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [995333 995537])
            ("tibetan-compose-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [995539 995715])
            ("tibetan-post-read-conversion" function (:prototype-flag t) nil [995717 995794])
            ("tibetan-pre-write-conversion" function (:prototype-flag t) nil [995796 995877])
            ("tibetan-pre-write-canonicalize-for-unicode" function (:prototype-flag t) nil [995879 995974])
            ("push" code nil nil [996117 996175])
            ("tildify-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [996177 996498])
            ("tildify-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [996500 996801])
            ("display-time-day-and-date" variable nil nil [996908 997026])
            ("custom-autoload" code nil nil [997028 997081])
            ("put" code nil nil [997082 997132])
            ("display-time" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [997134 997452])
            ("display-time-mode" variable nil nil [997454 997759])
            ("custom-autoload" code nil nil [997761 997808])
            ("display-time-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [997810 998413])
            ("display-time-world" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [998415 998640])
            ("emacs-uptime" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [998642 998900])
            ("emacs-init-time" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [998902 999018])
            ("date-to-time" function (:prototype-flag t) nil [999166 999351])
            ("if" code nil nil [999352 999548])
            ("seconds-to-time" function (:prototype-flag t) nil [999550 999675])
            ("time-less-p" function (:prototype-flag t) nil [999677 999800])
            ("days-to-time" function (:prototype-flag t) nil [999802 999894])
            ("time-since" function (:prototype-flag t) nil [999896 1000048])
            ("defalias" code nil nil [1000050 1000090])
            ("time-subtract" function (:prototype-flag t) nil [1000092 1000246])
            ("time-add" function (:prototype-flag t) nil [1000248 1000377])
            ("date-to-day" function (:prototype-flag t) nil [1000379 1000524])
            ("days-between" function (:prototype-flag t) nil [1000526 1000689])
            ("date-leap-year-p" function (:prototype-flag t) nil [1000691 1000788])
            ("time-to-day-in-year" function (:prototype-flag t) nil [1000790 1000918])
            ("time-to-days" function (:prototype-flag t) nil [1000920 1001138])
            ("safe-date-to-time" function (:prototype-flag t) nil [1001140 1001330])
            ("format-seconds" function (:prototype-flag t) nil [1001332 1002286])
            ("put" code nil nil [1002418 1002472])
            ("put" code nil nil [1002473 1002539])
            ("put" code nil nil [1002540 1002599])
            ("put" code nil nil [1002600 1002653])
            ("put" code nil nil [1002654 1002705])
            ("put" code nil nil [1002706 1002767])
            ("put" code nil nil [1002768 1002822])
            ("put" code nil nil [1002823 1002878])
            ("time-stamp" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1002880 1003816])
            ("time-stamp-toggle-active" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1003818 1004039])
            ("push" code nil nil [1004186 1004248])
            ("timeclock-mode-line-display" variable nil nil [1004250 1004600])
            ("custom-autoload" code nil nil [1004602 1004664])
            ("timeclock-mode-line-display" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1004666 1005231])
            ("timeclock-in" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1005233 1005999])
            ("timeclock-out" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1006001 1006476])
            ("timeclock-status-string" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1006478 1006815])
            ("timeclock-change" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1006817 1007157])
            ("timeclock-query-out" function (:prototype-flag t) nil [1007159 1007326])
            ("timeclock-reread-log" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1007328 1007495])
            ("timeclock-workday-remaining-string" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1007497 1007893])
            ("timeclock-workday-elapsed-string" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1007895 1008191])
            ("timeclock-when-to-leave-string" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1008193 1008610])
            ("titdic-convert" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1008771 1009024])
            ("batch-titdic-convert" function (:prototype-flag t) nil [1009026 1009482])
            ("define-key" code nil nil [1009586 1009629])
            ("define-key" code nil nil [1009631 1009692])
            ("tmm-menubar" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1009694 1010189])
            ("tmm-menubar-mouse" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1010191 1010473])
            ("tmm-prompt" function (:prototype-flag t) nil [1010475 1011104])
            ("todo-show" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1011252 1013203])
            ("todo-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1013205 1013336])
            ("todo-archive-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1013338 1013464])
            ("todo-filtered-items-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1013466 1013623])
            ("add-to-list" code nil nil [1013625 1013683])
            ("add-to-list" code nil nil [1013685 1013751])
            ("add-to-list" code nil nil [1013753 1013830])
            ("toggle-tool-bar-mode-from-frame" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1013949 1014145])
            ("tool-bar-add-item" function (:prototype-flag t) nil [1014147 1014912])
            ("tool-bar-local-item" function (:prototype-flag t) nil [1014914 1015555])
            ("tool-bar-add-item-from-menu" function (:prototype-flag t) nil [1015557 1016266])
            ("tool-bar-local-item-from-menu" function (:prototype-flag t) nil [1016268 1016834])
            ("push" code nil nil [1016977 1017035])
            ("tpu-edt-mode" variable nil nil [1017037 1017322])
            ("custom-autoload" code nil nil [1017324 1017369])
            ("tpu-edt-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1017371 1017626])
            ("defalias" code nil nil [1017628 1017659])
            ("tpu-edt-on" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1017661 1017737])
            ("tpu-mapper" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1017890 1019226])
            ("tq-create" function (:prototype-flag t) nil [1019349 1019637])
            ("trace-buffer" variable (:default-value "*trace-output*") nil [1019777 1019867])
            ("custom-autoload" code nil nil [1019869 1019910])
            ("trace-values" function (:prototype-flag t) nil [1019912 1020087])
            ("trace-function-foreground" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1020089 1020973])
            ("trace-function-background" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1020975 1021235])
            ("defalias" code nil nil [1021237 1021290])
            ("tramp-mode" variable (:default-value t) nil [1021408 1021522])
            ("custom-autoload" code nil nil [1021524 1021563])
            ("tramp-syntax" variable (:default-value (if (featurep (quote xemacs)) (quote sep) (quote ftp))) nil [1021565 1021800])
            ("custom-autoload" code nil nil [1021802 1021843])
            ("tramp-file-name-regexp-unified" variable
               (:constant-flag t
                :default-value (if (memq system-type (quote (cygwin windows-nt))) "\\`/\\(\\[.*\\]\\|[^/|:]\\{2,\\}[^/|]*\\):" "\\`/[^/|:][^/|]*:"))
                nil [1021845 1022239])
            ("tramp-file-name-regexp-separate" variable
               (:constant-flag t
                :default-value "\\`/\\[.*\\]")
                nil [1022241 1022473])
            ("tramp-file-name-regexp" variable
               (:constant-flag t
                :default-value (cond ((equal tramp-syntax (quote ftp)) tramp-file-name-regexp-unified) ((equal tramp-syntax (quote sep)) tramp-file-name-regexp-separate) (t (error "Wrong `tramp-syntax' defined"))))
                nil [1022475 1023416])
            ("tramp-completion-file-name-regexp-unified" variable
               (:constant-flag t
                :default-value (if (memq system-type (quote (cygwin windows-nt))) "\\`/[^/]\\{2,\\}\\'" "\\`/[^/]*\\'"))
                nil [1023418 1023796])
            ("tramp-completion-file-name-regexp-separate" variable
               (:constant-flag t
                :default-value "\\`/\\([[][^]]*\\)?\\'")
                nil [1023798 1024062])
            ("tramp-completion-file-name-regexp" variable
               (:constant-flag t
                :default-value (cond ((equal tramp-syntax (quote ftp)) tramp-completion-file-name-regexp-unified) ((equal tramp-syntax (quote sep)) tramp-completion-file-name-regexp-separate) (t (error "Wrong `tramp-syntax' defined"))))
                nil [1024064 1024723])
            ("tramp-completion-file-name-handler-alist" variable
               (:constant-flag t
                :default-value (quote ((file-name-all-completions . tramp-completion-handle-file-name-all-completions) (file-name-completion . tramp-completion-handle-file-name-completion))))
                nil [1024725 1025144])
            ("tramp-run-real-handler" function (:arguments ("operation" "args")) nil [1025146 1025681])
            ("tramp-completion-run-real-handler" function (:arguments ("operation" "args")) nil [1025683 1026179])
            ("tramp-file-name-handler" function (:prototype-flag t) nil [1026181 1026373])
            ("tramp-completion-file-name-handler" function (:arguments ("operation" "args")) nil [1026375 1026980])
            ("tramp-register-file-name-handlers" function nil nil [1026982 1027961])
            ("tramp-register-file-name-handlers" code nil nil [1027963 1027998])
            ("tramp-unload-file-name-handlers" function (:prototype-flag t) nil [1028000 1028071])
            ("tramp-completion-handle-file-name-all-completions" function (:prototype-flag t) nil [1028073 1028238])
            ("tramp-completion-handle-file-name-completion" function (:prototype-flag t) nil [1028240 1028407])
            ("tramp-unload-tramp" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1028409 1028505])
            ("tramp-ftp-enable-ange-ftp" function (:prototype-flag t) nil [1028643 1028712])
            ("help-with-tutorial" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1028831 1029617])
            ("tai-viet-composition-function" function (:prototype-flag t) nil [1029759 1029857])
            ("2C-command" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1030010 1030058])
            ("global-set-key" code nil nil [1030060 1030096])
            ("global-set-key" code nil nil [1030098 1030131])
            ("2C-two-columns" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1030133 1030596])
            ("2C-associate-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1030598 1030857])
            ("2C-split" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1030859 1031645])
            ("type-break-mode" variable nil nil [1031778 1032075])
            ("custom-autoload" code nil nil [1032077 1032128])
            ("type-break-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1032130 1035727])
            ("type-break" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1035729 1036010])
            ("type-break-statistics" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1036012 1036284])
            ("type-break-guesstimate-keystroke-threshold" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1036286 1037565])
            ("uce-reply-to-uce" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1037679 1037990])
            ("ucs-normalize-NFD-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1038160 1038286])
            ("ucs-normalize-NFD-string" function (:prototype-flag t) nil [1038288 1038408])
            ("ucs-normalize-NFC-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1038410 1038536])
            ("ucs-normalize-NFC-string" function (:prototype-flag t) nil [1038538 1038658])
            ("ucs-normalize-NFKD-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1038660 1038788])
            ("ucs-normalize-NFKD-string" function (:prototype-flag t) nil [1038790 1038912])
            ("ucs-normalize-NFKC-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1038914 1039042])
            ("ucs-normalize-NFKC-string" function (:prototype-flag t) nil [1039044 1039166])
            ("ucs-normalize-HFS-NFD-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1039168 1039320])
            ("ucs-normalize-HFS-NFD-string" function (:prototype-flag t) nil [1039322 1039468])
            ("ucs-normalize-HFS-NFC-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1039470 1039622])
            ("ucs-normalize-HFS-NFC-string" function (:prototype-flag t) nil [1039624 1039770])
            ("underline-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1039920 1040165])
            ("ununderline-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1040167 1040393])
            ("batch-unrmail" function (:prototype-flag t) nil [1040527 1040854])
            ("unrmail" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1040856 1041054])
            ("unsafep" function (:prototype-flag t) nil [1041200 1041441])
            ("url-retrieve" function (:prototype-flag t) nil [1041553 1043041])
            ("url-retrieve-synchronously" function (:prototype-flag t) nil [1043043 1043374])
            ("url-get-authentication" function (:prototype-flag t) nil [1043509 1044676])
            ("url-register-auth-scheme" function (:prototype-flag t) nil [1044678 1045359])
            ("url-store-in-cache" function (:prototype-flag t) nil [1045497 1045605])
            ("url-is-cached" function (:prototype-flag t) nil [1045607 1045777])
            ("url-cache-extract" function (:prototype-flag t) nil [1045779 1045884])
            ("url-cid" function (:prototype-flag t) nil [1046008 1046061])
            ("url-dav-supported-p" function (:prototype-flag t) nil [1046185 1046338])
            ("url-dav-request" function (:prototype-flag t) nil [1046340 1047123])
            ("url-dav-vc-registered" function (:prototype-flag t) nil [1047125 1047192])
            ("url-file" function (:prototype-flag t) nil [1047327 1047425])
            ("url-gateway-nslookup-host" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1047546 1047676])
            ("url-open-stream" function (:prototype-flag t) nil [1047678 1047970])
            ("url-handler-mode" variable nil nil [1048117 1048418])
            ("custom-autoload" code nil nil [1048420 1048474])
            ("url-handler-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1048476 1048777])
            ("url-file-handler" function (:prototype-flag t) nil [1048779 1049048])
            ("url-copy-file" function (:prototype-flag t) nil [1049050 1049704])
            ("url-file-local-copy" function (:prototype-flag t) nil [1049706 1049913])
            ("url-insert-file-contents" function (:prototype-flag t) nil [1049915 1050022])
            ("url-default-expander" function (:prototype-flag t) nil [1050157 1050202])
            ("defalias" code nil nil [1050204 1050264])
            ("url-https" function (:prototype-flag t) nil [1050266 1050298])
            ("url-https-file-exists-p" function (:prototype-flag t) nil [1050300 1050346])
            ("url-https-file-readable-p" function (:prototype-flag t) nil [1050348 1050396])
            ("url-https-file-attributes" function (:prototype-flag t) nil [1050398 1050446])
            ("url-irc" function (:prototype-flag t) nil [1050570 1050623])
            ("url-ldap" function (:prototype-flag t) nil [1050758 1051011])
            ("url-mail" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1051152 1051214])
            ("url-mailto" function (:prototype-flag t) nil [1051216 1051305])
            ("url-man" function (:prototype-flag t) nil [1051440 1051523])
            ("url-info" function (:prototype-flag t) nil [1051525 1051601])
            ("url-generic-emulator-loader" function (:prototype-flag t) nil [1051603 1051677])
            ("defalias" code nil nil [1051679 1051730])
            ("defalias" code nil nil [1051732 1051783])
            ("defalias" code nil nil [1051785 1051836])
            ("url-data" function (:prototype-flag t) nil [1051838 1051921])
            ("url-news" function (:prototype-flag t) nil [1052056 1052111])
            ("url-snews" function (:prototype-flag t) nil [1052113 1052169])
            ("isPlainHostName" function (:prototype-flag t) nil [1052290 1052351])
            ("dnsDomainIs" function (:prototype-flag t) nil [1052353 1052414])
            ("dnsResolve" function (:prototype-flag t) nil [1052416 1052472])
            ("isResolvable" function (:prototype-flag t) nil [1052474 1052532])
            ("isInNet" function (:prototype-flag t) nil [1052534 1052594])
            ("url-ns-prefs" function (:prototype-flag t) nil [1052596 1052664])
            ("url-ns-user-pref" function (:prototype-flag t) nil [1052666 1052745])
            ("url-recreate-url" function (:prototype-flag t) nil [1052883 1052995])
            ("url-generic-parse-url" function (:prototype-flag t) nil [1052997 1054445])
            ("url-setup-privacy-info" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1054589 1054714])
            ("url-queue-retrieve" function (:prototype-flag t) nil [1054852 1055290])
            ("url-debug" variable nil nil [1055425 1055733])
            ("custom-autoload" code nil nil [1055735 1055776])
            ("url-debug" function (:prototype-flag t) nil [1055778 1055845])
            ("url-parse-args" function (:prototype-flag t) nil [1055847 1055929])
            ("url-insert-entities-in-string" function (:prototype-flag t) nil [1055931 1056348])
            ("url-normalize-url" function (:prototype-flag t) nil [1056350 1056489])
            ("url-lazy-message" function (:prototype-flag t) nil [1056491 1056681])
            ("url-get-normalized-date" function (:prototype-flag t) nil [1056683 1056840])
            ("url-eat-trailing-space" function (:prototype-flag t) nil [1056842 1056951])
            ("url-strip-leading-spaces" function (:prototype-flag t) nil [1056953 1057061])
            ("url-display-percentage" function (:prototype-flag t) nil [1057063 1057148])
            ("url-percentage" function (:prototype-flag t) nil [1057150 1057211])
            ("defalias" code nil nil [1057213 1057257])
            ("url-file-directory" function (:prototype-flag t) nil [1057259 1057370])
            ("url-file-nondirectory" function (:prototype-flag t) nil [1057372 1057489])
            ("url-parse-query-string" function (:prototype-flag t) nil [1057491 1057596])
            ("url-build-query-string" function (:prototype-flag t) nil [1057598 1058221])
            ("url-unhex-string" function (:prototype-flag t) nil [1058223 1058526])
            ("url-hexify-string" function (:prototype-flag t) nil [1058528 1059153])
            ("url-encode-url" function (:prototype-flag t) nil [1059155 1059468])
            ("url-file-extension" function (:prototype-flag t) nil [1059470 1059687])
            ("url-truncate-url-for-viewing" function (:prototype-flag t) nil [1059689 1059895])
            ("url-view-url" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1059897 1060146])
            ("ask-user-about-lock" function (:prototype-flag t) nil [1060265 1060739])
            ("ask-user-about-supersession-threat" function (:prototype-flag t) nil [1060741 1061244])
            ("utf-7-post-read-conversion" function (:prototype-flag t) nil [1061390 1061460])
            ("utf-7-imap-post-read-conversion" function (:prototype-flag t) nil [1061462 1061537])
            ("utf-7-pre-write-conversion" function (:prototype-flag t) nil [1061539 1061613])
            ("utf-7-imap-pre-write-conversion" function (:prototype-flag t) nil [1061615 1061694])
            ("utf7-encode" function (:prototype-flag t) nil [1061811 1061954])
            ("uudecode-decode-region-external" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1062091 1062371])
            ("uudecode-decode-region-internal" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1062373 1062602])
            ("uudecode-decode-region" function (:prototype-flag t) nil [1062604 1062792])
            ("vc-checkout-hook" variable nil nil [1062899 1063012])
            ("custom-autoload" code nil nil [1063014 1063056])
            ("vc-checkin-hook" variable nil nil [1063058 1063187])
            ("custom-autoload" code nil nil [1063189 1063230])
            ("vc-before-checkin-hook" variable nil nil [1063232 1063359])
            ("custom-autoload" code nil nil [1063361 1063409])
            ("vc-next-action" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1063411 1064613])
            ("vc-register" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1064615 1065375])
            ("vc-version-diff" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1065377 1065515])
            ("vc-diff" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1065517 1065906])
            ("vc-version-ediff" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1065908 1066063])
            ("vc-ediff" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1066065 1066467])
            ("vc-root-diff" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1066469 1066897])
            ("vc-revision-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1066899 1067156])
            ("vc-insert-headers" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1067158 1067368])
            ("vc-merge" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1067370 1068049])
            ("defalias" code nil nil [1068051 1068097])
            ("vc-create-tag" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1068099 1068432])
            ("vc-retrieve-tag" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1068434 1068774])
            ("vc-print-log" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1068776 1069194])
            ("vc-print-root-log" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1069196 1069530])
            ("vc-log-incoming" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1069532 1069773])
            ("vc-log-outgoing" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1069775 1070010])
            ("vc-revert" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1070012 1070255])
            ("vc-rollback" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1070257 1070493])
            ("define-obsolete-function-alias" code nil nil [1070495 1070563])
            ("vc-pull" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1070565 1071221])
            ("defalias" code nil nil [1071223 1071253])
            ("vc-switch-backend" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1071255 1071679])
            ("vc-transfer-file" function (:prototype-flag t) nil [1071681 1072292])
            ("vc-delete-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1072294 1072522])
            ("vc-rename-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1072524 1072760])
            ("vc-update-change-log" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1072762 1073375])
            ("vc-branch-part" function (:prototype-flag t) nil [1073377 1073480])
            ("vc-annotate" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1073622 1075080])
            ("vc-arch-registered" function (:arguments ("file")) nil [1075202 1075366])
            ("vc-bzr-admin-dirname" variable
               (:constant-flag t
                :default-value ".bzr")
                nil [1075485 1075589])
            ("vc-bzr-admin-checkout-format-file" variable
               (:constant-flag t
                :default-value (concat vc-bzr-admin-dirname "/checkout/format"))
                nil [1075591 1075733])
            ("vc-bzr-registered" function (:arguments ("file")) nil [1075735 1075905])
            ("vc-cvs-registered" function (:arguments ("f")) nil [1076023 1076251])
            ("vc-dir" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1076370 1077091])
            ("vc-do-command" function (:prototype-flag t) nil [1077239 1078208])
            ("vc-git-registered" function (:arguments ("file")) nil [1078326 1078539])
            ("vc-hg-registered" function (:arguments ("file")) nil [1078655 1078862])
            ("vc-mtn-admin-dir" variable
               (:constant-flag t
                :default-value "_MTN")
                nil [1078981 1079051])
            ("vc-mtn-admin-format" variable
               (:constant-flag t
                :default-value (concat vc-mtn-admin-dir "/format"))
                nil [1079053 1079169])
            ("vc-mtn-registered" function (:arguments ("file")) nil [1079171 1079327])
            ("vc-rcs-master-templates" variable (:default-value (purecopy (quote ("%sRCS/%s,v" "%s%s,v" "%sRCS/%s")))) nil [1079446 1079636])
            ("custom-autoload" code nil nil [1079638 1079691])
            ("vc-rcs-registered" function (:arguments ("f")) nil [1079693 1079753])
            ("vc-sccs-master-templates" variable (:default-value (purecopy (quote ("%sSCCS/s.%s" "%ss.%s" vc-sccs-search-project-dir)))) nil [1079875 1080084])
            ("custom-autoload" code nil nil [1080086 1080141])
            ("vc-sccs-registered" function (:arguments ("f")) nil [1080143 1080205])
            ("vc-sccs-search-project-dir" function (:arguments ("_dirname" "basename")) nil [1080207 1080904])
            ("vc-svn-registered" function (:arguments ("f")) nil [1081023 1081344])
            ("push" code nil nil [1081493 1081554])
            ("add-to-list" code nil nil [1081556 1081632])
            ("vera-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1081634 1083356])
            ("verilog-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1083515 1090128])
            ("vhdl-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1090278 1115859])
            ("vi-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1115980 1118301])
            ("viet-encode-viscii-char" function (:prototype-flag t) nil [1118449 1118573])
            ("viet-decode-viqr-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1118575 1118841])
            ("viet-decode-viqr-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1118843 1118980])
            ("viet-encode-viqr-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1118982 1119248])
            ("viet-encode-viqr-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1119250 1119387])
            ("viqr-post-read-conversion" function (:prototype-flag t) nil [1119389 1119462])
            ("viqr-pre-write-conversion" function (:prototype-flag t) nil [1119464 1119541])
            ("view-remove-frame-by-deleting" variable (:default-value t) nil [1119648 1119816])
            ("custom-autoload" code nil nil [1119818 1119875])
            ("view-mode" variable nil nil [1119877 1120050])
            ("make-variable-buffer-local" code nil nil [1120052 1120091])
            ("kill-buffer-if-not-modified" function (:prototype-flag t) nil [1120093 1120226])
            ("view-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1120228 1120678])
            ("view-file-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1120680 1121257])
            ("view-file-other-frame" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1121259 1121852])
            ("view-buffer" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1121854 1122944])
            ("view-buffer-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1122946 1123834])
            ("view-buffer-other-frame" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1123836 1124722])
            ("view-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1124724 1129591])
            ("view-return-to-alist-update" function (:prototype-flag t) nil [1129593 1130137])
            ("make-obsolete" code nil nil [1130139 1130223])
            ("view-mode-enter" function (:prototype-flag t) nil [1130225 1130893])
            ("View-exit-and-edit" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1130895 1131002])
            ("vip-setup" function (:prototype-flag t) nil [1131126 1131237])
            ("vip-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1131239 1131311])
            ("push" code nil nil [1131448 1131507])
            ("toggle-viper-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1131509 1131642])
            ("viper-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1131644 1131759])
            ("warning-prefix-function" variable nil nil [1131908 1132305])
            ("warning-series" variable nil nil [1132307 1132745])
            ("warning-fill-prefix" variable nil nil [1132747 1132856])
            ("warning-type-format" variable (:default-value (purecopy " (%s)")) nil [1132858 1133097])
            ("display-warning" function (:prototype-flag t) nil [1133099 1134345])
            ("lwarn" function (:prototype-flag t) nil [1134347 1135169])
            ("warn" function (:prototype-flag t) nil [1135171 1135443])
            ("push" code nil nil [1135555 1135612])
            ("wdired-change-to-wdired-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1135614 1136004])
            ("webjump" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1136128 1136406])
            ("put" code nil nil [1136559 1136607])
            ("put" code nil nil [1136609 1136658])
            ("define-obsolete-function-alias" code nil nil [1136660 1136737])
            ("which-function-mode" variable nil nil [1136739 1137052])
            ("custom-autoload" code nil nil [1137054 1137109])
            ("which-function-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1137111 1137573])
            ("push" code nil nil [1137705 1137769])
            ("whitespace-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1137771 1138140])
            ("whitespace-newline-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1138142 1138718])
            ("global-whitespace-mode" variable nil nil [1138720 1139045])
            ("custom-autoload" code nil nil [1139047 1139105])
            ("global-whitespace-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1139107 1139500])
            ("global-whitespace-newline-mode" variable nil nil [1139502 1139859])
            ("custom-autoload" code nil nil [1139861 1139927])
            ("global-whitespace-newline-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1139929 1140540])
            ("whitespace-toggle-options" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1140542 1143262])
            ("global-whitespace-toggle-options" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1143264 1145998])
            ("whitespace-cleanup" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1146000 1148106])
            ("whitespace-cleanup-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1148108 1149685])
            ("whitespace-report" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1149687 1151054])
            ("whitespace-report-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1151056 1152449])
            ("widget-browse-at" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1152582 1152675])
            ("widget-browse" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1152677 1152775])
            ("widget-browse-other-window" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1152777 1152910])
            ("widget-minor-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1152912 1153174])
            ("widgetp" function (:prototype-flag t) nil [1153293 1153387])
            ("widget-prompt-value" function (:prototype-flag t) nil [1153389 1153607])
            ("widget-create" function (:prototype-flag t) nil [1153609 1153755])
            ("widget-delete" function (:prototype-flag t) nil [1153757 1153834])
            ("widget-insert" function (:prototype-flag t) nil [1153836 1153965])
            ("widget-keymap" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "	" (quote widget-forward)) (define-key map "	" (quote widget-backward)) (define-key map [(shift tab)] (quote widget-backward)) (put (quote widget-backward) :advertised-binding [(shift tab)]) (define-key map [backtab] (quote widget-backward)) (define-key map [down-mouse-2] (quote widget-button-click)) (define-key map [down-mouse-1] (quote widget-button-click)) (define-key map [(control 109)] (quote widget-button-press)) map)) nil [1153967 1154590])
            ("widget-setup" function (:prototype-flag t) nil [1154592 1154700])
            ("windmove-left" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1154819 1155246])
            ("windmove-up" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1155248 1155661])
            ("windmove-right" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1155663 1156092])
            ("windmove-down" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1156094 1156512])
            ("windmove-default-keybindings" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1156514 1156723])
            ("winner-mode" variable nil nil [1156836 1157117])
            ("custom-autoload" code nil nil [1157119 1157162])
            ("winner-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1157164 1157468])
            ("push" code nil nil [1157576 1157634])
            ("woman-locale" variable nil nil [1157636 1157911])
            ("custom-autoload" code nil nil [1157913 1157954])
            ("woman" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1157956 1158616])
            ("woman-dired-find-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1158618 1158731])
            ("woman-find-file" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1158733 1159247])
            ("woman-bookmark-jump" function (:prototype-flag t) nil [1159249 1159360])
            ("push" code nil nil [1159503 1159561])
            ("wordstar-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1159563 1159982])
            ("xml-parse-file" function (:prototype-flag t) nil [1160086 1160820])
            ("xml-parse-region" function (:prototype-flag t) nil [1160822 1161787])
            ("xmltok-get-declared-encoding-position" function (:prototype-flag t) nil [1161910 1162567])
            ("xterm-mouse-mode" variable nil nil [1162686 1162987])
            ("custom-autoload" code nil nil [1162989 1163039])
            ("xterm-mouse-mode" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1163041 1163688])
            ("yenc-decode-region" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1163805 1163937])
            ("yenc-extract-filename" function (:prototype-flag t) nil [1163939 1164037])
            ("zone" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [1164154 1164216])
            ("loaddefs" package nil nil [1179736 1179755]))          
      :file "loaddefs.el"
      :pointmax 1179901
      :fsize 1179911
      :lastmodtime '(21229 31457 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "sb-image.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("ezimage" include nil nil [1343 1361])
            ("speedbar-use-images" variable (:default-value ezimage-use-images) nil [1373 1523])
            ("defalias" code nil nil [1525 1566])
            ("speedbar-expand-image-button-alist" variable (:default-value (quote (("<+>" . ezimage-directory-plus) ("<->" . ezimage-directory-minus) ("< >" . ezimage-directory) ("[+]" . ezimage-page-plus) ("[-]" . ezimage-page-minus) ("[?]" . ezimage-page) ("[ ]" . ezimage-page) ("{+}" . ezimage-box-plus) ("{-}" . ezimage-box-minus) ("<M>" . ezimage-mail) ("<d>" . ezimage-document-tag) ("<i>" . ezimage-info-tag) (" =>" . ezimage-tag) (" +>" . ezimage-tag-gt) (" ->" . ezimage-tag-v) (">" . ezimage-tag) ("@" . ezimage-tag-type) ("  @" . ezimage-tag-type) ("*" . ezimage-checkout) ("#" . ezimage-object) ("!" . ezimage-object-out-of-date) ("//" . ezimage-label) ("%" . ezimage-lock)))) nil [1568 2367])
            ("speedbar-insert-image-button-maybe" function (:arguments ("start" "length")) nil [2369 2779])
            ("speedbar-image-dump" function (:user-visible-flag t) nil [2781 3579])
            ("sb-image" package nil nil [3581 3600]))          
      :file "sb-image.el"
      :pointmax 3628
      :fsize 3627
      :lastmodtime '(21187 50982 0 0)
      :unmatched-syntax nil))
  :file "!usr!share!emacs!24.3.50!lisp!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
