;; Object mail/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "mail/"
  :tables
  (list
    (semanticdb-table "mailabbrev.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("sendmail" include nil nil [5827 5846])
            ("mail-abbrev" customgroup (:user-visible-flag t) nil [5849 5958])
            ("define-minor-mode" code nil nil [5975 6594])
            ("mail-abbrevs-only" variable nil nil [6596 6800])
            ("mail-abbrevs" variable nil nil [6878 7168])
            ("mail-abbrev-modtime" variable nil nil [7170 7279])
            ("mail-abbrevs-sync-aliases" function nil nil [7281 7596])
            ("mail-abbrevs-setup" function nil nil [7613 8049])
            ("mail-abbrevs-enable" function nil nil [8051 8130])
            ("mail-abbrevs-disable" function nil nil [8132 8316])
            ("build-mail-abbrevs" function (:arguments ("file" "recursivep")) nil [8333 10684])
            ("mail-alias-separator-string" variable (:default-value ", ") nil [10686 10985])
            ("mail-abbrev-aliases-need-to-be-resolved" variable (:default-value t) nil [11123 11173])
            ("define-mail-abbrev" function
               (:user-visible-flag t
                :arguments ("name" "definition" "from-mailrc-file"))
                nil [11307 15102])
            ("mail-resolve-all-aliases" function nil nil [15105 15501])
            ("mail-resolve-all-aliases-1" function (:arguments ("sym" "so-far")) nil [15503 16282])
            ("mail-abbrev-expand-hook" function nil nil [16285 17004])
            ("mail-abbrev-mode-regexp" variable (:default-value "^\\(Resent-\\)?\\(To\\|From\\|CC\\|BCC\\|Reply-to\\):") nil [17047 17566])
            ("mail-abbrev-syntax-table" variable nil nil [17568 17874])
            ("mail-abbrev-make-syntax-table" function nil nil [17876 18652])
            ("mail-abbrev-in-expansion-header-p" function nil nil [18654 19212])
            ("mail-abbrev-expand-wrapper" function (:arguments ("expand")) nil [19214 21905])
            ("merge-mail-abbrevs" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [21923 22376])
            ("rebuild-mail-abbrevs" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [22378 22898])
            ("mail-abbrev-insert-alias" function
               (:user-visible-flag t
                :arguments ("alias"))
                nil [22900 23298])
            ("mail-abbrev-complete-alias" function (:user-visible-flag t) nil [23300 23659])
            ("mail-abbrev-next-line" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [23661 24121])
            ("mail-abbrev-end-of-buffer" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [24123 24592])
            ("eval-after-load" code nil nil [24594 24804])
            ("mailabbrev" package nil nil [24929 24950]))          
      :file "mailabbrev.el"
      :pointmax 24980
      :fsize 24979
      :lastmodtime '(21187 50982 0 0)
      :unmatched-syntax '((close-paren 5846 . 5847) (symbol 5807 . 5824) (open-paren 5806 . 5807)))
    (semanticdb-table "sendmail.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("mail-utils" include nil nil [994 1015])
            ("rfc2047" include nil nil [1017 1035])
            ("sendmail" customgroup (:user-visible-flag t) nil [1037 1130])
            ("mail-setup-with-from" variable (:default-value t) nil [1132 1288])
            ("sendmail-program" variable (:default-value (or (executable-find "sendmail") (cond ((file-exists-p "/usr/sbin/sendmail") "/usr/sbin/sendmail") ((file-exists-p "/usr/lib/sendmail") "/usr/lib/sendmail") ((file-exists-p "/usr/ucblib/sendmail") "/usr/ucblib/sendmail") (t "sendmail")))) nil [1290 1714])
            ("mail-from-style" variable (:default-value (quote default)) nil [1731 2329])
            ("mail-specify-envelope-from" variable nil nil [2346 2859])
            ("mail-envelope-from" variable nil nil [2861 3428])
            ("mail-self-blind" variable nil nil [3445 3685])
            ("mail-interactive" variable (:default-value t) nil [3702 4177])
            ("mail-yank-ignored-headers" variable (:default-value (concat "^" (regexp-opt (quote ("via" "mail-from" "origin" "status" "remailed" "received" "message-id" "summary-line" "to" "subject" "in-reply-to" "return-path" "mail-reply-to" "x-rmail-attributes" "x-rmail-keywords" "mail-followup-to")) "\\(?:") ":")) nil [4179 4904])
            ("send-mail-function" variable (:default-value (if (and (boundp (quote smtpmail-smtp-server)) smtpmail-smtp-server) (quote smtpmail-send-it) (quote sendmail-query-once))) nil [4954 5888])
            ("mail-header-separator" variable (:default-value (purecopy "--text follows this line--")) nil [5905 6085])
            ("put" code nil nil [6156 6212])
            ("mail-archive-file-name" variable nil nil [6598 6848])
            ("mail-default-reply-to" variable nil nil [6865 7123])
            ("mail-alias-file" variable nil nil [7125 7620])
            ("mail-personal-alias-file" variable (:default-value (purecopy "~/.mailrc")) nil [7637 7956])
            ("mail-setup-hook" variable nil nil [7973 8167])
            ("mail-aliases" variable (:default-value t) nil [8184 8490])
            ("mail-alias-modtime" variable nil nil [8492 8600])
            ("mail-yank-prefix" variable (:default-value "> ") nil [8617 8845])
            ("mail-indentation-spaces" variable (:default-value 3) nil [8862 9060])
            ("mail-yank-hooks" variable nil nil [9062 9439])
            ("make-obsolete-variable" code nil nil [9440 9509])
            ("mail-citation-hook" variable nil nil [9526 10058])
            ("mail-citation-header" variable nil nil [10060 10307])
            ("mail-citation-prefix-regexp" variable (:default-value (purecopy "\\([ 	]*\\(\\w\\|[_.]\\)+>+\\|[ 	]*[]>|]\\)+")) nil [10324 10757])
            ("mail-abbrevs-loaded" variable nil nil [10759 10791])
            ("mail-mode-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "\211" (quote completion-at-point)) (define-key map "?" (quote describe-mode)) (define-key map "" (quote mail-to)) (define-key map "" (quote mail-bcc)) (define-key map "" (quote mail-fcc)) (define-key map "" (quote mail-cc)) (define-key map "" (quote mail-subject)) (define-key map "" (quote mail-reply-to)) (define-key map "" (quote mail-mail-reply-to)) (define-key map "" (quote mail-mail-followup-to)) (define-key map "" (quote mail-text)) (define-key map "" (quote mail-yank-original)) (define-key map "" (quote mail-yank-region)) (define-key map [remap split-line] (quote mail-split-line)) (define-key map "" (quote mail-fill-yanked-message)) (define-key map "" (quote mail-signature)) (define-key map "" (quote mail-send-and-exit)) (define-key map "" (quote mail-send)) (define-key map "	" (quote mail-insert-file)) (define-key map [menu-bar mail] (cons "Mail" (make-sparse-keymap "Mail"))) (define-key map [menu-bar mail attachment] (quote ("Attach File" . mail-add-attachment))) (define-key map [menu-bar mail fill] (quote ("Fill Citation" . mail-fill-yanked-message))) (define-key map [menu-bar mail yank] (quote (menu-item "Cite Original" mail-yank-original :enable mail-reply-action))) (define-key map [menu-bar mail signature] (quote ("Insert Signature" . mail-signature))) (define-key map [menu-bar mail mail-sep] (quote ("--"))) (define-key map [menu-bar mail cancel] (quote ("Cancel" . mail-dont-send))) (define-key map [menu-bar mail send-stay] (quote ("Send, Keep Editing" . mail-send))) (define-key map [menu-bar mail send] (quote ("Send Message" . mail-send-and-exit))) (define-key map [menu-bar headers] (cons "Headers" (make-sparse-keymap "Move to Header"))) (define-key map [menu-bar headers text] (quote ("Text" . mail-text))) (define-key map [menu-bar headers expand-aliases] (quote ("Expand Aliases" . expand-mail-aliases))) (define-key map [menu-bar headers mail-reply-to] (quote ("Mail-Reply-To" . mail-mail-reply-to))) (define-key map [menu-bar headers mail-followup-to] (quote ("Mail-Followup-To" . mail-mail-followup-to))) (define-key map [menu-bar headers reply-to] (quote ("Reply-To" . mail-reply-to))) (define-key map [menu-bar headers bcc] (quote ("Bcc" . mail-bcc))) (define-key map [menu-bar headers fcc] (quote ("Fcc" . mail-fcc))) (define-key map [menu-bar headers cc] (quote ("Cc" . mail-cc))) (define-key map [menu-bar headers subject] (quote ("Subject" . mail-subject))) (define-key map [menu-bar headers to] (quote ("To" . mail-to))) map)) nil [10792 13688])
            ("build-mail-aliases" function
               (:prototype-flag t
                :user-visible-flag t)
                nil [13690 13877])
            ("mail-signature" variable (:default-value t) nil [13894 14524])
            ("put" code nil nil [14525 14570])
            ("mail-signature-file" variable (:default-value (purecopy "~/.signature")) nil [14587 14738])
            ("mail-default-directory" variable (:default-value (purecopy "~/")) nil [14755 15101])
            ("mail-reply-action" variable nil nil [15103 15133])
            ("mail-send-actions" variable nil nil [15134 15240])
            ("mail-return-action" variable nil nil [15241 15272])
            ("mail-default-headers" variable nil nil [15289 15586])
            ("mail-bury-selects-summary" variable (:default-value t) nil [15588 15890])
            ("mail-send-nonascii" variable (:default-value (quote mime)) nil [15892 16403])
            ("mail-use-dsn" variable nil nil [16405 16771])
            ("mail-mailer-swallows-blank-line" variable nil nil [16869 17185])
            ("put" code nil nil [17187 17249])
            ("make-obsolete-variable" code nil nil [17265 17405])
            ("mail-mode-syntax-table" variable (:default-value (let ((st (make-syntax-table))) (modify-syntax-entry 37 ". " st) st)) nil [17407 17878])
            ("mail-font-lock-keywords" variable (:default-value (eval-when-compile (let* ((cite-chars "[>|}]") (cite-prefix "[:alpha:]") (cite-suffix (concat cite-prefix "0-9_.@-`'\""))) (list (quote ("^\\(To\\|Newsgroups\\):" . font-lock-function-name-face)) (quote ("^\\(B?CC\\|Reply-to\\|Mail-\\(reply\\|followup\\)-to\\):" . font-lock-keyword-face)) (quote ("^\\(Subject:\\)[ 	]*\\(.+\\)?" (1 font-lock-comment-face))) (quote (eval let ((separator (if (zerop (length mail-header-separator)) " \\`\\' " (regexp-quote mail-header-separator)))) (cons (concat "^" separator "$") (quote font-lock-warning-face)))) (\` ((\, cite-chars) ((\, (concat "\\=[ 	]*" "\\(\\(\\([" cite-prefix "]+[" cite-suffix "]*\\)?" "\\(" cite-chars "[ 	]*\\)\\)+\\)" "\\(.*\\)")) (beginning-of-line) (end-of-line) (1 font-lock-comment-delimiter-face nil t) (5 font-lock-comment-face nil t)))) (quote ("^\\(X-[A-Za-z0-9-]+\\|In-reply-to\\):.*\\(
[ 	]+.*\\)*$" . font-lock-string-face)))))) nil [17880 19133])
            ("sendmail-query-once" function nil nil [19152 19591])
            ("sendmail-query-user-about-smtp" function nil nil [19593 21059])
            ("sendmail-sync-aliases" function nil nil [21062 21301])
            ("define-mail-user-agent" code nil nil [21320 21418])
            ("sendmail-user-agent-compose" function (:arguments ("to" "subject" "other-headers" "continue" "switch-function" "yank-action" "send-actions" "return-action" "ignored")) nil [21435 22368])
            ("mail-setup" function (:arguments ("to" "subject" "in-reply-to" "cc" "replybuffer" "actions" "return-action")) nil [22370 25012])
            ("mail-mode-hook" variable nil nil [25015 25261])
            ("mail-mode-abbrev-table" variable (:default-value text-mode-abbrev-table) nil [25263 25317])
            ("mail-encode-mml" variable nil nil [25318 25342])
            ("define-derived-mode" code nil nil [25358 28448])
            ("mail-header-end" function nil nil [28451 28636])
            ("mail-text-start" function nil nil [28638 28845])
            ("mail-sendmail-delimit-header" function nil nil [28847 29091])
            ("mail-sendmail-undelimit-header" function nil nil [29093 29335])
            ("mail-mode-auto-fill" function nil nil [29337 29883])
            ("mail-mode-fill-paragraph" function (:arguments ("arg")) nil [29885 31000])
            ("mail-send-and-exit" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [31040 31255])
            ("mail-dont-send" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [31257 31426])
            ("mail-bury" function (:arguments ("arg")) nil [31428 32158])
            ("mail-send-hook" variable nil nil [32160 32299])
            ("mail-mailing-lists" variable nil nil [32316 32573])
            ("declare-function" code nil nil [32575 32614])
            ("mail-send" function (:user-visible-flag t) nil [32616 36005])
            ("mail-envelope-from" function nil nil [36007 36284])
            ("sendmail-coding-system" variable nil nil [36418 36737])
            ("default-sendmail-coding-system" variable (:default-value (quote iso-latin-1)) nil [36754 37230])
            ("mail-insert-from-field" function nil nil [37232 39662])
            ("mail-encode-header" function (:arguments ("beg" "end")) nil [39664 40455])
            ("sendmail-error-reporting-interactive" variable (:default-value (quote ("-oep" "-odi"))) nil [40815 40951])
            ("sendmail-error-reporting-non-interactive" variable (:default-value (quote ("-oem" "-odb"))) nil [40952 41089])
            ("sendmail-send-it" function nil nil [41091 48526])
            ("rmail-output-to-rmail-buffer" function (:prototype-flag t) nil [48528 48579])
            ("mail-do-fcc" function (:arguments ("header-end")) nil [48581 52670])
            ("mail-sent-via" function nil nil [52672 53526])
            ("mail-to" function (:user-visible-flag t) nil [53529 53674])
            ("mail-subject" function (:user-visible-flag t) nil [53676 53836])
            ("mail-cc" function (:user-visible-flag t) nil [53838 54058])
            ("mail-bcc" function (:user-visible-flag t) nil [54060 54284])
            ("mail-fcc" function
               (:user-visible-flag t
                :arguments ("folder"))
                nil [54286 54559])
            ("mail-reply-to" function (:user-visible-flag t) nil [54561 54724])
            ("mail-mail-reply-to" function (:user-visible-flag t) nil [54726 54995])
            ("mail-mail-followup-to" function (:user-visible-flag t) nil [54997 55278])
            ("mail-position-on-field" function (:arguments ("field" "soft")) nil [55280 55896])
            ("mail-text" function (:user-visible-flag t) nil [55898 56027])
            ("mail-signature" function
               (:user-visible-flag t
                :arguments ("atpoint"))
                nil [56030 57202])
            ("mail-fill-yanked-message" function
               (:user-visible-flag t
                :arguments ("justifyp"))
                nil [57204 57531])
            ("mail-indent-citation" function nil nil [57533 58248])
            ("mail-yank-original" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [58250 60897])
            ("mail-yank-clear-headers" function (:arguments ("start" "end")) nil [60899 61468])
            ("mail-yank-region" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [61470 63091])
            ("mail-split-line" function (:user-visible-flag t) nil [63093 63311])
            ("mail-insert-file" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [63315 63943])
            ("define-obsolete-function-alias" code nil nil [63945 64020])
            ("declare-function" code nil nil [64022 64112])
            ("declare-function" code nil nil [64113 64175])
            ("mail-add-attachment" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [64177 64459])
            ("mail" function
               (:user-visible-flag t
                :arguments ("noerase" "to" "subject" "in-reply-to" "cc" "replybuffer" "actions" "return-action"))
                nil [64583 68533])
            ("declare-function" code nil nil [68535 68580])
            ("declare-function" code nil nil [68581 68667])
            ("mail-recover-1" function (:user-visible-flag t) nil [68669 71846])
            ("declare-function" code nil nil [71848 71925])
            ("declare-function" code nil nil [71926 72012])
            ("declare-function" code nil nil [72013 72058])
            ("mail-recover" function (:user-visible-flag t) nil [72060 73906])
            ("mail-other-window" function
               (:user-visible-flag t
                :arguments ("noerase" "to" "subject" "in-reply-to" "cc" "replybuffer" "sendactions"))
                nil [73923 74216])
            ("mail-other-frame" function
               (:user-visible-flag t
                :arguments ("noerase" "to" "subject" "in-reply-to" "cc" "replybuffer" "sendactions"))
                nil [74233 74523])
            ("sendmail" package nil nil [74584 74603]))          
      :file "sendmail.el"
      :pointmax 74704
      :fsize 74714
      :lastmodtime '(21194 19546 0 0)
      :unmatched-syntax nil)
    (semanticdb-table "mail-utils.el"
      :file "mail-utils.el"
      :fsize 15470
      :lastmodtime '(21187 50982 0 0))
    (semanticdb-table "mailalias.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("sendmail" include nil nil [1100 1119])
            ("mailalias" customgroup (:user-visible-flag t) nil [1121 1188])
            ("mail-passwd-files" variable (:default-value (quote ("/etc/passwd"))) nil [1190 1341])
            ("mail-passwd-command" variable nil nil [1343 1503])
            ("mail-directory-names" variable (:default-value t) nil [1505 1624])
            ("mail-address-field-regexp" variable (:default-value "^\\(Resent-\\)?\\(To\\|From\\|CC\\|BCC\\|Reply-to\\):") nil [1626 1718])
            ("pattern" variable nil nil [1720 1736])
            ("mail-complete-alist" variable (:default-value (quote (("^\\(Resent-\\)?\\(To\\|From\\|CC\\|BCC\\|Reply-to\\):" mail-get-names pattern) ("Newsgroups:" if (boundp (quote gnus-active-hashtb)) gnus-active-hashtb (if (boundp news-group-article-assoc) news-group-article-assoc)) ("Followup-To:" mail-sentto-newsgroups)))) nil [1738 2539])
            ("put" code nil nil [2540 2590])
            ("mail-complete-style" variable (:default-value (quote angles)) nil [2607 3006])
            ("mail-complete-function" variable (:default-value (quote ispell-complete-word)) nil [3008 3198])
            ("make-obsolete-variable" code nil nil [3199 3309])
            ("mail-directory-function" variable nil nil [3311 3511])
            ("mail-directory-requery" variable nil nil [3579 3814])
            ("mail-directory-process" variable nil nil [3816 4577])
            ("put" code nil nil [4578 4631])
            ("mail-directory-stream" variable nil nil [4633 4772])
            ("put" code nil nil [4773 4825])
            ("mail-directory-parser" variable nil nil [4827 5217])
            ("put" code nil nil [5218 5270])
            ("mail-names" variable (:default-value t) nil [5296 5566])
            ("mail-local-names" variable (:default-value t) nil [5568 5664])
            ("expand-mail-aliases" function
               (:user-visible-flag t
                :arguments ("beg" "end" "exclude"))
                nil [5780 8781])
            ("build-mail-aliases" function
               (:user-visible-flag t
                :arguments ("file"))
                nil [8918 11412])
            ("define-mail-alias" function
               (:user-visible-flag t
                :arguments ("name" "definition" "from-mailrc-file"))
                nil [11593 15279])
            ("mail-completion-at-point-function" function nil nil [15296 16284])
            ("mail-complete" function (:arguments ("arg")) nil [16301 17003])
            ("mail-completion-expand" function (:arguments ("table")) nil [17005 17769])
            ("mail-get-names" function (:arguments ("prefix")) nil [17771 19673])
            ("mail-directory" function (:arguments ("prefix")) nil [19676 20818])
            ("mailalias-done" variable nil nil [20820 20843])
            ("mail-directory-process" function (:arguments ("prefix")) nil [20845 21190])
            ("mail-directory-stream" function (:arguments ("prefix")) nil [21267 21686])
            ("mail-sentto-newsgroups" function nil nil [21688 22081])
            ("mailalias" package nil nil [22083 22103]))          
      :file "mailalias.el"
      :pointmax 22132
      :fsize 22131
      :lastmodtime '(21187 50982 0 0)
      :unmatched-syntax nil))
  :file "!usr!share!emacs!24.3.50!lisp!mail!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
