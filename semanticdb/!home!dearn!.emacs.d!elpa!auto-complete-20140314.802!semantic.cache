;; Object auto-complete-20140314.802/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "auto-complete-20140314.802/"
  :tables
  (list
    (semanticdb-table "auto-complete-autoloads.el"
      :major-mode 'emacs-lisp-mode
      :tags nil
      :file "auto-complete-autoloads.el"
      :pointmax 281
      :fsize 1677
      :lastmodtime '(21285 55014 242333 469000)
      :unmatched-syntax nil)
    (semanticdb-table "auto-complete.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("ac-version" variable
               (:constant-flag t
                :default-value "1.4.0")
                nil [1359 1388])
            ("cl" include nil nil [1411 1424])
            ("popup" include nil nil [1427 1443])
            ("ac-error" function (:arguments ("var")) nil [1464 1648])
            ("auto-complete" customgroup (:user-visible-flag t) nil [1673 1759])
            ("ac-delay" variable (:default-value 0.1) nil [1761 1868])
            ("ac-auto-show-menu" variable (:default-value 0.8) nil [1870 2109])
            ("ac-show-menu-immediately-on-auto-complete" variable (:default-value t) nil [2111 2277])
            ("ac-expand-on-auto-complete" variable (:default-value t) nil [2279 2434])
            ("ac-disable-faces" variable (:default-value (quote (font-lock-comment-face font-lock-string-face font-lock-doc-face))) nil [2436 2647])
            ("ac-stop-flymake-on-completing" variable (:default-value t) nil [2649 2793])
            ("ac-use-fuzzy" variable (:default-value (and (locate-library "fuzzy") t)) nil [2795 2931])
            ("ac-fuzzy-cursor-color" variable (:default-value "red") nil [2933 3044])
            ("ac-use-comphist" variable (:default-value t) nil [3046 3170])
            ("ac-comphist-threshold" variable (:default-value 0.7) nil [3172 3298])
            ("ac-comphist-file" variable (:default-value (expand-file-name (concat (if (boundp (quote user-emacs-directory)) user-emacs-directory "~/.emacs.d/") "/ac-comphist.dat"))) nil [3300 3612])
            ("ac-user-dictionary" variable nil nil [3614 3725])
            ("ac-dictionary-files" variable (:default-value (quote ("~/.dict"))) nil [3727 3842])
            ("defvaralias" code nil nil [3843 3903])
            ("ac-dictionary-directories" variable (:default-value (ignore-errors (when load-file-name (let ((installed-dir (file-name-directory load-file-name))) (loop for name in (quote ("ac-dict" "dict")) for dir = (concat installed-dir name) if (file-directory-p dir) collect dir))))) nil [3905 4295])
            ("ac-use-quick-help" variable (:default-value t) nil [4297 4403])
            ("ac-quick-help-delay" variable (:default-value 1.5) nil [4405 4509])
            ("ac-menu-height" variable (:default-value 10) nil [4511 4615])
            ("defvaralias" code nil nil [4616 4671])
            ("ac-quick-help-height" variable (:default-value 20) nil [4673 4779])
            ("ac-quick-help-prefer-pos-tip" variable (:default-value t) nil [4781 4949])
            ("defvaralias" code nil nil [4950 5017])
            ("ac-candidate-limit" variable nil nil [5019 5154])
            ("defvaralias" code nil nil [5155 5206])
            ("ac-modes" variable (:default-value (quote (emacs-lisp-mode lisp-mode lisp-interaction-mode slime-repl-mode c-mode cc-mode c++-mode go-mode java-mode malabar-mode clojure-mode clojurescript-mode scala-mode scheme-mode ocaml-mode tuareg-mode coq-mode haskell-mode agda-mode agda2-mode perl-mode cperl-mode python-mode ruby-mode lua-mode ecmascript-mode javascript-mode js-mode js2-mode php-mode css-mode makefile-mode sh-mode fortran-mode f90-mode ada-mode xml-mode sgml-mode ts-mode sclang-mode verilog-mode))) nil [5208 5844])
            ("ac-compatible-packages-regexp" variable (:default-value "^ac-") nil [5846 6002])
            ("ac-non-trigger-commands" variable (:default-value (quote (*table--cell-self-insert-command electric-buffer-list))) nil [6004 6215])
            ("ac-trigger-commands" variable (:default-value (quote (self-insert-command))) nil [6217 6401])
            ("ac-trigger-commands-on-completing" variable (:default-value (quote (delete-backward-char backward-delete-char backward-delete-char-untabify autopair-backspace paredit-backward-delete paredit-backward-delete-word))) nil [6403 6779])
            ("ac-trigger-key" variable nil nil [6781 7314])
            ("ac-auto-start" variable (:default-value 2) nil [7316 7729])
            ("ac-stop-words" variable nil nil [7731 7848])
            ("defvaralias" code nil nil [7849 7889])
            ("ac-use-dictionary-as-stop-words" variable (:default-value t) nil [7891 8057])
            ("ac-ignore-case" variable (:default-value (quote smart)) nil [8059 8395])
            ("ac-dwim" variable (:default-value t) nil [8397 8524])
            ("ac-use-menu-map" variable nil nil [8526 8680])
            ("ac-use-overriding-local-map" variable nil nil [8682 8874])
            ("ac-disable-inline" variable nil nil [8876 8999])
            ("ac-candidate-menu-min" variable (:default-value 1) nil [9001 9127])
            ("ac-max-width" variable nil nil [9129 9382])
            ("ac-completion-face" variable
               (:default-value (quote ((t (:foreground "darkgray" :underline t))))
                :type "face")
                nil [9384 9514])
            ("ac-candidate-face" variable
               (:default-value (quote ((t (:inherit popup-face))))
                :type "face")
                nil [9516 9622])
            ("ac-candidate-mouse-face" variable
               (:default-value (quote ((t (:inherit popup-mouse-face))))
                :type "face")
                nil [9624 9748])
            ("ac-selection-face" variable
               (:default-value (quote ((t (:inherit popup-menu-selection-face))))
                :type "face")
                nil [9750 9880])
            ("auto-complete-mode-hook" variable nil nil [9882 9953])
            ("auto-complete-mode" variable nil nil [9983 10064])
            ("ac-cursor-color" variable nil nil [10066 10116])
            ("ac-inline" variable nil nil [10118 10172])
            ("ac-menu" variable nil nil [10174 10213])
            ("ac-show-menu" variable nil nil [10215 10277])
            ("ac-last-completion" variable nil nil [10279 10374])
            ("ac-quick-help" variable nil nil [10376 10426])
            ("ac-completing" variable nil nil [10428 10523])
            ("ac-buffer" variable nil nil [10525 10590])
            ("ac-point" variable nil nil [10592 10640])
            ("ac-last-point" variable nil nil [10642 10704])
            ("ac-prefix" variable nil nil [10706 10747])
            ("defvaralias" code nil nil [10748 10783])
            ("ac-selected-candidate" variable nil nil [10785 10848])
            ("ac-common-part" variable nil nil [10850 10972])
            ("ac-whole-common-part" variable nil nil [10974 11097])
            ("ac-prefix-overlay" variable nil nil [11099 11160])
            ("ac-timer" variable nil nil [11162 11210])
            ("ac-show-menu-timer" variable nil nil [11212 11269])
            ("ac-quick-help-timer" variable nil nil [11271 11330])
            ("ac-triggered" variable nil nil [11332 11377])
            ("ac-limit" variable nil nil [11379 11449])
            ("ac-candidates" variable nil nil [11451 11501])
            ("ac-candidates-cache" variable nil nil [11503 11580])
            ("ac-fuzzy-enable" variable nil nil [11582 11655])
            ("ac-dwim-enable" variable nil nil [11657 11735])
            ("ac-mode-map" variable (:default-value (make-sparse-keymap)) nil [11737 11874])
            ("ac-completing-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map "	" (quote ac-expand)) (define-key map [tab] (quote ac-expand)) (define-key map "" (quote ac-complete)) (define-key map [return] (quote ac-complete)) (define-key map (kbd "M-TAB") (quote auto-complete)) (define-key map "\356" (quote ac-next)) (define-key map "\360" (quote ac-previous)) (define-key map [down] (quote ac-next)) (define-key map [up] (quote ac-previous)) (define-key map [f1] (quote ac-help)) (define-key map [M-f1] (quote ac-persist-help)) (define-key map (kbd "C-?") (quote ac-help)) (define-key map (kbd "C-M-?") (quote ac-persist-help)) (define-key map [C-down] (quote ac-quick-help-scroll-down)) (define-key map [C-up] (quote ac-quick-help-scroll-up)) (define-key map "\216" (quote ac-quick-help-scroll-down)) (define-key map "\220" (quote ac-quick-help-scroll-up)) (dotimes (i 9) (let ((symbol (intern (format "ac-complete-select-%d" (1+ i))))) (fset symbol (\` (lambda nil (interactive) (when (and (ac-menu-live-p) (popup-select ac-menu (\, i))) (ac-complete))))) (define-key map (read-kbd-macro (format "M-%s" (1+ i))) symbol))) map)) nil [11876 13088])
            ("defvaralias" code nil nil [13089 13143])
            ("ac-menu-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map ac-completing-map) (define-key map "" (quote ac-next)) (define-key map "" (quote ac-previous)) (define-key map "" (quote ac-isearch)) (define-key map [mouse-1] (quote ac-mouse-1)) (define-key map [down-mouse-1] (quote ac-ignore)) (define-key map [mouse-4] (quote ac-mouse-4)) (define-key map [mouse-5] (quote ac-mouse-5)) map)) nil [13145 13596])
            ("ac-current-map" variable (:default-value (let ((map (make-sparse-keymap))) (set-keymap-parent map ac-completing-map) map)) nil [13598 13712])
            ("ac-match-function" variable (:default-value (quote all-completions)) nil [13714 13785])
            ("ac-prefix-definitions" variable (:default-value (quote ((symbol . ac-prefix-symbol) (file . ac-prefix-file) (valid-file . ac-prefix-valid-file) (c-dot . ac-prefix-c-dot) (c-dot-ref . ac-prefix-c-dot-ref) (cc-member . ac-prefix-cc-member)))) nil [13787 14063])
            ("ac-sources" variable (:default-value (quote (ac-source-words-in-same-mode-buffers))) nil [14065 14152])
            ("make-variable-buffer-local" code nil nil [14153 14193])
            ("ac-compiled-sources" variable nil nil [14195 14264])
            ("ac-current-sources" variable nil nil [14266 14368])
            ("ac-omni-completion-sources" variable nil nil [14370 14438])
            ("ac-current-prefix-def" variable nil nil [14440 14474])
            ("ac-ignoring-prefix-def" variable nil nil [14476 14511])
            ("ac-comphist" variable nil nil [14553 14613])
            ("ac-comphist-make-tab" function nil nil [14615 14682])
            ("ac-comphist-tab" function (:arguments ("db")) nil [14684 14728])
            ("ac-comphist-cache" function (:arguments ("db")) nil [14730 14776])
            ("ac-comphist-make" function (:arguments ("tab")) nil [14778 14902])
            ("ac-comphist-get" function (:arguments ("db" "string" "create")) nil [14904 15163])
            ("ac-comphist-add" function (:arguments ("db" "string" "prefix")) nil [15165 15458])
            ("ac-comphist-score" function (:arguments ("db" "string" "prefix")) nil [15460 16609])
            ("ac-comphist-sort" function (:arguments ("db" "collection" "prefix" "threshold")) nil [16611 17523])
            ("ac-comphist-serialize" function (:arguments ("db")) nil [17525 17694])
            ("ac-comphist-deserialize" function (:arguments ("sexp")) nil [17696 18062])
            ("ac-comphist-init" function nil nil [18064 18160])
            ("ac-comphist-load" function nil nil [18162 18551])
            ("ac-comphist-save" function nil nil [18553 18779])
            ("ac-buffer-dictionary" variable nil nil [18800 18833])
            ("ac-file-dictionary" variable (:default-value (make-hash-table :test (quote equal))) nil [18834 18892])
            ("ac-clear-dictionary-cache" function nil nil [18894 19150])
            ("ac-file-dictionary" function (:arguments ("filename")) nil [19152 19559])
            ("ac-mode-dictionary" function (:arguments ("mode")) nil [19561 19943])
            ("ac-buffer-dictionary" function (:arguments ("buffer")) nil [19945 20393])
            ("ac-menu-at-wrapper-line-p" function nil nil [20430 20709])
            ("ac-stop-word-p" function (:arguments ("word")) nil [20711 20865])
            ("ac-prefix-default" function nil nil [20867 21190])
            ("ac-prefix-symbol" function nil nil [21192 21330])
            ("ac-prefix-file" function nil nil [21332 21462])
            ("ac-prefix-valid-file" function nil nil [21464 22072])
            ("ac-prefix-c-dot" function nil nil [22074 22244])
            ("ac-prefix-c-dot-ref" function nil nil [22246 22451])
            ("ac-prefix-cc-member" function nil nil [22453 22656])
            ("ac-define-prefix" function (:arguments ("name" "prefix")) nil [22658 22844])
            ("ac-match-substring" function (:arguments ("prefix" "candidates")) nil [22846 23042])
            ("ac-source-entity" function (:arguments ("source")) nil [23044 23143])
            ("ac-source-available-p" function (:arguments ("source")) nil [23145 24046])
            ("ac-compile-sources" function (:arguments ("sources")) nil [24048 24786])
            ("ac-compiled-sources" function nil nil [24788 24922])
            ("ac-menu-live-p" function nil nil [24924 24977])
            ("ac-menu-create" function (:arguments ("point" "width" "height")) nil [24979 25492])
            ("ac-menu-delete" function nil nil [25494 25582])
            ("ac-inline-overlay" function nil nil [25584 25635])
            ("ac-inline-live-p" function nil nil [25637 25707])
            ("ac-inline-show" function (:arguments ("point" "string")) nil [25709 27636])
            ("ac-inline-delete" function nil nil [27638 27780])
            ("ac-inline-hide" function nil nil [27782 28118])
            ("ac-inline-update" function nil nil [28120 28548])
            ("ac-put-prefix-overlay" function nil nil [28550 29056])
            ("ac-remove-prefix-overlay" function nil nil [29058 29373])
            ("ac-activate-completing-map" function nil nil [29375 29762])
            ("ac-deactivate-completing-map" function nil nil [29764 30104])
            ("ac-selected-candidate" function nil nil [30106 30192])
            ("ac-prefix" function (:arguments ("requires" "ignore-list")) nil [30194 31793])
            ("ac-init" function nil nil [31795 32165])
            ("ac-candidates-1" function (:arguments ("source")) nil [32167 34401])
            ("ac-candidates" function nil nil [34403 36113])
            ("ac-update-candidates" function (:arguments ("cursor" "scroll-top")) nil [36115 36799])
            ("ac-reposition" function nil nil [36801 37161])
            ("ac-cleanup" function nil nil [37163 38616])
            ("ac-abort" function nil nil [38618 38677])
            ("ac-expand-string" function (:arguments ("string" "remove-undo-boundary")) nil [38679 40176])
            ("ac-set-trigger-key" function (:arguments ("key")) nil [40178 40562])
            ("ac-set-timer" function nil nil [40564 40685])
            ("ac-cancel-timer" function nil nil [40687 40792])
            ("ac-update" function (:arguments ("force")) nil [40794 41626])
            ("ac-update-greedy" function (:arguments ("force")) nil [41628 41944])
            ("ac-set-show-menu-timer" function nil nil [41946 42196])
            ("ac-cancel-show-menu-timer" function nil nil [42198 42343])
            ("ac-show-menu" function nil nil [42345 42495])
            ("ac-help" function (:arguments ("persist")) nil [42497 42612])
            ("ac-persist-help" function nil nil [42614 42670])
            ("ac-last-help" function (:arguments ("persist")) nil [42672 42820])
            ("ac-last-persist-help" function nil nil [42822 42888])
            ("ac-set-quick-help-timer" function nil nil [42890 43105])
            ("ac-cancel-quick-help-timer" function nil nil [43107 43256])
            ("ac-pos-tip-show-quick-help" function (:arguments ("menu" "item" "args")) nil [43258 44230])
            ("ac-quick-help-use-pos-tip-p" function nil nil [44232 44355])
            ("ac-quick-help" function (:arguments ("force")) nil [44357 45081])
            ("ac-remove-quick-help" function nil nil [45083 45282])
            ("ac-last-quick-help" function nil nil [45284 45882])
            ("ac-define-quick-help-command" function (:arguments ("name" "arglist" "body")) nil [45884 46061])
            ("ac-define-quick-help-command" code nil nil [46063 46199])
            ("ac-define-quick-help-command" code nil nil [46201 46333])
            ("ac-isearch-callback" function (:arguments ("list")) nil [46368 46447])
            ("ac-isearch" function nil nil [46449 46994])
            ("auto-complete-1" function (:arguments ("sources" "triggered")) nil [47030 48015])
            ("auto-complete" function
               (:user-visible-flag t
                :arguments ("sources"))
                nil [48032 48170])
            ("ac-fuzzy-complete" function (:user-visible-flag t) nil [48172 48777])
            ("ac-next" function (:user-visible-flag t) nil [48779 49016])
            ("ac-previous" function (:user-visible-flag t) nil [49018 49271])
            ("ac-expand" function (:user-visible-flag t) nil [49273 49854])
            ("ac-expand-common" function (:user-visible-flag t) nil [49856 50197])
            ("ac-complete-1" function (:arguments ("candidate")) nil [50199 50809])
            ("ac-complete" function (:user-visible-flag t) nil [50811 50909])
            ("ac-start" function
               (:user-visible-flag t
                :arguments ("requires" "force-init" "triggered"))
                nil [50911 52341])
            ("ac-stop" function (:user-visible-flag t) nil [52343 52447])
            ("ac-ignore" function
               (:user-visible-flag t
                :arguments ("ignore"))
                nil [52449 52519])
            ("ac-mouse-1" function (:arguments ("event")) nil [52521 52645])
            ("ac-mouse-4" function (:arguments ("event")) nil [52647 52709])
            ("ac-mouse-5" function (:arguments ("event")) nil [52711 52769])
            ("ac-trigger-key-command" function (:arguments ("force")) nil [52771 53051])
            ("ac-clear-variables-every-minute-timer" variable nil nil [53083 53133])
            ("ac-clear-variables-after-save" variable nil nil [53134 53176])
            ("ac-clear-variables-every-minute" variable nil nil [53177 53221])
            ("ac-minutes-counter" variable nil nil [53222 53251])
            ("ac-clear-variable-after-save" function (:arguments ("variable" "pred")) nil [53253 53383])
            ("ac-clear-variables-after-save" function nil nil [53385 53567])
            ("ac-clear-variable-every-minutes" function (:arguments ("variable" "minutes")) nil [53569 53700])
            ("ac-clear-variable-every-minute" function (:arguments ("variable")) nil [53702 53798])
            ("ac-clear-variable-every-10-minutes" function (:arguments ("variable")) nil [53800 53901])
            ("ac-clear-variables-every-minute" function nil nil [53903 54102])
            ("ac-cursor-on-diable-face-p" function (:arguments ("point")) nil [54132 54255])
            ("ac-trigger-command-p" function (:arguments ("command")) nil [54257 54603])
            ("ac-fallback-key-sequence" function nil nil [54605 54789])
            ("ac-fallback-command" function (:arguments ("except-command")) nil [54791 55127])
            ("ac-compatible-package-command-p" function (:arguments ("command")) nil [55129 55344])
            ("ac-handle-pre-command" function nil nil [55346 56280])
            ("ac-handle-post-command" function nil nil [56282 56671])
            ("ac-setup" function nil nil [56673 57207])
            ("define-minor-mode" code nil nil [57224 57865])
            ("auto-complete-mode-maybe" function nil nil [57867 58065])
            ("define-global-minor-mode" code nil nil [58082 58204])
            ("ac-flyspell-workaround" function (:user-visible-flag t) nil [58253 58645])
            ("ac-linum-workaround" function (:user-visible-flag t) nil [58647 58932])
            ("ac-define-source" function (:arguments ("name" "source")) nil [58960 59547])
            ("ac-word-index" variable nil nil [59575 59601])
            ("ac-candidate-words-in-buffer" function (:arguments ("point" "prefix" "limit")) nil [59603 60503])
            ("ac-incremental-update-word-index" function nil nil [60505 61056])
            ("ac-update-word-index-1" function nil nil [61058 61479])
            ("ac-update-word-index" function nil nil [61481 61695])
            ("ac-word-candidates" function (:arguments ("buffer-pred")) nil [61697 62291])
            ("ac-define-source" code nil nil [62293 62366])
            ("ac-define-source" code nil nil [62368 62479])
            ("ac-define-source" code nil nil [62481 62716])
            ("ac-symbols-cache" variable nil nil [62741 62770])
            ("ac-clear-variable-every-10-minutes" code nil nil [62771 62825])
            ("ac-symbol-file" function (:arguments ("symbol" "type")) nil [62827 64311])
            ("ac-symbol-documentation" function (:arguments ("symbol")) nil [64313 66087])
            ("ac-symbol-candidates" function nil nil [66089 66375])
            ("ac-define-source" code nil nil [66377 66516])
            ("ac-functions-cache" variable nil nil [66543 66574])
            ("ac-clear-variable-every-10-minutes" code nil nil [66575 66631])
            ("ac-function-candidates" function nil nil [66633 66842])
            ("ac-define-source" code nil nil [66844 67032])
            ("ac-variables-cache" variable nil nil [67059 67090])
            ("ac-clear-variable-every-10-minutes" code nil nil [67091 67147])
            ("ac-variable-candidates" function nil nil [67149 67357])
            ("ac-define-source" code nil nil [67359 67502])
            ("ac-emacs-lisp-features" variable nil nil [67528 67563])
            ("ac-clear-variable-every-10-minutes" code nil nil [67564 67624])
            ("ac-emacs-lisp-feature-candidates" function nil nil [67626 68287])
            ("ac-define-source" code nil nil [68289 68466])
            ("defvaralias" code nil nil [68468 68532])
            ("ac-define-source" code nil nil [68551 68746])
            ("ac-define-source" code nil nil [68785 68892])
            ("ac-filename-cache" variable nil nil [68913 68943])
            ("ac-filename-candidate" function nil nil [68945 69706])
            ("ac-define-source" code nil nil [69708 69906])
            ("ac-define-source" code nil nil [69929 70018])
            ("auto-complete" package nil nil [70020 70044]))          
      :file "auto-complete.el"
      :pointmax 70076
      :fsize 70075
      :lastmodtime '(21285 55014 136333 459000)
      :unmatched-syntax '((close-paren 1424 . 1425) (symbol 1391 . 1408) (open-paren 1390 . 1391))))
  :file "!home!dearn!.emacs.d!elpa!auto-complete-20140314.802!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
