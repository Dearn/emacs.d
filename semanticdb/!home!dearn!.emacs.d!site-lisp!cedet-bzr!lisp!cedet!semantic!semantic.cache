;; Object semantic/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "semantic/"
  :tables
  (list
    (semanticdb-table "idle.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("semantic" include nil nil [1508 1527])
            ("semantic/ctxt" include nil nil [1528 1552])
            ("semantic/format" include nil nil [1553 1579])
            ("semantic/tag" include nil nil [1580 1603])
            ("timer" include nil nil [1604 1620])
            ("working" include nil nil [1621 1639])
            ("semantic/find" include nil nil [1705 1729])
            ("eldoc-last-message" variable nil nil [1732 1759])
            ("declare-function" code nil nil [1760 1800])
            ("declare-function" code nil nil [1801 1871])
            ("declare-function" code nil nil [1872 1943])
            ("declare-function" code nil nil [1944 2020])
            ("declare-function" code nil nil [2021 2092])
            ("declare-function" code nil nil [2093 2153])
            ("declare-function" code nil nil [2154 2236])
            ("declare-function" code nil nil [2237 2328])
            ("declare-function" code nil nil [2329 2388])
            ("declare-function" code nil nil [2389 2449])
            ("declare-function" code nil nil [2450 2524])
            ("semantic-idle-scheduler-timer" variable nil nil [2568 2657])
            ("semantic-idle-scheduler-work-timer" variable nil nil [2659 2775])
            ("semantic-idle-scheduler-verbose-flag" variable nil nil [2777 2981])
            ("semantic-idle-scheduler-idle-time" variable (:default-value 1) nil [2983 3490])
            ("semantic-idle-scheduler-work-idle-time" variable (:default-value 60) nil [3492 4038])
            ("semantic-idle-scheduler-setup-timers" function nil nil [4040 4650])
            ("semantic-idle-scheduler-kill-timer" function nil nil [4652 4873])
            ("semantic-idle-scheduler-mode-hook" variable nil nil [5023 5177])
            ("semantic-idle-scheduler-mode" variable nil nil [5179 5345])
            ("make-variable-buffer-local" code nil nil [5346 5404])
            ("semantic-idle-scheduler-max-buffer-size" variable (:user-visible-flag t) nil [5406 5674])
            ("semantic-idle-scheduler-enabled-p" function nil nil [5676 6514])
            ("define-minor-mode" code nil nil [6531 7524])
            ("semantic-add-minor-mode" code nil nil [7526 7612])
            ("semantic-idle-scheduler-queue" variable nil nil [7693 7975])
            ("semantic-idle-scheduler-add" function (:arguments ("function")) nil [7977 8128])
            ("semantic-idle-scheduler-remove" function (:arguments ("function")) nil [8130 8318])
            ("semantic-idle-core-handler" function nil nil [8341 11152])
            ("semantic-debug-idle-function" function (:user-visible-flag t) nil [11154 11337])
            ("semantic-idle-scheduler-function" function nil nil [11339 11700])
            ("semantic-idle-work-parse-neighboring-files-flag" variable (:user-visible-flag t) nil [11830 12061])
            ("semantic-idle-work-update-headers-flag" variable (:user-visible-flag t) nil [12063 12330])
            ("semantic-idle-work-for-one-buffer" function (:arguments ("buffer")) nil [12332 13360])
            ("semantic-idle-work-core-handler" function nil nil [13362 15448])
            ("semantic-debug-idle-work-function" function (:user-visible-flag t) nil [15450 15648])
            ("semantic-idle-scheduler-work-function" function nil nil [15650 16206])
            ("semantic-idle-scheduler-work-parse-neighboring-files" function nil nil [16208 17234])
            ("semantic-before-idle-scheduler-reparse-hook" variable nil nil [17377 17619])
            ("semantic-after-idle-scheduler-reparse-hook" variable nil nil [17621 17857])
            ("semantic-varalias-obsolete" code nil nil [17859 17992])
            ("semantic-varalias-obsolete" code nil nil [17993 18124])
            ("semantic-idle-scheduler-refresh-tags" function nil nil [18126 20974])
            ("define-semantic-idle-service" function (:arguments ("name" "doc" "forms")) nil [21353 23445])
            ("put" code nil nil [23446 23505])
            ("add-hook" code nil nil [23506 23648])
            ("semantic-idle-truncate-long-summaries" variable (:default-value t) nil [23713 23918])
            ("semantic-idle-summary-function" variable (:default-value (quote semantic-format-tag-summarize-with-file)) nil [23920 24296])
            ("semantic-idle-summary-find-current-symbol-tag" function (:arguments ("sym")) nil [24298 24749])
            ("semantic-idle-summary-current-symbol-info-brutish" function nil nil [24751 25130])
            ("semantic-idle-summary-current-symbol-keyword" function nil nil [25132 25458])
            ("semantic-idle-summary-current-symbol-info-context" function nil nil [25460 25853])
            ("semantic-idle-summary-current-symbol-info-default" function nil nil [25855 26353])
            ("semantic-idle-summary-out-of-context-faces" variable (:default-value (quote (font-lock-comment-face font-lock-string-face font-lock-doc-string-face font-lock-doc-face))) nil [26355 27189])
            ("semantic-idle-summary-useful-context-p" function nil nil [27191 27573])
            ("semantic-idle-summary-current-symbol-info" function (:overloadable t) nil [27575 27710])
            ("make-obsolete-overload" code nil nil [27712 27870])
            ("semantic-idle-summary-mode-hook" variable nil nil [27872 28004])
            ("semantic-idle-summary-idle-function" function nil nil [28006 29214])
            ("define-minor-mode" code nil nil [29216 30177])
            ("semantic-idle-summary-refresh-echo-area" function nil nil [30179 30550])
            ("semantic-add-minor-mode" code nil nil [30552 30608])
            ("define-minor-mode" code nil nil [30610 31082])
            ("semantic-idle-symbol-highlight-face" variable (:default-value (quote region)) nil [31297 31395])
            ("semantic-idle-symbol-maybe-highlight" function (:arguments ("tag")) nil [31397 33293])
            ("define-semantic-idle-service" code nil nil [33295 34606])
            ("define-minor-mode" code nil nil [34625 35373])
            ("semantic-idle-completions-end-of-symbol-p" function nil nil [35620 35856])
            ("semantic-idle-completion-list-default" function nil nil [35858 36560])
            ("define-semantic-idle-service" code nil nil [36562 37451])
            ("semantic-idle-breadcrumbs-display-function" variable (:default-value (function semantic-idle-breadcrumbs--display-in-header-line)) nil [37618 38335])
            ("semantic-idle-breadcrumbs-format-tag-list-function" variable (:default-value (function semantic-idle-breadcrumbs--format-linear)) nil [38337 39280])
            ("semantic-idle-breadcrumbs-format-tag-function" variable (:default-value (function semantic-format-tag-abbreviate)) nil [39282 39652])
            ("semantic-idle-breadcrumbs-separator" variable (:default-value (quote mode-specific)) nil [39654 40052])
            ("semantic-idle-breadcrumbs-header-line-prefix" variable (:default-value semantic-stickyfunc-indent-string) nil [40054 40324])
            ("semantic-idle-breadcrumbs-popup-menu" variable nil nil [40326 40458])
            ("semantic-idle-breadcrumbs--popup-menu" function
               (:user-visible-flag t
                :arguments ("event"))
                nil [40460 40880])
            ("semantic-idle-breadcrumbs--tag-function" function (:arguments ("function")) nil [40882 41425])
            ("semantic-idle-breadcrumbs-popup-map" variable (:default-value (let ((map (make-sparse-keymap))) (define-key map [header-line mouse-1] (semantic-idle-breadcrumbs--tag-function semantic-go-to-tag)) (define-key map [header-line mouse-3] (quote semantic-idle-breadcrumbs--popup-menu)) map)) nil [41470 41906])
            ("easy-menu-define" code nil nil [41908 43827])
            ("define-semantic-idle-service" code nil nil [43829 44371])
            ("semantic-idle-breadcrumbs--display-in-header-line" function (:arguments ("tag-list")) nil [44373 45229])
            ("semantic-idle-breadcrumbs--display-in-mode-line" function (:arguments ("tag-list")) nil [45231 45772])
            ("semantic-idle-breadcrumbs--format-tag-list" function (:arguments ("tag-list" "max-length")) nil [45774 46489])
            ("semantic-idle-breadcrumbs--format-linear" function (:arguments ("tag-list" "max-length")) nil [46491 47267])
            ("semantic-idle-breadcrumbs--format-innermost-first" function (:arguments ("tag-list" "max-length")) nil [47269 48562])
            ("semantic-idle-breadcrumbs--format-tag" function (:arguments ("tag" "format-function")) nil [48564 49292])
            ("semantic/idle" package nil nil [49295 49319]))          
      :file "idle.el"
      :pointmax 49472
      :fsize 49471
      :lastmodtime '(21162 51904 690551 0)
      :unmatched-syntax '((close-paren 1729 . 1730) (symbol 1687 . 1704) (open-paren 1686 . 1687)))
    (semanticdb-table "ctxt.el"
      :file "ctxt.el"
      :fsize 25496
      :lastmodtime '(21162 51904 690551 0))
    (semanticdb-table "format.el"
      :file "format.el"
      :fsize 27605
      :lastmodtime '(21162 51904 690551 0))
    (semanticdb-table "tag.el"
      :file "tag.el"
      :fsize 51787
      :lastmodtime '(21162 51904 690551 0))
    (semanticdb-table "find.el"
      :file "find.el"
      :fsize 27708
      :lastmodtime '(21162 51904 690551 0))
    (semanticdb-table "lex.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("semantic/fw" include nil nil [7518 7540])
            ("semantic-lex-map-symbols" function (:arguments ("fun" "table" "property")) nil [7590 8001])
            ("semantic-flex-keywords-obarray" variable nil nil [8180 8357])
            ("make-variable-buffer-local" code nil nil [8358 8418])
            ("semantic-lex-keyword-invalid" function (:arguments ("name")) nil [8420 8580])
            ("semantic-lex-keyword-symbol" function (:arguments ("name")) nil [8582 8811])
            ("semantic-lex-keyword-p" function (:arguments ("name")) nil [8813 9028])
            ("semantic-lex-keyword-set" function (:arguments ("name" "value")) nil [9030 9199])
            ("semantic-lex-keyword-value" function (:arguments ("name")) nil [9201 9484])
            ("semantic-lex-keyword-put" function (:arguments ("name" "property" "value")) nil [9486 9748])
            ("semantic-lex-keyword-get" function (:arguments ("name" "property")) nil [9750 10000])
            ("semantic-lex-make-keyword-table" function (:arguments ("specs" "propspecs")) nil [10002 10937])
            ("semantic-lex-map-keywords" function (:arguments ("fun" "property")) nil [10939 11260])
            ("semantic-lex-keywords" function (:arguments ("property")) nil [11262 11574])
            ("semantic-lex-unterminated-syntax-end-function" variable nil nil [11599 11653])
            ("semantic-lex-analysis-bounds" variable nil nil [11654 11691])
            ("semantic-lex-end-point" variable nil nil [11692 11723])
            ("semantic-lex-token-bounds" function (:arguments ("token")) nil [11725 11945])
            ("semantic-lex-token-start" function (:arguments ("token")) nil [11947 12133])
            ("semantic-lex-token-end" function (:arguments ("token")) nil [12135 12317])
            ("semantic-lex-unterminated-syntax-detected" function (:arguments ("syntax")) nil [12319 12848])
            ("semantic-lex-types-obarray" variable nil nil [13104 13200])
            ("make-variable-buffer-local" code nil nil [13201 13257])
            ("semantic-lex-type-invalid" function (:arguments ("type")) nil [13259 13418])
            ("semantic-lex-type-symbol" function (:arguments ("type")) nil [13420 13630])
            ("semantic-lex-type-p" function (:arguments ("type")) nil [13632 13802])
            ("semantic-lex-type-set" function (:arguments ("type" "value")) nil [13804 13970])
            ("semantic-lex-type-value" function (:arguments ("type" "noerror")) nil [13972 14348])
            ("semantic-lex-type-put" function (:arguments ("type" "property" "value" "add")) nil [14350 14836])
            ("semantic-lex-type-get" function (:arguments ("type" "property" "noerror")) nil [14838 15236])
            ("semantic-lex-preset-default-types" function nil nil [15238 16105])
            ("semantic-lex-make-type-table" function (:arguments ("specs" "propspecs")) nil [16107 17873])
            ("semantic-lex-map-types" function (:arguments ("fun" "property")) nil [17875 18186])
            ("semantic-lex-types" function (:arguments ("property")) nil [18188 18488])
            ("semantic-lex-analyzer" variable (:default-value (quote semantic-flex)) nil [18535 18736])
            ("make-variable-buffer-local" code nil nil [18737 18788])
            ("semantic-lex-tokens" variable (:default-value (quote ((bol) (charquote) (close-paren) (comment) (newline) (open-paren) (punctuation) (semantic-list) (string) (symbol) (whitespace)))) nil [18790 22131])
            ("semantic-lex-syntax-modifications" variable nil nil [22133 22504])
            ("make-variable-buffer-local" code nil nil [22505 22568])
            ("semantic-lex-syntax-table" variable nil nil [22570 22697])
            ("make-variable-buffer-local" code nil nil [22698 22753])
            ("semantic-lex-comment-regex" variable nil nil [22755 22997])
            ("make-variable-buffer-local" code nil nil [22998 23054])
            ("semantic-lex-number-expression" variable (:default-value (eval-when-compile (concat "\\(" "\\<[0-9]+[.][0-9]+\\([eE][-+]?[0-9]+\\)?[fFdD]?\\>" "\\|" "\\<[0-9]+[.][eE][-+]?[0-9]+[fFdD]?\\>" "\\|" "\\<[0-9]+[.][fFdD]\\>" "\\|" "\\<[0-9]+[.]" "\\|" "[.][0-9]+\\([eE][-+]?[0-9]+\\)?[fFdD]?\\>" "\\|" "\\<[0-9]+[eE][-+]?[0-9]+[fFdD]?\\>" "\\|" "\\<0[xX][0-9a-fA-F]+[lL]?\\>" "\\|" "\\<[0-9]+[lLfFdD]?\\>" "\\)"))) nil [23056 24330])
            ("make-variable-buffer-local" code nil nil [24331 24391])
            ("semantic-lex-depth" variable nil nil [24393 24499])
            ("make-variable-buffer-local" code nil nil [24500 24548])
            ("semantic-lex-unterminated-syntax-end-function" variable (:default-value (lambda (syntax syntax-start lex-end) lex-end)) nil [24550 25122])
            ("declare-function" code nil nil [25158 25209])
            ("semantic-lex-test" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [25211 25747])
            ("semantic-lex-debug" variable nil nil [25749 25832])
            ("semantic-lex-debug" function
               (:user-visible-flag t
                :arguments ("arg"))
                nil [25834 26313])
            ("semantic-lex-highlight-token" function (:arguments ("token")) nil [26315 26628])
            ("semantic-lex-one-token" function (:arguments ("analyzers")) nil [27016 27272])
            ("semantic-lex-end-point" variable nil nil [27274 27365])
            ("semantic-lex-current-depth" variable nil nil [27367 27466])
            ("semantic-lex-maximum-depth" variable nil nil [27468 27582])
            ("semantic-lex-token-stream" variable nil nil [27584 27670])
            ("semantic-lex-analysis-bounds" variable nil nil [27672 27753])
            ("semantic-lex-block-streams" variable nil nil [27755 27985])
            ("define-obsolete-variable-alias" code nil nil [27987 28084])
            ("semantic-lex-reset-functions" variable nil nil [28085 28333])
            ("semantic-lex-block-stack" variable nil nil [28362 28399])
            ("semantic-lex-debug-break" function (:arguments ("token")) nil [28489 28887])
            ("define-lex" function (:arguments ("name" "doc" "analyzers")) nil [28889 32364])
            ("semantic-lex-start-block" function (:arguments ("syntax")) nil [32422 32805])
            ("semantic-lex-end-block" function (:arguments ("syntax")) nil [32807 35160])
            ("semantic-lex-token" function (:arguments ("symbol" "start" "end" "str")) nil [35360 36110])
            ("semantic-lex-token-p" function (:arguments ("thing")) nil [36112 36458])
            ("semantic-lex-token-with-text-p" function (:arguments ("thing")) nil [36460 36772])
            ("semantic-lex-token-without-text-p" function (:arguments ("thing")) nil [36774 37058])
            ("semantic-lex-expand-block-specs" function (:arguments ("specs")) nil [37079 38271])
            ("semantic-lex-push-token" function (:arguments ("token" "blockspecs")) nil [38275 39109])
            ("semantic-lex-token-class" function (:arguments ("token")) nil [39111 39260])
            ("semantic-lex-token-text" function (:arguments ("token")) nil [39262 39580])
            ("semantic-lex-init" function nil nil [39582 40069])
            ("semantic-lex" function
               (:overloadable t
                :arguments ("start" "end" "depth" "length"))
                nil [40086 40921])
            ("semantic-lex-buffer" function (:arguments ("depth")) nil [40923 41103])
            ("semantic-lex-list" function (:arguments ("semlist" "depth")) nil [41105 41312])
            ("semantic-lex-debug-analyzers" variable nil nil [41597 41790])
            ("semantic-lex-unterminated-syntax-protection" function (:arguments ("syntax" "forms")) nil [41792 42519])
            ("put" code nil nil [42520 42599])
            ("define-lex-analyzer" function (:arguments ("name" "doc" "condition" "forms")) nil [42601 44769])
            ("define-lex-regex-analyzer" function (:arguments ("name" "doc" "regexp" "forms")) nil [44771 45092])
            ("define-lex-simple-regex-analyzer" function (:arguments ("name" "doc" "regexp" "toksym" "index" "forms")) nil [45094 45872])
            ("define-lex-block-analyzer" function (:arguments ("name" "doc" "spec1" "specs")) nil [45874 48108])
            ("define-lex-analyzer" code nil nil [48164 48371])
            ("define-lex-analyzer" code nil nil [48373 48913])
            ("define-lex-simple-regex-analyzer" code nil nil [48915 49045])
            ("define-lex-regex-analyzer" code nil nil [49047 49835])
            ("define-lex-regex-analyzer" code nil nil [49837 50105])
            ("define-lex-regex-analyzer" code nil nil [50107 50845])
            ("define-lex-regex-analyzer" code nil nil [50847 51109])
            ("define-lex-simple-regex-analyzer" code nil nil [51111 51333])
            ("define-lex-regex-analyzer" code nil nil [51335 51614])
            ("define-lex-simple-regex-analyzer" code nil nil [51616 51789])
            ("define-lex-simple-regex-analyzer" code nil nil [51791 51934])
            ("define-lex-analyzer" code nil nil [51936 53184])
            ("define-lex-regex-analyzer" code nil nil [53186 53880])
            ("define-lex-simple-regex-analyzer" code nil nil [53882 54079])
            ("define-lex-simple-regex-analyzer" code nil nil [54081 54279])
            ("define-lex-regex-analyzer" code nil nil [54281 54600])
            ("define-lex-regex-analyzer" code nil nil [54602 55256])
            ("define-lex-regex-analyzer" code nil nil [55258 55944])
            ("define-lex-regex-analyzer" code nil nil [55946 56622])
            ("semantic-comment-lexer" function (:lexical-analyzer-flag t) nil [56725 57075])
            ("semantic-simple-lexer" function (:lexical-analyzer-flag t) nil [57095 57598])
            ("define-lex-keyword-type-analyzer" function (:arguments ("name" "doc" "syntax")) nil [57760 58296])
            ("define-lex-sexp-type-analyzer" function (:arguments ("name" "doc" "syntax" "token")) nil [58298 58818])
            ("define-lex-regex-type-analyzer" function (:arguments ("name" "doc" "syntax" "matches" "default")) nil [58820 60076])
            ("define-lex-string-type-analyzer" function (:arguments ("name" "doc" "syntax" "matches" "default")) nil [60078 61655])
            ("define-lex-block-type-analyzer" function (:arguments ("name" "doc" "syntax" "matches")) nil [61657 65453])
            ("semantic-lex-catch-errors" function (:arguments ("symbol" "forms")) nil [65695 67311])
            ("put" code nil nil [67312 67368])
            ("add-hook" code nil nil [67403 68063])
            ("semantic-alias-obsolete" code nil nil [68157 68236])
            ("semantic-alias-obsolete" code nil nil [68237 68312])
            ("semantic-alias-obsolete" code nil nil [68313 68390])
            ("semantic-alias-obsolete" code nil nil [68391 68490])
            ("semantic-alias-obsolete" code nil nil [68491 68572])
            ("semantic-alias-obsolete" code nil nil [68573 68658])
            ("semantic-alias-obsolete" code nil nil [68659 68744])
            ("semantic-alias-obsolete" code nil nil [68745 68832])
            ("semantic-alias-obsolete" code nil nil [68833 68912])
            ("semantic-alias-obsolete" code nil nil [68913 68988])
            ("semantic-alias-obsolete" code nil nil [68989 69060])
            ("semantic-flex-tokens" variable (:default-value semantic-lex-tokens) nil [69283 69406])
            ("semantic-flex-unterminated-syntax-end-function" variable (:default-value (lambda (syntax syntax-start flex-end) flex-end)) nil [69408 69984])
            ("semantic-flex-extensions" variable nil nil [69986 70401])
            ("make-variable-buffer-local" code nil nil [70402 70456])
            ("semantic-flex-syntax-modifications" variable nil nil [70458 70830])
            ("make-variable-buffer-local" code nil nil [70831 70895])
            ("semantic-ignore-comments" variable (:default-value t) nil [70897 71068])
            ("make-variable-buffer-local" code nil nil [71069 71123])
            ("semantic-flex-enable-newlines" variable nil nil [71125 71343])
            ("make-variable-buffer-local" code nil nil [71344 71403])
            ("semantic-flex-enable-whitespace" variable nil nil [71405 71621])
            ("make-variable-buffer-local" code nil nil [71622 71683])
            ("semantic-flex-enable-bol" variable nil nil [71685 71904])
            ("make-variable-buffer-local" code nil nil [71905 71959])
            ("semantic-number-expression" variable (:default-value semantic-lex-number-expression) nil [71961 72078])
            ("make-variable-buffer-local" code nil nil [72079 72135])
            ("semantic-flex-depth" variable nil nil [72137 72245])
            ("make-variable-buffer-local" code nil nil [72246 72295])
            ("semantic-flex" function (:arguments ("start" "end" "depth" "length")) nil [72297 81519])
            ("semantic/lex" package nil nil [81521 81544]))          
      :file "lex.el"
      :pointmax 81695
      :fsize 81694
      :lastmodtime '(21162 51904 690551 0)
      :unmatched-syntax '((close-paren 38272 . 38273) (symbol 37061 . 37077) (open-paren 37060 . 37061)))
    (semanticdb-table "fw.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("mode-local" include nil nil [1137 1158])
            ("eieio" include nil nil [1159 1175])
            ("load" code nil nil [1176 1217])
            ("defalias" code nil nil [5482 5545])
            ("defalias" code nil nil [5322 5426])
            ("defalias" code nil nil [5111 5219])
            ("defalias" code nil nil [4952 5107])
            ("if" code nil nil [1260 4947])
            ("semantic-delete-overlay-maybe" function (:arguments ("overlay")) nil [5551 5740])
            ("semantic-menu-item" function (:arguments ("item")) nil [5773 6274])
            ("semantic-cache-data-overlays" variable nil nil [6305 6394])
            ("semantic-cache-data-to-buffer" function (:arguments ("buffer" "start" "end" "value" "name" "lifespan")) nil [6396 7682])
            ("semantic-cache-data-post-command-hook" function nil nil [7684 8675])
            ("semantic-get-cache-data" function (:arguments ("name" "point")) nil [8677 9126])
            ("semantic-test-data-cache" function (:user-visible-flag t) nil [9128 9683])
            ("semantic-overload-symbol-from-function" function (:arguments ("name")) nil [9733 9997])
            ("semantic-alias-obsolete" function (:arguments ("oldfnalias" "newfn" "when")) nil [9999 10809])
            ("semantic-varalias-obsolete" function (:arguments ("oldvaralias" "newvar" "when")) nil [10811 11433])
            ("semantic-safe" function (:arguments ("format" "body")) nil [11458 12229])
            ("put" code nil nil [12230 12274])
            ("semantic-map-buffers" function (:arguments ("function")) nil [12298 12574])
            ("defalias" code nil nil [12576 12642])
            ("semantic-alias-obsolete" code nil nil [12644 12766])
            ("semantic-install-function-overrides" function (:arguments ("overrides" "transient" "mode")) nil [12768 13819])
            ("semantic-current-input-throw-symbol" variable nil nil [13853 13960])
            ("semantic-exit-on-input" function (:arguments ("symbol" "forms")) nil [13962 14416])
            ("put" code nil nil [14417 14470])
            ("semantic-throw-on-input" function (:arguments ("from")) nil [14472 14911])
            ("semantic-find-file-noselect" function (:arguments ("file" "nowarn" "rawfile" "wildcards")) nil [14952 16805])
            ("semanticdb-without-unloaded-file-searches" function (:arguments ("forms")) nil [16844 17134])
            ("put" code nil nil [17135 17207])
            ("semantic-fw-add-edebug-spec" function nil nil [19487 19578])
            ("add-hook" code nil nil [19580 19638])
            ("semantic/fw" package nil nil [19640 19662]))          
      :file "fw.el"
      :pointmax 19693
      :fsize 19692
      :lastmodtime '(21162 51904 690551 0)
      :unmatched-syntax '((close-paren 5548 . 5549) (symbol 1241 . 1257) (open-paren 1240 . 1241)))
    (semanticdb-table "lex-spp.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("semantic" include nil nil [2259 2278])
            ("semantic/lex" include nil nil [2279 2302])
            ("declare-function" code nil nil [2304 2366])
            ("semantic-lex-spp-macro-symbol-obarray" variable nil nil [2378 2591])
            ("make-variable-buffer-local" code nil nil [2592 2659])
            ("semantic-lex-spp-project-macro-symbol-obarray" variable nil nil [2661 2865])
            ("make-variable-buffer-local" code nil nil [2866 2941])
            ("semantic-lex-spp-dynamic-macro-symbol-obarray" variable nil nil [2943 3228])
            ("make-variable-buffer-local" code nil nil [3229 3304])
            ("semantic-lex-spp-dynamic-macro-symbol-obarray-stack" variable nil nil [3306 3431])
            ("make-variable-buffer-local" code nil nil [3432 3513])
            ("semantic-lex-spp-expanded-macro-stack" variable nil nil [3515 3619])
            ("semantic-lex-with-macro-used" function (:arguments ("name" "body")) nil [3896 4314])
            ("put" code nil nil [4315 4374])
            ("add-hook" code nil nil [4376 4515])
            ("semantic-lex-spp-symbol" function (:arguments ("name")) nil [4742 5577])
            ("semantic-lex-spp-symbol-p" function (:arguments ("name")) nil [5579 5739])
            ("semantic-lex-spp-dynamic-map" function nil nil [5741 5976])
            ("semantic-lex-spp-dynamic-map-stack" function nil nil [5978 6231])
            ("semantic-lex-spp-value-valid-p" function (:arguments ("value")) nil [6233 6474])
            ("semantic-lex-spp-debug-symbol" variable nil nil [6476 6573])
            ("semantic-lex-spp-enable-debug-symbol" function
               (:user-visible-flag t
                :arguments ("sym"))
                nil [6575 6845])
            ("semantic-lex-spp-validate-value" function (:arguments ("name" "value")) nil [6847 7228])
            ("semantic-lex-spp-symbol-set" function (:arguments ("name" "value" "obarray-in")) nil [7230 7646])
            ("semantic-lex-spp-symbol-remove" function (:arguments ("name" "obarray")) nil [7648 7902])
            ("semantic-lex-spp-symbol-push" function (:arguments ("name" "value")) nil [7904 8603])
            ("semantic-lex-spp-symbol-pop" function (:arguments ("name")) nil [8605 9227])
            ("semantic-lex-spp-symbol-stream" function (:arguments ("name")) nil [9229 9414])
            ("semantic-lex-make-spp-table" function (:arguments ("specs")) nil [9416 10079])
            ("semantic-lex-spp-save-table" function nil nil [10081 10513])
            ("semantic-lex-spp-macros" function nil nil [10515 11268])
            ("semantic-lex-spp-set-dynamic-table" function (:arguments ("new-entries")) nil [11270 11551])
            ("semantic-lex-spp-reset-hook" function (:arguments ("start" "end")) nil [11553 11997])
            ("semantic-lex-spp-extract-regex-and-compare" function (:arguments ("analyzer" "value")) nil [12194 12549])
            ("semantic-lex-spp-simple-macro-to-macro-stream" function (:arguments ("val" "beg" "end" "argvalues")) nil [12551 14241])
            ("semantic-lex-spp-one-token-to-txt" function (:arguments ("tok" "blocktok")) nil [14763 16177])
            ("semantic-lex-spp-macro-with-args" function (:arguments ("val")) nil [16179 16410])
            ("semantic-lex-spp-token-macro-to-macro-stream" function (:arguments ("val" "beg" "end" "argvalues")) nil [16412 24632])
            ("semantic-lex-spp-symbol-merge" function (:arguments ("txt")) nil [24634 25292])
            ("semantic-lex-spp-find-closing-macro" function nil nil [25294 26153])
            ("semantic-lex-spp-get-overlay" function (:arguments ("point")) nil [26155 26464])
            ("semantic-lex-spp-merge-streams" function (:arguments ("raw-stream")) nil [26612 27558])
            ("semantic-lex-spp-macro-to-macro-stream" function (:arguments ("val" "beg" "end" "argvalues")) nil [27731 28703])
            ("semantic-lex-spp-anlyzer-do-replace" function (:arguments ("sym" "val" "beg" "end")) nil [28899 30165])
            ("semantic-lex-spp-replacements-enabled" variable (:default-value t) nil [30167 30329])
            ("semantic-lex-spp-analyzer-push-tokens-for-symbol" function (:arguments ("str" "beg" "end")) nil [30331 31897])
            ("define-lex-regex-analyzer" code nil nil [31899 32363])
            ("define-lex-regex-analyzer" code nil nil [32365 33615])
            ("semantic-lex-spp-first-token-arg-list" function (:arguments ("token")) nil [33866 34275])
            ("semantic-lex-spp-one-token-and-move-for-macro" function (:arguments ("max")) nil [34277 34720])
            ("semantic-lex-spp-stream-for-arglist" function (:arguments ("token")) nil [34722 36131])
            ("semantic-lex-spp-hack-depth" variable nil nil [36133 36247])
            ("semantic-lex-spp-lex-text-string" function (:arguments ("text")) nil [36249 38620])
            ("semantic-lex-spp-stream-for-macro" function (:arguments ("eos")) nil [40361 41028])
            ("define-lex-spp-macro-declaration-analyzer" function (:arguments ("name" "doc" "regexp" "tokidx" "valform")) nil [41030 42488])
            ("define-lex-spp-macro-undeclaration-analyzer" function (:arguments ("name" "doc" "regexp" "tokidx")) nil [42490 43317])
            ("semantic-lex-spp-use-headers-flag" variable (:user-visible-flag t) nil [43667 44006])
            ("semantic-lex-spp-merge-header" function (:arguments ("name")) nil [44008 44326])
            ("define-lex-spp-include-analyzer" function (:arguments ("name" "doc" "regexp" "tokidx" "valform")) nil [44328 46039])
            ("semantic-lex-spp-macro-max-length-to-save" variable
               (:user-visible-flag t
                :default-value 200)
                nil [46206 46326])
            ("semantic-lex-spp-table-write-slot-value" function (:arguments ("value")) nil [46343 47393])
            ("semantic-lex-spp-describe" function
               (:user-visible-flag t
                :arguments ("buffer"))
                nil [47420 47990])
            ("add-hook" code nil nil [48015 48413])
            ("semantic/lex-spp" package nil nil [48415 48442]))          
      :file "lex-spp.el"
      :pointmax 48601
      :fsize 48600
      :lastmodtime '(21162 51904 690551 0)
      :unmatched-syntax nil)
    (semanticdb-table "decorate.el"
      :file "decorate.el"
      :fsize 12175
      :lastmodtime '(21162 51904 690551 0))
    (semanticdb-table "tag-ls.el"
      :file "tag-ls.el"
      :fsize 17879
      :lastmodtime '(21162 51904 690551 0))
    (semanticdb-table "util-modes.el"
      :file "util-modes.el"
      :fsize 39083
      :lastmodtime '(21162 51904 690551 0))
    (semanticdb-table "dep.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("semantic/tag" include nil nil [1440 1463])
            ("semantic-dependency-include-path" variable nil nil [1476 2144])
            ("make-variable-buffer-local" code nil nil [2145 2207])
            ("semantic-dependency-system-include-path" variable nil nil [2209 2774])
            ("make-variable-buffer-local" code nil nil [2775 2844])
            ("defcustom-mode-local-semantic-dependency-system-include-path" function (:arguments ("mode" "name" "value" "docstring")) nil [2846 4342])
            ("semantic-add-system-include" function
               (:user-visible-flag t
                :arguments ("dir" "mode"))
                nil [4428 4996])
            ("semantic-remove-system-include" function
               (:user-visible-flag t
                :arguments ("dir" "mode"))
                nil [5013 5678])
            ("semantic-reset-system-include" function
               (:user-visible-flag t
                :arguments ("mode"))
                nil [5695 6021])
            ("semantic-customize-system-include-path" function
               (:user-visible-flag t
                :arguments ("mode"))
                nil [6038 6583])
            ("semantic--dependency-find-file-on-path" function (:arguments ("file" "path")) nil [6653 6980])
            ("ede-minor-mode" variable nil nil [6982 7005])
            ("ede-object" variable nil nil [7006 7025])
            ("declare-function" code nil nil [7026 7074])
            ("semantic-dependency-find-file-on-path" function (:arguments ("file" "systemp" "mode")) nil [7076 8163])
            ("semantic/dep" package nil nil [8166 8189]))          
      :file "dep.el"
      :pointmax 8340
      :fsize 8339
      :lastmodtime '(21162 51904 690551 0)
      :unmatched-syntax nil)
    (semanticdb-table "wisent.el"
      :major-mode 'emacs-lisp-mode
      :tags 
        '( ("semantic" include nil nil [1068 1087])
            ("semantic/wisent/wisent" include nil nil [1088 1121])
            ("wisent-lex-istream" variable nil nil [1148 1232])
            ("wisent-lex-lookahead" variable nil nil [1234 1357])
            ("semantic-alias-obsolete" code nil nil [1467 1583])
            ("wisent-lex-eoi" function nil nil [1585 1811])
            ("define-wisent-lexer" function (:arguments ("name" "doc" "body")) nil [1813 2667])
            ("define-wisent-lexer" code nil nil [2669 3204])
            ("wisent-error-function" variable nil nil [3230 3351])
            ("make-variable-buffer-local" code nil nil [3352 3403])
            ("wisent-lexer-function" variable (:default-value (quote wisent-lex)) nil [3405 3573])
            ("make-variable-buffer-local" code nil nil [3574 3625])
            ("wisent-raw-tag" function (:arguments ("semantic-tag")) nil [3648 4021])
            ("wisent-cook-tag" function (:arguments ("raw-tag")) nil [4023 4398])
            ("wisent-collect-unmatched-syntax" function (:arguments ("nomatch")) nil [4433 5000])
            ("wisent-parse-stream" function (:arguments ("stream" "goal")) nil [5546 9973])
            ("wisent-parse-region" function (:arguments ("start" "end" "goal" "depth" "returnonerror")) nil [9975 12865])
            ("add-hook" code nil nil [12899 13042])
            ("semantic/wisent" package nil nil [13044 13070]))          
      :file "wisent.el"
      :pointmax 13105
      :fsize 13104
      :lastmodtime '(21162 51904 690551 0)
      :unmatched-syntax nil))
  :file "!home!dearn!.emacs.d!site-lisp!cedet-bzr!lisp!cedet!semantic!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
